#
# Contract Formation Action:  This txn is created by the contract (smart contract/off-chain agent/token contract) upon receipt of a valid Contract Offer Action from the administration.  The smart contract will execute on a server controlled by the administration, or a smart contract operator on their behalf.
#

code: C2
name: ContractFormation
label: Contract Formation
description: "This txn is created by the contract (smart contract/off-chain agent/token contract) upon receipt of a valid Contract Offer Action from the administration.  The smart contract will execute on a server controlled by the administration, or a smart contract operator on their behalf."

metadata:
  validation: AssetCreation
  rejection: Rejection

  inputs:
    - name: Contract
      label: Contract Public Address
      comments: "The related contract address."

  outputs:
    - name: Contract
      label: Contract Public Address
      comments: "Required so that users can monitor transactions to the contract for updates to contract/assets."

fields:
  - name: ContractName
    label: Contract Name
    description: >
      Can be any unique identifying string, including human readable names for branding/vanity purposes.
      Contract identifier (instance) is the bitcoin public key hash address.
      If the public address is lost, then the administration will have to reissue the entire contract, asset definition and tokens with the new public address.
      Smart contracts can be branded and specialized to suit any terms and conditions.
    type: varchar
    example: "Tesla - Shareholder Agreement"

  - name: BodyOfAgreementType
    label: Body of Agreement Type
    description: "0 - No Body of agreement included, 1 - SHA-256 Hash, 2 - Tokenized Body of Agreement Format"
    type: uint
    size: 1
    example: "1"
    notes: "Body of Agreement - Amendments can be restricted to a vote."
    options:
      - 0
      - 1
      - 2

  - name: BodyOfAgreement
    label: Body of Agreement
    description: "SHA-256 hash of the body of the agreement (full contract in pdf format or the like) or the full terms and conditions of an agreement in the Tokenized Body of Agreement format.  This is specific to the smart contract and relevant Assets.  Legal and technical information."
    type: varbin
    varSize: medium

  - name: ContractType
    label: Contract Type
    description: "Describes the purpose of the contract."
    type: varchar
    example: "Shareholder Agreement"

  - name: SupportingDocs
    label: Supporting Documentation
    description: "Supporting documents that are important to the contract."
    type: Document[]

  - name: GoverningLaw
    label: Governing Law
    description: "5 Letter Code to identify which governing law the contract will adhere to.  Disputes are to be settled by this law in the jurisdiction specified below. Private dispute resolution organizations can be used as well.  A custom code just needs to be defined."
    type: fixedchar
    size: 5
    example: "USA"
    notes: "Governing Law - Amendments can be restricted to a vote."

  - name: Jurisdiction
    label: Jurisdiction
    description: "Legal proceedings/arbitration will take place using the specified Governing Law in this location."
    type: fixedchar
    size: 5
    example: "US-CA"
    notes: "Jurisdiction - Amendments can be restricted to a vote."

  - name: ContractExpiration
    label: Contract Expiration
    description: "All actions related to the contract will cease to work after this timestamp. The smart contract will stop running.  This will allow many token use cases to be able to calculate smart contract running costs. Eg. an issuer is creating tickets for an event on the 5th of June 2018.  The smart contract will facilitate exchange and send transactions up until the 6th of June.  Wallets can use this to forget tokens that are no longer valid - or at least store them in an 'Expired' folder."
    type: Timestamp
    notes: "Contract Expiration - Amendments can be restricted to a vote."

  - name: ContractURI
    label: Contract URI
    description: "Length 0-255 bytes.  0 is valid. Points to an information page that also has a copy of the Contract.  Anyone can go to the website to have a look at the price/token, information about the Issuer (company), information about the Asset, legal information, etc.  There will also be a way for Token Owners to vote on this page and contact details with the Issuer/tokenized companies. Could be a IPv6/IPv4, an IPFS address (hash) or txn-id for on chain information or even a public address (DNS)."
    type: varchar
    example: "https://tokenized.com/Contract/3qeoSCg7JmfSnJesJFojj"

  - name: Issuer
    label: Issuer
    description: "The issuer of this contract."
    type: Entity

  - name: IssuerLogoURL
    label: Issuer Logo URL
    description: "The URL of the issuer's logo."
    type: varchar
    example: "https://example.tld/images/logo.png"

  - name: ContractOperator
    label: Contract Operator
    description: "An additional entity with operator access to the contract."
    type: Entity

  - name: AdminOracle
    label: Administration Oracle
    type: Oracle
    description: "The oracle that provided the signature used to verify the administration's identity."

  - name: AdminOracleSignature
    label: Administration Oracle Signature
    type: varbin
    description: "The ECDSA signature provided by the oracle specified. The first input must correspond to the administration entity and, if a contract operator is included, the second input must correspond to the contract operator entity."

  - name: AdminOracleSigBlockHeight
    label: Administration Oracle Signature Block height
    description: The block height of the block hash used in the oracle signature.
    type: uint
    size: 4

  - name: ContractFee
    label: Contract Fee
    description: "Satoshis required to be paid to the contract for each asset action."
    type: uint
    size: 8

  - name: VotingSystems
    label: Voting Systems
    description: "A list voting systems."
    type: VotingSystem[]

  - name: ContractPermissions
    label: Contract Permissions
    description: "A set of permission objects containing switches and field references that define the permissions for modifying this contract. See the Permission documentation for more detail."
    type: varbin
    varSize: small

  - name: RestrictedQtyAssets
    label: Restricted Qty of Assets
    description: "Number of Assets (non-fungible) permitted on this contract. 0 if unlimited which will display an infinity symbol in UI"
    type: uint
    size: 8
    example: "1"
    notes: "Qty of Assets - Amendments can be restricted to a vote."

  - name: AdministrationProposal
    label: Administration Proposal
    description: "Set to true if the administration is permitted to make proposals outside of the smart contract scope."
    type: bool
    example: true
    notes: "General Governance"

  - name: HolderProposal
    label: Holder Proposal
    description: "Set to true if a holder is permitted to make proposals outside of the smart contract scope."
    type: bool
    example: true

  - name: Oracles
    label: Oracles
    description: "A list of oracles that provide approval for all token transfers for all assets under the contract."
    type: Oracle[]

  - name: MasterAddress
    label: Master Address
    description: "The address of the contract's master key. This key has the ability to change the active contract address in case of a security failure with the active contract key."
    type: Address

  - name: ContractRevision
    label: Contract Revision
    description: "A counter for the number of times this contract has been revised using an amendment action."
    type: uint
    size: 4
    example: "0"
    notes: "Can't be changed by the administration or smart contract operator."

  - name: Timestamp
    label: Timestamp
    description: "Timestamp in nanoseconds of when the smart contract created the action."
    type: Timestamp
    notes: "Cannot be changed by the administration, operator. Smart contract controls."
