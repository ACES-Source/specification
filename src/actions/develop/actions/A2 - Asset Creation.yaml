#
# Asset Creation Action: This action creates an asset in response to the administration's instructions in the Definition Action.
#

code: A2
name: AssetCreation
label: Asset Creation
description: "This action creates an asset in response to the administration's instructions in the Definition Action."

metadata:
  validation: AssetCreation
  rejection: Rejection

  inputs:
    - name: Contract
      label: "Contract Public Address"
      comments: "The contract that this asset was assigned to."

  outputs:
    - name: Contract
      label: "Contract Public Address"
      comments: "Required so that users can monitor transactions to the contract for updates to contract/assets."

fields:
  - name: AssetCode
    label: Asset Code
    description: A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)
    type: AssetCode
    notes: "Cannot be changed by the administration, operator or smart contract."

  - name: AssetIndex
    label: Asset Index
    description: The index of the asset within the contract. First asset is zero, second is one. Used to derive the asset code.
    type: uint
    size: 8
    example: 0

  - name: AssetPermissions
    label: Asset Permissions
    description: "A set of permission objects containing switches and field references that define the permissions for modifying this asset. See the Permission documentation for more detail."
    type: varbin
    varSize: small

  - name: TransfersPermitted
    label: Transfers Permitted
    description: "Deprecated to move into specific asset types. Set to true if transfers are permitted between two parties, otherwise set to false to prevent peer-to-peer transfers."
    type: deprecated

  - name: TradeRestrictionsDeprecated
    label: Trade Restrictions
    description: "Deprecated to remove fixed size. If specified, the asset can only be traded within the specified trade restriction zone. For example, AUS would restrict to Australian residents only."
    type: deprecated

  - name: EnforcementOrdersPermitted
    label: Enforcement Orders Permitted
    description: "Set to true if the administration is permitted to make enforcement orders on user tokens and balances, otherwise set to false to disable this feature."
    type: bool
    example: true

  - name: VotingRights
    label: Voting Rights
    description: "When false holders of this asset will not be able to vote for tokens of this asset even on voting systems in which vote multiplers are not permitted."
    type: bool
    example: true

  - name: VoteMultiplier
    label: Vote Multiplier
    description: "Multiplies a vote by the specified integer. Where 1 token is equal to 1 vote with a 1 for vote multipler (normal), 1 token = 3 votes with a multiplier of 3, for example. If zero, then holders of this asset don't get any votes for their tokens."
    type: uint
    size: 1
    example: "3"

  - name: AdministrationProposal
    label: Administration Proposal
    description: "Set to true if the administration is permitted to make proposals outside of the smart contract scope."
    type: bool
    example: true
    notes: "General Governance"

  - name: HolderProposal
    label: Holder Proposal
    description: "Set to true if a holder is permitted to make proposals outside of the smart contract scope."
    type: bool
    example: true

  - name: AssetModificationGovernance
    label: Asset Modification Governance
    description: "Supported values: 1 - Contract-wide Asset Governance.  0 - Asset-wide Asset Governance.  If a referendum or initiative is used to propose a modification to a subfield controlled by the asset permissions, then the vote will either be a contract-wide vote (all assets vote on the referendum/initiative) or an asset-wide vote (only this asset votes on the referendum/initiative) depending on the value in this subfield.  The voting system specifies the voting rules."
    type: uint
    size: 1
    options:
      - 0
      - 1
    example: "1"

  - name: AuthorizedTokenQty
    label: Authorized Token Quantity
    description: "The number of tokens to issue with this asset. Set to greater than zero for fungible tokens. If the value is 1 then it becomes a non-fungible token, where the contract would have many assets. Set to 0 to represent a placeholder asset, where tokens are to be issued later, or to represent a decomissioned asset where all tokens have been revoked."
    type: uint
    size: 8
    example: "1000000"

  - name: AssetType
    label: Asset Type
    description: "A code representing the type of asset and the structure of the payload."
    type: AssetType

  - name: AssetPayload
    label: Asset Payload
    description: "A custom payload that contains meta data about this asset. Payload structure and length is dependent on the asset type chosen. See asset documentation for more details."
    type: varbin
    varSize: small

  - name: AssetRevision
    label: Asset Revision
    description: "A counter for the number of times this asset has been revised using a modification action."
    type: uint
    size: 4
    example: "456789"
    notes: "Can't be changed by the administration, operator. Smart contract controls."

  - name: Timestamp
    label: Timestamp
    description: "Timestamp in nanoseconds of when the smart contract created the action."
    type: Timestamp
    notes: "Can't be changed by the administration, operator. Smart contract controls."

  - name: TradeRestrictions
    label: Trade Restrictions
    description: "If specified, the asset can only be traded within the specified trade restriction zone. For example, AUS would restrict to Australian residents only."
    type: Polity[]
    listSize: small
