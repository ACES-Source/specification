#
# Rejection Action: used to reject Exchange, Send, Initiative, Referendum, Order, and Ballot Cast actions that do not comply with the Contract. If money is to be returned to a User then it is used in lieu of the Settlement Action to properly account for token balances. All Issuer/User Actions must be responded to by the Contract with an Action.  The only exception to this rule is when there is not enough fees in the first Action for the Contract response action to remain revenue neutral.  If not enough fees are attached to pay for the Contract response then the Contract will not respond. For example: Send and Exchange Actions must be responded to by the Contract with either a Settlement Action or a Rejection Action.
#

code: M2

metadata:
  name: Rejection
  label: Rejection Action
  description: "Rejection Action -  used to reject Exchange, Send, Initiative, Referendum, Order, and Ballot Cast actions that do not comply with the Contract. If money is to be returned to a User then it is used in lieu of the Settlement Action to properly account for token balances. All Issuer/User Actions must be responded to by the Contract with an Action.  The only exception to this rule is when there is not enough fees in the first Action for the Contract response action to remain revenue neutral.  If not enough fees are attached to pay for the Contract response then the Contract will not respond. For example: Send and Exchange Actions must be responded to by the Contract with either a Settlement Action or a Rejection Action."
  validation: AssetCreation
  rejection: Rejection

rules:
  fee:
  inputs:
    - name:
      label: Contract Public Address
      comments:

  outputs:
    - name:
      label: "User's Public Address"
      comments: Return the money less fees

    - name:
      label: OP_RETURN (Rejection Action)
      comments: Only one Tokenized action (excluding Message actions) per txn.  Action payload is always the last index of the txn outputs.  There is no limit to the number of M1 (message) actions per txn.

    - name:
      label: "Miner's Fee"
      comments: "~550-1000 Bytes to account for return data and txn data."

    - name:
      label:
      comments:

fields:
  - name: Header
    label: Header
    description: "Common header data for all messages"
    type: Header
    notes: "Common header data for all messages."

  - name: TextEncoding
    label: Text Encoding
    description: " 0 = ASCII, 1 = UTF-8, 2 = UTF-16, 3 = Unicode.  Encoding applies to all 'text' data types. All 'string' types will always be encoded with ASCII.  Where string is selected, all fields will be ASCII."
    type: uint8
    size: 1
    example_hex: 00
    example_value: "0"
    notes: "Can be changed by Issuer or Operator at their discretion."

  - name: QtyReceivingAddresses
    label: Qty Receiving Addresses
    description: "0-255 Message Receiving Addresses"
    type: uint8
    size: 1
    example_hex: 02
    example_value: 2
    notes: ""

  - name: AddressIndexes
    label: Address Indexes
    description: "Associates the message to a particular output by the index."
    type: uint16[]
    example_hex: 00010002

  - name: RejectionType
    label: Rejection Type
    description: "Classifies the rejection by a type."
    type: uint8
    size: 1
    example_hex: 01
    example_value: "1"
    notes: ""

  - name: MessagePayload
    label: Message Payload
    description: "Length 0-65,535 bytes. Message that explains the reasoning for a rejection, if needed.  Most rejection types will be captured by the Rejection Type Subfield."
    type: nvarchar16
    example_hex: 0024536f7272792c20796f7520646f6e2774206861766520656e6f75676820746f6b656e732e
    example_value: "Sorry, you don't have enough tokens."
    notes: ""

  - name: Timestamp
    label: Timestamp
    description: "Timestamp in nanoseconds of when the smart contract created the action."
    type: timestamp
    size: 8
    example_hex: 1588f8cc6a16430d
    example_value: 1551767413250187179
    notes: "Cannot be changed by issuer, operator. Smart contract controls."
