#
# Swap Action: Two parties (or more) want to swap a token (Atomic Swap) directly for another token.  BSV is used in the txn other than for paying the necessary network/transaction fees.


code: T3

metadata:
  name: Swap
  label: Swap Action
  description: "Swap Action -  Two (or more) parties want to swap a token (Atomic Swap) directly for another token.  BSV is not used in the transaction other than for paying the necessary network/transaction fees."
  validation: AssetCreation
  rejection: Rejection

rules:
  fee:
  inputs:
    - name:
      label: Asset 1 Sending Address X
      comments:

    - name:
      label: Asset 1 Sending Address X
      comments:

    - name:
      label: Asset 2 Sending Address X
      comments:

    - name:
      label: Asset 2 Sending Address X
      comments:

  outputs:
    - name:
      label: "Contract Public Address (Asset 1)"
      comments: Enough for the responding action.

    - name:
      label: "Contract Public Address (Asset 2)"
      comments: Enough for the responding action.

    - name:
      label: Asset 1 Receiving Address X
      comments: Change

    - name:
      label: Asset 1 Receiving Address X
      comments: Change

    - name:
      label: Asset 1 Receiving Address X
      comments: Change

    - name:
      label: Asset 2 Receiving Address X
      comments: Change

    - name:
      label: Asset 2 Receiving Address X
      comments:

    - name:
      label: OP_RETURN (Swap Action)
      comments: Only one Tokenized action (excluding Message (M1) actions) per txn.  Action payload is always the last index of the txn outputs.  There is no limit to the number of M1 (message) actions per txn.

    - name:
      label: "Miner's Fee"
      comments: "~550-1000 Bytes to account for return data and txn data."

fields:
  - name: Header
    label: Header
    description: "Common header data for all messages"
    type: Header
    notes: "Common header data for all messages."

  - name: TextEncoding
    label: Text Encoding
    description: " 0 = ASCII, 1 = UTF-8, 2 = UTF-16, 3 = Unicode.  Encoding applies to all 'text' data types. All 'string' types will always be encoded with ASCII.  Where string is selected, all fields will be ASCII."
    type: uint8
    size: 1
    example_hex: 00
    example_value: "0"
    notes: "Can be changed by Issuer or Operator at their discretion."

  - name: AssetType1
    label: Asset Type 1
    description: "To be swapped for Asset2."
    type: string
    size: 3
    example_hex: 525245
    example_value: "RRE"
    notes: ""

  - name: AssetID1
    label: Asset ID 1
    description: "To be swapped for Asset2."
    type: string
    size: 32
    example_hex: 72616e3271737a6e68697335337a000000000000000000000000000000000000
    example_value: "ran2qsznhis53z"
    notes: ""

  - name: AssetType2
    label: Asset Type 2
    description: "To be swapped for Asset1."
    type: string
    size: 3
    example_hex: 534843
    example_value: "SHC"
    notes: ""

  - name: AssetID2
    label: Asset ID 2
    description: "To be swapped for Asset1."
    type: string
    size: 32
    example_hex: 61706d3271737a6e686b7332337a000000000000000000000000000000000000
    example_value: "apm2qsznhks23z"
    notes: ""

  - name: OfferExpiry
    label: Offer Expiry
    description: "This prevents either party from holding on to the partially signed message as a form of an option.  Eg. the exchange at this price is valid for 30 mins."
    type: time
    size: 8
    example_hex: 0000016331e3c200
    example_value: "Sun May 06 2018 06:00:00 GMT+1000 (AEST)"
    notes: ""

  - name: ExchangeFeeCurrency
    label: Exchange Fee Currency
    description: "BSV, USD, AUD, EUR, etc."
    type: string
    size: 3
    example_hex: 415544
    example_value: "AUD"
    notes: ""

  - name: ExchangeFeeVar
    label: Exchange Fee Variable
    description: "Percent of the value of the transaction"
    type: float32
    size: 4
    example_hex: 3ba3d70a
    example_value: "0.005"
    notes: ""

  - name: ExchangeFeeFixed
    label: Exchange Fee Fixed
    description: "Fixed fee"
    type: float32
    size: 4
    example_hex: 3c23d70a
    example_value: "0.01"
    notes: ""

  - name: ExchangeFeeAddress
    label: Exchange Fee Address
    description: "Identifies the public address that the exchange fee should be paid to."
    type: string
    size: 34
    example_hex: 31485132554c7544375435796b6175635a334b6d546f346932393932355161366963
    example_value: "1HQ2ULuD7T5ykaucZ3KmTo4i29925Qa6ic"
    notes: ""

  - name: Asset1SenderCount
    label: Qty of Asset 1 Sending Addresses
    description: "Asset 1 Sending Addresses"
    type: uint8
    size: 1
    example_hex: 00
    example_value: 0
    notes: ""

  - name: Asset1Senders
    label: Asset 1 Senders
    description: "Each element has the quantity of Asset1 tokens to be sent by the input address, which is referred to by the index."
    type: QuantityIndex[]

  - name: Asset1ReceiverCount
    label: Qty of Asset 1 Receiving Addresses
    description: ""
    type: uint8
    size: 1
    example_hex: 00
    example_value: 0
    notes: ""

  - name: Asset1Receivers
    label: Asset 1 Receivers
    description: "Each element has the quantity of Asset 1 tokens to be received by the output address, which is referred to by the index."
    type: TokenReceiver[]

  - name: Asset2SenderCount
    label: Qty of Asset 2 Sending Addresses
    description: "Asset 2 Sending Addresses"
    type: uint8
    size: 1
    example_hex: 00
    example_value: 0
    notes: ""

  - name: Asset2Senders
    label: Asset 2 Senders
    description: "Each element has the quantity of Asset2 tokens to be sent by the input address, which is referred to by the index."
    type: QuantityIndex[]

  - name: Asset2ReceiverCount
    label: Qty of Asset 2 Receiving Addresses
    description: ""
    type: uint8
    size: 1
    example_hex: 00
    example_value: 0
    notes: ""

  - name: Asset2Receivers
    label: Asset 2 Receivers
    description: "Each element contains the quantity of Asset 2 tokens to be received by the output address, which is referred to by the index."
    type: TokenReceiver[]
