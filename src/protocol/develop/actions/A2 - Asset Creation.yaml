#
# Asset Creation Action: This action creates an Asset in response to the Issuer's instructions in the Definition Action.
#

code: A2

metadata:
  name: AssetCreation
  label: Asset Creation Action
  description: "Asset Creation Action -  This action creates an Asset in response to the Issuer's instructions in the Definition Action."
  validation: AssetCreation
  rejection: Rejection

rules:
  fee:
  inputs:
    - name: Contract
      label: "Contract Public Address"
      comments:

  outputs:
    - name: Contract
      label: "Contract Public Address"
      comments: "Required so that users can monitor transactions to the contract for updates to contract/assets."

fields:
  - name: Header
    label: "Header"
    description: "Common header data for all actions"
    type: Header
    notes: "Common header data for all actions. Can be changed by Issuer or Operator at their discretion."

  - name: AssetType
    label: Asset Type
    description: "eg. Share - Common"
    type: fixedchar
    size: 3
    example_hex: 534843
    example_value: "SHC"
    notes: ""

  - name: AssetCode
    label: Asset Code
    description: "32 randomly generated bytes.  Each Asset Code should be unique.  However, an Asset Code is always linked to a Contract that is identified by the public address of the Contract wallet. The Asset Type + Asset Code = Asset Code.  An Asset Code is a human readable identifier that can be used in a similar way to a Bitcoin (BSV) address."
    type: AssetCode
    example_hex: 61706d3271737a6e686b7332337a386438337534317338303139687972693369
    notes: "Cannot be changed by issuer, operator or smart contract."

  - name: AssetAuthFlags
    label: Asset Authorization Flags
    description: "Authorization Flags,  bitwise operation"
    type: varbin
    size: 8
    example_hex: 00000000000011bf
    example_value: "0000000000000000000000000000000000000000000000000001000110111111"
    notes: ""

  - name: TransfersPermitted
    label: Transfers Permitted
    description: "1 = Transfers are permitted.  0 = Transfers are not permitted."
    type: bool
    example_hex: 01
    example_value: 1
    notes: ""

  - name: TradeRestrictions
    label: Trade Restrictions
    description: "Asset can only be traded within the trade restrictions.  Eg. AUS - Australian residents only.  EU - European Union residents only."
    type: Polity[]
    size: 16
    example_hex: 474252
    example_value: "GBR"
    notes: ""

  - name: EnforcementOrdersPermitted
    label: Enforcement Orders Permitted
    description: "1 = Enforcement Orders are permitted. 0 = Enforcement Orders are not permitted."
    type: bool
    example_hex: 01
    example_value: 1
    notes: ""

  - name: VotingRights
    label: Voting Rights
    description: "When false holders of this asset will not be able to vote for tokens of this asset even on voting systems in which vote multiplers are not permitted."
    type: bool

  - name: VoteMultiplier
    label: Vote Multiplier
    description: "Multiplies the vote by the integer. 1 token = 1 vote with a 1 for vote multipler (normal).  1 token = 3 votes with a multiplier of 3, for example."
    type: uint
    size: 1
    example_hex: 03
    example_value: "3"
    notes: ""

  - name: IssuerProposal
    label: Issuer Proposal
    description: "An Issuer is permitted to make proposals (outside of smart contract scope)."
    type: bool
    example_hex: 01
    example_value: true
    notes: "General Governance"

  - name: HolderProposal
    label: Holder Proposal
    description: "A holder is permitted to make proposals (outside of smart contract scope)."
    type: bool
    example_hex: 01
    example_value: true
    notes: ""

  - name: AssetModificationGovernance
    label: Asset Modification Governance
    description: "1 - Contract-wide Asset Governance.  0 - Asset-wide Asset Governance.  If a referendum or initiative is used to propose a modification to a subfield controlled by the asset auth flags, then the vote will either be a contract-wide vote (all assets vote on the referendum/initiative) or an asset-wide vote (all assets vote on the referendum/initiative).  The voting system specifies the voting rules."
    type: bool
    example_hex: 01
    example_value: "1"
    notes: ""

  - name: TokenQty
    label: Qty of Tokens
    description: "Quantity of token - 0 is valid. Fungible 'shares' of the Asset. 1 is used for non-fungible tokens.  Asset Codes become the non-fungible Asset Code and many Asset Codes can be associated with a particular Contract."
    type: uint
    size: 8
    example_hex: 00000000000f4240
    example_value: "1000000"
    notes: ""

  - name: AssetPayload
    label: Asset Payload
    description: "Payload length is dependent on the asset type. Each asset is made up of a defined set of information pertaining to the specific asset type, and may contain fields of variable length type (nvarchar8, 16, 32)"
    type: varbin
    # varbin size is number of bits to serialize the size of the data
    size: 16
    example_hex: 736f6d652064617461
    example_value: "some data"
    notes: ""

  - name: Asset Revision
    label: Asset Revision
    description: "Counter 0 to (2^32)-1"
    type: uint
    size: 4
    example_hex: 00000000000011bf
    example_value: "0000000000000000000000000000000000000000000000000001000110111111"
    notes: ""

  - name: Timestamp
    label: Timestamp
    description: "Timestamp in nanoseconds of when the smart contract created the action."
    type: Timestamp
    example_hex: 1588f8cc6a16430d
    example_value: 1551767413250187179
    notes: "Cannot be changed by issuer, operator. Smart contract controls."
