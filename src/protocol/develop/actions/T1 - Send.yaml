#
# Send Action: A Token Owner Sends a Token to a Receiver. The Send Action requires no sign-off by the Token Receiving Party and does not provide any on-chain consideration to the Token Sending Party.  Can be used for redeeming a ticket, coupon, points, etc.
#

code: T1

metadata:
  name: Send
  label: Send Action
  description: "Send Action -  A Token Owner Sends a Token to a Receiver. The Send Action requires no sign-off by the Token Receiving Party and does not provide any on-chain consideration to the Token Sending Party.  Can be used for redeeming a ticket, coupon, points, etc."
  validation: AssetCreation
  rejection: Rejection

rules:
  fee:
  inputs:
    - name: TokenSenderX
      label: Token Sending Public Address X
      comments:

  outputs:
    - name: Contract
      label: Contract Public Address
      comments: Enough for the costs of the responding action + the Contract Fee

    - name: TokenReceiverX
      label: "Token Receiver's Public Address X"
      comments: Token Output Address X (Token Receiver).

fields:
  - name: Header
    label: Header
    description: "Common header data for all actions"
    type: Header
    notes: "Common header data for all actions."

  - name: TextEncoding
    label: Text Encoding
    description: " 0 = ASCII, 1 = UTF-8, 2 = UTF-16, 3 = Unicode.  Encoding applies to all 'text' data types. All 'string' types will always be encoded with ASCII.  Where string is selected, all fields will be ASCII."
    type: uint8
    size: 1
    example_hex: 00
    example_value: "0"
    notes: "Can be changed by Issuer or Operator at their discretion."

  - name: AssetType
    label: Asset Type
    description: "eg. Share, Bond, Ticket. All characters must be capitalised."
    type: string
    size: 3
    example_hex: 534843
    example_value: "SHC"
    notes: ""

  - name: AssetID
    label: Asset ID
    description: "Randomly generated base58 string.  Each Asset ID should be unique.  However, a Asset ID is always linked to a Contract that is identified by the public address of the Contract wallet. The Asset Type can be the leading bytes - a convention - to make it easy to identify that it is a token by humans."
    type: string
    size: 32
    example_hex: 61706d3271737a6e686b7332337a386438337534317338303139687972693369
    example_value: "apm2qsznhks23z8d83u41s8019hyri3i"
    notes: ""

  - name: TokenSenderCount
    label: Token Sender Count
    description: "Number inputs sending tokens. 1-255, 0 is not valid."
    type: uint8
    size: 1
    example_hex: 00
    example_value: 0
    notes: ""

  - name: TokenSenders
    label: Token Senders
    description: "Each element has the value of tokens to be spent from the input address, which is referred to by the index."
    type: QuantityIndex[]

  - name: TokenReceiverCount
    label: "The number of token receivers"
    description: "Number of outputs receiving tokens. 1-255. 0 is not valid."
    type: uint8
    size: 1
    example_hex: 00
    example_value: 0
    notes: ""

  - name: TokenReceivers
    label: Token Receivers
    description: "Each element has the value of tokens to be received by the output address, which is referred to by the index."
    type: TokenReceiver[]
