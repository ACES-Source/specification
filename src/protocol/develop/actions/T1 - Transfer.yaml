#
# Transfer Action: A Token Owner(s) transfers a token(s) or Bitcoin for a token(s) or Bitcoin.  Can be as simple as sending a single token to a receiver.  Or can be as complex as many senders sending many different assets - controlled by many different smart contracts - to a number of receivers.  This action also supports atomic swaps (tokens for tokens).  Since many parties and contracts can be involved in a transfer and the corresponding settlement action, the partially signed T1 and T2 actions will need to be passed around on-chain with an M1 action, or off-chain.  
#

code: T1

metadata:
  name: Transfer
  label: Transfer Action
  description: "A Token Owner(s) Sends, Excahnges or Swaps a token(s) or Bitcoin for a token(s) or Bitcoin.  Can be as simple as sending a single token to a receiver.  Or can be as complex as many senders sending many different assets - controlled by many different smart contracts - to a number of receivers.  This action also supports atomic swaps (tokens for tokens).  Since many parties and contracts can be involved in a transfer and the corresponding settlement action, the partially signed T1 and T2 actions will need to be passed around on-chain with an M1 action, or off-chain."
  validation: AssetCreation
  rejection: Rejection

rules:
  fee:
  inputs:
    - name: AssetXSenderX
      label: Asset (token) Sending Public Address X
      comments:

  outputs:
    - name: AssetXContract
      label: Contract Public Address for Asset X 
      comments: Enough for the costs of the responding action + the Contract Fee

    - name: AssetXReceiverX
      label: Asset (token) Receiving Public Address X
      comments: Token Output Address X (Token Receiver).

fields:
  - name: Header
    label: Header
    description: "Common header data for all actions"
    type: Header
    notes: "Common header data for all actions."

  - name: TextEncoding
    label: Text Encoding
    description: " 0 = ASCII, 1 = UTF-8, 2 = UTF-16, 3 = Unicode.  Encoding applies to all 'text' data types. All 'string' types will always be encoded with ASCII.  Where string is selected, all fields will be ASCII."
    type: uint8
    size: 1
    example_hex: 00
    example_value: "0"
    notes: "Can be changed by Issuer or Operator at their discretion."

  - name: AssetCount
    label: Asset Count
    description: "The number of Assets involved in the Transfer Action."
    type: uint8
    size: 1
    example_hex: 534843
    example_value: "4"
    notes: ""

  - name: AssetTypeX
    label: Asset Type X
    description: "eg. Share, Bond, Ticket. All characters must be capitalised."
    type: string
    size: 3
    example_hex: 534843
    example_value: "SHC"
    notes: ""

  - name: AssetIDX
    label: Asset ID X
    description: "Randomly generated base58 string.  Each Asset ID should be unique.  However, a Asset ID is always linked to a Contract that is identified by the public address of the Contract wallet. The Asset Type can be the leading bytes - a convention - to make it easy to identify that it is a token by humans."
    type: string
    size: 32
    example_hex: 61706d3271737a6e686b7332337a386438337534317338303139687972693369
    example_value: "apm2qsznhks23z8d83u41s8019hyri3i"
    notes: ""

  - name: AssetXSenderCount
    label: Token Sender Count
    description: "Number inputs sending tokens. 1-255, 0 is not valid."
    type: uint8
    size: 1
    example_hex: 00
    example_value: 0
    notes: ""

  - name: AssetXSenders
    label: Asset X Senders
    description: "Each element has the value of tokens to be spent from the input address, which is referred to by the index."
    type: QuantityIndex[]

  - name: AssetXReceiverCount
    label: "The number of token receivers"
    description: "Number of outputs receiving tokens. 1-255. 0 is not valid."
    type: uint8
    size: 1
    example_hex: 00
    example_value: 0
    notes: ""

  - name: AssetXReceivers
    label: Token Receivers
    description: "Each element has the value of tokens to be received by the output address, which is referred to by the index."
    type: TokenReceiver[]
    
  - name: OfferExpiry
    label: Offer Expiry
    description: "This prevents any party from holding on to the partially signed message as a form of an option.  Eg. the exchange at this price is valid for 30 mins."
    type: time
    size: 8
    example_hex: 0000016331e3c200
    example_value: "Sun May 06 2018 06:00:00 GMT+1000 (AEST)"
    notes: ""

 - name: ExchangeFeeCurrency
    label: Exchange Fee Currency
    description: "BSV, USD, AUD, EUR, etc."
    type: string
    size: 3
    example_hex: 415544
    example_value: "AUD"
    notes: ""

  - name: ExchangeFeeVar
    label: Exchange Fee Variable
    description: "Percent of the value of the transaction"
    type: float32
    size: 4
    example_hex: 3ba3d70a
    example_value: "0.005"
    notes: ""

  - name: ExchangeFeeFixed
    label: Exchange Fee Fixed
    description: "Fixed fee"
    type: float32
    size: 4
    example_hex: 3c23d70a
    example_value: "0.01"
    notes: ""

  - name: ExchangeFeeAddress
    label: Exchange Fee Address
    description: "Identifies the public address that the exchange fee should be paid to."
    type: string
    size: 34
    example_hex: 31485132554c7544375435796b6175635a334b6d546f346932393932355161366963
    example_value: "1HQ2ULuD7T5ykaucZ3KmTo4i29925Qa6ic"
    notes: ""
