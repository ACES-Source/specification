
description:  >
  Once a vote has been completed the results are published. After the result is posted, it is up to
  the administration to send a contract/asset amendement if appropriate.
type: object
properties:
  AssetType:
    description: Three letter character that specifies the asset type.
    type: string
    example: "SHC"
  AssetCode:
    description:  >
      A unique code that is used to identify the asset. It is generated by hashing the contract
      public key hash and the asset index. SHA256(contract PKH + asset index)
    type: string
    example: "0e6996402ea456156838652e3bd82c6c0986ef79"
  ProposedAmendments:
    description:  >
      Each element contains details of which fields to modify, or delete. Because the number of
      fields in a Contract and Asset is dynamic due to some fields being able to be repeated, the
      index value of the field needs to be calculated against the Contract or Asset the changes are
      to apply to. In the event of a Vote being created from this Initiative, the changes will be
      applied to the version of the Contract or Asset at that time.
    type: array
    items:
      type: object
      $ref: "#/components/schemas/AmendmentField"
  VoteTxId:
    description: Link to the Vote Action txn.
    type: string
    example: "9d1ef0b1201c1dec3c1eb1caf758a988205226173e988e7a04afb4ea9977f506"
  OptionTally:
    description:  >
      List of number of valid votes counted for each vote option. Length is encoded like a regular
      list object, but must match the length of VoteOptions from the Proposal action.
    type: array
    items:
      type: number
  Result:
    description:  >
      Length 1-255 bytes. 0 is not valid. The Option with the most votes. In the event of a draw for
      1st place, all winning options are listed.
    type: string
  Timestamp:
    description: Timestamp in nanoseconds of when the smart contract created the action.
    type: number
    example: 1594668650000000000

