{
  "fieldAliases": [
    {
      "description": "Predefined tags for output metadata.",
      "name": "Tag",
      "resource": "Tags",
      "size": 8,
      "type": "uint"
    },
    {
      "description": "Represents a time, encoded as a 64 bit unsigned integer representing the number of nanoseconds since the Unix epoch.",
      "example": "Wed May 09 2018 00:00:00 GMT+1000 (AEST)",
      "name": "Timestamp",
      "size": 8,
      "type": "uint"
    },
    {
      "description": "A representation of a bitcoin address in raw format, with no check sum or encoding.",
      "name": "Address",
      "type": "varbin"
    },
    {
      "description": "Represents a Bitcoin transaction ID, the double SHA256 hash of the serialized transaction.",
      "example": "9d1ef0b1201c1dec3c1eb1caf758a988205226173e988e7a04afb4ea9977f506",
      "name": "TxId",
      "size": 32,
      "type": "bin"
    }
  ],
  "fieldTypes": [
    {
      "code": 2,
      "description": "Reference to a bitcoin transaction output.",
      "fields": [
        {
          "label": "TxId",
          "name": "TxId",
          "type": "TxId"
        },
        {
          "description": "The index of the output within the referenced transaction.",
          "label": "Output Index",
          "name": "OutputIndex",
          "size": 4,
          "type": "uint"
        }
      ],
      "label": "Outpoint",
      "name": "Outpoint"
    },
    {
      "description": "A tag or category of an output used to categorize and organize outputs from different transactions.",
      "fields": [
        {
          "description": "The text of the tag.",
          "label": "Tag",
          "name": "Tag",
          "type": "varchar"
        }
      ],
      "label": "Output Tag",
      "name": "OutputTag"
    },
    {
      "description": "A file containing data.",
      "fields": [
        {
          "description": "Full name, including file extension, of the file. Length 0-255 bytes. 0 is valid.",
          "example": "Agreement.pdf",
          "label": "Document Name",
          "name": "Name",
          "type": "varchar"
        },
        {
          "description": "MIME type of the file. Length 0-255 bytes. 0 is valid. ",
          "example": "application/pdf",
          "label": "MIME Type",
          "name": "Type",
          "type": "varchar"
        },
        {
          "description": "The contents of the file.",
          "label": "File Contents",
          "name": "Contents",
          "type": "varbin",
          "varSize": "medium"
        }
      ],
      "label": "Document",
      "name": "Document"
    },
    {
      "description": "A TargetAddress defines a public address and quantity.",
      "fields": [
        {
          "description": "Public address where the token balance will be changed.",
          "label": "Address",
          "name": "Address",
          "type": "Address"
        },
        {
          "description": "Qty of tokens to be frozen, thawed, confiscated or reconciled. For Contract-wide freezes 0 will be used.",
          "example": "10000",
          "label": "Quantity",
          "name": "Quantity",
          "size": 8,
          "type": "uint"
        }
      ],
      "label": "Target Address",
      "name": "TargetAddress"
    }
  ],
  "messages": [
    {
      "code": 2,
      "description": "Generic public message or public announcement. Sent to an address(es).  Can be used for an official issuer announcement.",
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender creates the transaction.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "The subject / topic of the message.",
          "label": "Subject",
          "name": "Subject",
          "type": "varchar",
          "varSize": "small"
        },
        {
          "description": "The output of the message that this message is regarding (responding to).",
          "label": "Regarding",
          "name": "Regarding",
          "type": "Outpoint"
        },
        {
          "description": "Tokenized Ltd. announces product launch.",
          "label": "Public Message",
          "name": "PublicMessage",
          "type": "Document"
        },
        {
          "description": "Documents attached to the message.",
          "label": "Attachments",
          "listSize": "medium",
          "name": "Attachments",
          "type": "Document[]"
        }
      ],
      "label": "Public Message",
      "name": "PublicMessage"
    },
    {
      "code": 3,
      "description": "Generic private message. Sent to another address(es). Encryption is to be used.",
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender creates the transaction.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "The subject / topic of the message.",
          "label": "Subject",
          "name": "Subject",
          "type": "varchar",
          "varSize": "small"
        },
        {
          "description": "The output of the message that this message is regarding (responding to).",
          "label": "Regarding",
          "name": "Regarding",
          "type": "Outpoint"
        },
        {
          "description": "Tokenized Ltd announces product launch.",
          "label": "Private Message",
          "name": "PrivateMessage",
          "type": "Document"
        },
        {
          "description": "Documents attached to the message.",
          "label": "Attachments",
          "listSize": "medium",
          "name": "Attachments",
          "type": "Document[]"
        }
      ],
      "label": "Private Message",
      "name": "PrivateMessage"
    },
    {
      "code": 4,
      "description": "A message that contains a bitcoin transaction that was accepted by the network or an agent and then invalidated by a reorg, or zero conf double spend. This serves as on chain evidence of the sending party's signatures and approval for the given transaction.",
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender creates the transaction.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "Serialized bitcoin transaction that was reverted/invalidated after being accepted.",
          "label": "Transaction",
          "name": "Transaction",
          "type": "varbin",
          "varSize": "medium"
        }
      ],
      "label": "Reverted Tx",
      "name": "RevertedTx"
    },
    {
      "code": 1001,
      "description": "A message that contains all of the details required for an agreement to be formed. Sent to an address(es). The Offer should have all, or nearly all, of the details required for the receiving party to accept the offer.  The Offer shall be in the form of a partially formed Bitcoin transaction with all of the relevent details (offer, consideration, offeror's payment/receipt details, etc.).  The Offer message is different to a Signature Request message in that it is missing the offeree's payment/receipt details (eg. UTXOs). If the Offer message is well received by the offeree, then the offeree can add their relevent details (eg. inputs/outputs) and sign the transaction.  If an additional signature is required from the offeror at this point, then the partially-signed transaction can be sent to the offeror by way of a Signature Request message.",
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender created the offer.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "Serialized Tokenized OP_RETURN message. The message needs data added by another party upon acceptance of offer.",
          "label": "Payload",
          "name": "Payload",
          "type": "varbin",
          "varSize": "medium"
        }
      ],
      "label": "Offer",
      "name": "Offer"
    },
    {
      "code": 1002,
      "description": "Partially-signed transactions (Tokenized actions, Bitcoin, Multisig, Threshold Signatures, etc.) can be passed around on-chain to the parties (including Smart Contracts) that still have to sign the transaction.",
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender creates the transaction.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "Full serialized bitcoin tx with multiple inputs from different wallets/users.",
          "label": "Payload",
          "name": "Payload",
          "type": "varbin",
          "varSize": "medium"
        }
      ],
      "label": "Signature Request",
      "name": "SignatureRequest"
    },
    {
      "code": 1003,
      "description": "A message that contains a multi-contract settlement that needs settlement data added by another contract. Sent to another contract to request data be added.",
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender creates the transaction.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "Tx Id of the transfer request transaction that triggered this message.",
          "label": "Transfer Tx Id",
          "name": "TransferTxId",
          "type": "TxId"
        },
        {
          "description": "Contract fees (in bitcoin) and addresses(PKHs) where fees should be paid. Added by each contract as settlement data is added.",
          "label": "Contract Fees",
          "listSize": "small",
          "name": "ContractFees",
          "type": "TargetAddress[]"
        },
        {
          "description": "Serialized settlement OP_RETURN that needs data added by another contract.",
          "label": "Settlement",
          "name": "Settlement",
          "type": "varbin",
          "varSize": "medium"
        }
      ],
      "label": "Settlement Request",
      "name": "SettlementRequest"
    },
    {
      "code": 1004,
      "description": "Metadata associated with the output. Aka Transaction details. It is used to describe the purpose of the transaction and add other relevant information. Often encrypted (DH, RSA) to make it private for one or more parties.  DH for b2b where multiple parties can see the description.  RSA or the like for descriptions only visible to one of the transacting parties. Optional",
      "fields": [
        {
          "description": "A Description that accompanies the output. A transaction description.",
          "example": "eg. Invoice 3024, Pay Mike back for camping.",
          "label": "Output Description",
          "name": "OutputDescription",
          "notes": "  Can be NULL",
          "type": "varchar",
          "varSize": "medium"
        },
        {
          "description": "Predefined values for describing the output.",
          "label": "Tags",
          "name": "Tags",
          "type": "Tag[]"
        },
        {
          "description": "Free form text fields for describing the output. Groceries, Moomba Gas Compressor Project, Cash Register 3, Fitness, Entertainment, Special, VIP Section, North Carolina Store, Waitress: Cindy Smith, etc.",
          "label": "Custom Tags",
          "name": "CustomTags",
          "type": "OutputTag[]"
        }
      ],
      "label": "Output Metadata",
      "name": "OutputMetadata"
    }
  ],
  "name": "Tokenized Message Types",
  "package": "messages",
  "resources": null,
  "version": 1
}