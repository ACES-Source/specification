{
  "code": "messages",
  "fieldAliases": null,
  "fieldTypes": [
    {
      "fields": [
        {
          "label": "TxId",
          "name": "TxId",
          "type": "TxId"
        },
        {
          "description": "The index of the output within the referenced transaction.",
          "label": "Output Index",
          "name": "OutputIndex",
          "size": 4,
          "type": "uint"
        }
      ],
      "id": 2,
      "metadata": {
        "description": "Reference to a bitcoin transaction output.",
        "label": "Output",
        "name": "Output"
      }
    },
    {
      "fields": [
        {
          "description": "The text of the tag.",
          "label": "Tag",
          "name": "Tag",
          "size": 1,
          "type": "varchar"
        }
      ],
      "metadata": {
        "description": "A tag or category of an output used to categorize and organize outputs from different transactions.",
        "label": "Output Tag",
        "name": "OutputTag"
      }
    },
    {
      "fields": [
        {
          "description": "Full name, including file extension, of the file. Length 0-255 bytes. 0 is valid.",
          "example": "Agreement.pdf",
          "label": "Document Name",
          "name": "Name",
          "size": 1,
          "type": "varchar"
        },
        {
          "description": "MIME type of the file. Length 0-255 bytes. 0 is valid. ",
          "example": "application/pdf",
          "label": "MIME Type",
          "name": "Type",
          "size": 1,
          "type": "varchar"
        },
        {
          "description": "The contents of the file.",
          "label": "File Contents",
          "name": "Contents",
          "size": 4,
          "type": "varbin"
        }
      ],
      "metadata": {
        "description": "A file containing data.",
        "label": "Document",
        "name": "Document"
      }
    }
  ],
  "headerFields": [
    {
      "description": "The version number that this asset payload adheres to.",
      "example": 1,
      "label": "Payload Version",
      "name": "Version",
      "size": 8,
      "type": "uint"
    },
    {
      "description": "The Message Code that determines the expected contents of the message payload.",
      "example": 1001,
      "label": "Message Code",
      "name": "MessageCode",
      "size": 2,
      "type": "uint"
    }
  ],
  "id": {
    "name": "MessageCode",
    "size": 2,
    "type": "uint"
  },
  "messages": [
    {
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender creates the transaction.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "The subject / topic of the message.",
          "label": "Subject",
          "name": "Subject",
          "size": 2,
          "type": "varchar"
        },
        {
          "description": "The output of the message that this message is regarding (responding to).",
          "label": "Regarding",
          "name": "Regarding",
          "type": "Output"
        },
        {
          "description": "Tokenized Ltd. announces product launch.",
          "label": "Public Message",
          "name": "PublicMessage",
          "type": "Document"
        },
        {
          "description": "Documents attached to the message.",
          "label": "Attachments",
          "name": "Attachments",
          "size": 4,
          "type": "Document[]"
        }
      ],
      "id": 2,
      "metadata": {
        "description": "Generic public message or public announcement. Sent to an address(es).  Can be used for an official issuer announcement.",
        "label": "Public Message",
        "name": "PublicMessage"
      }
    },
    {
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender creates the transaction.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "The subject / topic of the message.",
          "label": "Subject",
          "name": "Subject",
          "size": 2,
          "type": "varchar"
        },
        {
          "description": "The output of the message that this message is regarding (responding to).",
          "label": "Regarding",
          "name": "Regarding",
          "type": "Output"
        },
        {
          "description": "Tokenized Ltd announces product launch.",
          "label": "Private Message",
          "name": "PrivateMessage",
          "type": "Document"
        },
        {
          "description": "Documents attached to the message.",
          "label": "Attachments",
          "name": "Attachments",
          "size": 4,
          "type": "Document[]"
        }
      ],
      "id": 3,
      "metadata": {
        "description": "Generic private message. Sent to another address(es). Encryption is to be used.",
        "label": "Private Message",
        "name": "PrivateMessage"
      }
    },
    {
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender creates the transaction.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "Serialized bitcoin transaction that was reverted/invalidated after being accepted.",
          "label": "Transaction",
          "name": "Transaction",
          "size": 4,
          "type": "varbin"
        }
      ],
      "id": 4,
      "metadata": {
        "description": "A message that contains a bitcoin transaction that was accepted by the network or an agent and then invalidated by a reorg, or zero conf double spend. This serves as on chain evidence of the sending party's signatures and approval for the given transaction.",
        "label": "Reverted Tx",
        "name": "RevertedTx"
      }
    },
    {
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender created the offer.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "Serialized Tokenized OP_RETURN message. The message needs data added by another party upon acceptance of offer.",
          "label": "Payload",
          "name": "Payload",
          "size": 4,
          "type": "varbin"
        }
      ],
      "id": 1001,
      "metadata": {
        "description": "A message that contains all of the details required for an agreement to be formed. Sent to an address(es). The Offer should have all, or nearly all, of the details required for the receiving party to accept the offer.  The Offer shall be in the form of a partially formed Bitcoin transaction with all of the relevent details (offer, consideration, offeror's payment/receipt details, etc.).  The Offer message is different to a Signature Request message in that it is missing the offeree's payment/receipt details (eg. UTXOs). If the Offer message is well received by the offeree, then the offeree can add their relevent details (eg. inputs/outputs) and sign the transaction.  If an additional signature is required from the offeror at this point, then the partially-signed transaction can be sent to the offeror by way of a Signature Request message.",
        "label": "Offer",
        "name": "Offer"
      }
    },
    {
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender creates the transaction.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "Full serialized bitcoin tx with multiple inputs from different wallets/users.",
          "label": "Payload",
          "name": "Payload",
          "size": 4,
          "type": "varbin"
        }
      ],
      "id": 1002,
      "metadata": {
        "description": "Partially-signed transactions (Tokenized actions, Bitcoin, Multisig, Threshold Signatures, etc.) can be passed around on-chain to the parties (including Smart Contracts) that still have to sign the transaction.",
        "label": "Signature Request",
        "name": "SignatureRequest"
      }
    },
    {
      "fields": [
        {
          "description": "Timestamp in nanoseconds for when the message sender creates the transaction.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        },
        {
          "description": "Tx Id of the transfer request transaction that triggered this message.",
          "label": "Transfer Tx Id",
          "name": "TransferTxId",
          "type": "TxId"
        },
        {
          "description": "Contract fees (in bitcoin) and addresses(PKHs) where fees should be paid. Added by each contract as settlement data is added.",
          "label": "Contract Fees",
          "name": "ContractFees",
          "size": 1,
          "type": "TargetAddress[]"
        },
        {
          "description": "Serialized settlement OP_RETURN that needs data added by another contract.",
          "label": "Settlement",
          "name": "Settlement",
          "size": 4,
          "type": "varbin"
        }
      ],
      "id": 1003,
      "metadata": {
        "description": "A message that contains a multi-contract settlement that needs settlement data added by another contract. Sent to another contract to request data be added.",
        "label": "Settlement Request",
        "name": "SettlementRequest"
      }
    },
    {
      "fields": [
        {
          "description": "A Description that accompanies the output. A transaction description.",
          "example": "eg. Invoice 3024, Pay Mike back for camping.",
          "label": "Output Description",
          "name": "OutputDescription",
          "notes": "  Can be NULL",
          "size": 4,
          "type": "varchar"
        },
        {
          "description": "Predefined values for describing the output.",
          "label": "Tags",
          "name": "Tags",
          "type": "Tag[]"
        },
        {
          "description": "Free form text fields for describing the output. Groceries, Moomba Gas Compressor Project, Cash Register 3, Fitness, Entertainment, Special, VIP Section, North Carolina Store, Waitress: Cindy Smith, etc.",
          "label": "Custom Tags",
          "name": "CustomTags",
          "type": "OutputTag[]"
        }
      ],
      "id": 1004,
      "metadata": {
        "description": "Metadata associated with the output. Aka Transaction details. It is used to describe the purpose of the transaction and add other relevant information. Often encrypted (DH, RSA) to make it private for one or more parties.  DH for b2b where multiple parties can see the description.  RSA or the like for descriptions only visible to one of the transacting parties. Optional",
        "label": "Output Metadata",
        "name": "OutputMetadata"
      }
    }
  ],
  "name": "Tokenized Message Types",
  "template": "default",
  "version": 1
}