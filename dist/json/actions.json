{
  "fieldAliases": [
    {
      "description": "A role within an entity. (i.e. CEO, CFO)",
      "name": "Role",
      "resource": "Roles",
      "size": 1,
      "type": "uint"
    },
    {
      "description": "A type of entity. (i.e. Individual, Public Company)",
      "name": "EntityType",
      "resource": "Entities",
      "size": 1,
      "type": "fixedchar"
    },
    {
      "description": "Polities (eg. Countries/Nation-States (ISO-3166 Alpha-3)",
      "example": "GBR",
      "name": "Polity",
      "resource": "Polities",
      "size": 3,
      "type": "fixedchar"
    },
    {
      "description": "Codes returned in rejection messages when a request is not accepted.",
      "name": "RejectionCode",
      "resource": "Rejections",
      "size": 1,
      "type": "uint"
    },
    {
      "description": "Predefined tags for output metadata.",
      "name": "Tag",
      "resource": "Tags",
      "size": 1,
      "type": "uint"
    },
    {
      "description": "A representation of a bitcoin address in raw format, with no check sum or encoding.",
      "name": "Address",
      "type": "varbin",
      "varSize": "small"
    },
    {
      "description": "32 randomly generated bytes. Each Contract Code should be unique. The Contract ID will be human facing and will be the Contract Code, with a checksum, encoded in base58 and prefixed by 'CON'. Contract ID = CON + base58(ContractCode + checksum).  Eg. Contract ID = 'CON18RDoKK7Ed5zid2FkKVy7q3rULr4tgfjr4'",
      "name": "ContractCode",
      "size": 32,
      "type": "bin"
    },
    {
      "description": "A code representing the type of asset and the structure of the payload.",
      "name": "AssetType",
      "size": 3,
      "type": "fixedchar"
    },
    {
      "description": "Represents a unique identifier for an asset/token.",
      "example": "0102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20",
      "name": "AssetCode",
      "size": 32,
      "type": "bin"
    },
    {
      "description": "Represents a time, encoded as a 64 bit unsigned integer representing the number of nanoseconds since the Unix epoch.",
      "example": "Wed May 09 2018 00:00:00 GMT+1000 (AEST)",
      "name": "Timestamp",
      "size": 8,
      "type": "uint"
    },
    {
      "description": "Represents a Bitcoin transaction ID, the double SHA256 hash of the serialized transaction.",
      "example": "9d1ef0b1201c1dec3c1eb1caf758a988205226173e988e7a04afb4ea9977f506",
      "name": "TxId",
      "size": 32,
      "type": "bin"
    }
  ],
  "fieldTypes": [
    {
      "description": "Administrator is used to refer to a Administration role in an Entity.",
      "fields": [
        {
          "description": "Chairman, Director, Managing Partner, etc.. Found in 'Roles' in Specification/Resources",
          "example": "7",
          "label": "Administrator Type",
          "name": "Type",
          "type": "Role"
        },
        {
          "description": "Length 0-255 bytes. 0 is valid.",
          "example": "Satoshi Nakamoto",
          "label": "Administrator Name",
          "name": "Name",
          "type": "varchar"
        }
      ],
      "label": "Administrator",
      "name": "Administrator"
    },
    {
      "description": "An Amendment is used to describe the modification of a single field in a Contract or Asset, as defined in the ContractFormation and AssetCreation messages.",
      "fields": [
        {
          "description": "List of indices that identify the field/sub-field to be amended.",
          "label": "Field Index Path",
          "name": "FieldIndexPath",
          "notes": "The index path of the field being modified. Encoded as a list of base 128 var ints. Each index is an index into the current object, top level being the ContractFormation or AssetCreation. Indexes are defined by protobuf messages. If the current level is a list, then the index is a zero based offset to the element in the list.",
          "size": "tiny",
          "type": "varbin"
        },
        {
          "description": "0 = Modify. 1 = Add an element to the data to the array of elements. 2 = Delete the element listed in the Element field. The Add and Delete operations only apply to a particilar element of a complex array type. For example, it could be used to remove a particular VotingSystem from a Contract.",
          "example": 0,
          "label": "Operation",
          "name": "Operation",
          "options": [
            0,
            1,
            2
          ],
          "size": 1,
          "type": "uint"
        },
        {
          "description": "New data for the amended subfield. Data type depends on the the type of the field being amended. The value should be serialize as defined by the protocol.",
          "label": "Data",
          "name": "Data",
          "notes": "The bytes must be encoded in the format of the field being modified.",
          "type": "varbin",
          "varSize": "medium"
        }
      ],
      "label": "Amendment",
      "metadata": {
        "notes": "Header, timestamp, and count fields that are generated or managed by the Smart Contract are included in the index of fields for consistency, although they cannot be modified on request, or in the case of a count field, there are expectations such as the count matching the number of elements in the related field. An example of a count field is VotingSystemCount in a ContractFormation, which specifies the number of VotingSystems. Indexes are zero based."
      },
      "name": "Amendment"
    },
    {
      "description": "An AssetReceiver is a quantity, address, and oracle signature. The quantity could be used to describe a number of tokens, or a value. The address is where the asset will be sent.",
      "fields": [
        {
          "description": "The address receiving the tokens",
          "label": "Address",
          "name": "Address",
          "type": "Address"
        },
        {
          "description": "Number of tokens to be received by address at Output X",
          "example": 100,
          "label": "Quantity",
          "name": "Quantity",
          "size": 8,
          "type": "uint"
        },
        {
          "description": "0 = No Oracle-signed Message (OracleConfirmationSig skipped in serialization), 1 = ECDSA+secp256k1. If the contract for the asset being received has oracles, then a signature is required from one of them.",
          "example": 1,
          "label": "Oracle Signature Algorithm",
          "name": "OracleSigAlgorithm",
          "options": [
            0,
            1
          ],
          "size": 1,
          "type": "uint"
        },
        {
          "description": "Specifies the index into the list of oracles in the contract offer that was used to authorize this transfer.",
          "label": "Oracle Index",
          "name": "OracleIndex",
          "size": 1,
          "type": "uint"
        },
        {
          "description": "Length 0-255 bytes. If restricted to a oracle (whitelist) or has transfer restrictions (age, location, investor status): ECDSA+secp256k1 (or the like) signed message provided by an approved/trusted oracle through an API signature of the defined message. If no transfer restrictions(trade restriction/age restriction fields in the Asset Type payload. or restricted to a whitelist by the Contract Auth Flags, it is a NULL field.",
          "label": "Oracle Confirmation Signature",
          "name": "OracleConfirmationSig",
          "type": "varbin"
        },
        {
          "description": "The block height of the block hash used in the oracle signature.",
          "label": "Oracle Signature Block height",
          "name": "OracleSigBlockHeight",
          "size": 4,
          "type": "uint"
        }
      ],
      "label": "AssetReceiver",
      "name": "AssetReceiver"
    },
    {
      "description": "AssetSettlement is the data required to settle an asset transfer.",
      "fields": [
        {
          "description": "Index of input containing the contract's address for this offset",
          "label": "Contract Index",
          "name": "ContractIndex",
          "size": 2,
          "type": "uint"
        },
        {
          "description": "Three letter character that specifies the asset type. Example: COU",
          "example": "SHC",
          "label": "Asset Type",
          "name": "AssetType",
          "size": 3,
          "type": "fixedchar"
        },
        {
          "description": "A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)",
          "label": "Asset Code",
          "name": "AssetCode",
          "notes": "Cannot be changed by the administration, operator or smart contract.",
          "type": "AssetCode"
        },
        {
          "description": "Each element contains the resulting token balance of Asset X for the output Address, which is referred to by the index.",
          "label": "Settlements[]",
          "name": "Settlements",
          "type": "QuantityIndex[]"
        }
      ],
      "label": "Asset Settlement",
      "name": "AssetSettlement"
    },
    {
      "description": "AssetTransfer is the data required to transfer an asset.",
      "fields": [
        {
          "description": "Index of output containing the contract's address for this offset",
          "label": "Contract Index",
          "name": "ContractIndex",
          "size": 2,
          "type": "uint"
        },
        {
          "description": "Three letter character that specifies the asset type. Example: COU",
          "example": "SHC",
          "label": "Asset Type",
          "name": "AssetType",
          "size": 3,
          "type": "fixedchar"
        },
        {
          "description": "A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)",
          "label": "Asset Code",
          "name": "AssetCode",
          "notes": "Cannot be changed by the administration, operator or smart contract.",
          "type": "AssetCode"
        },
        {
          "description": "Each element has the value of tokens to be spent from the input address, which is referred to by the index.",
          "label": "Asset Senders",
          "name": "AssetSenders",
          "type": "QuantityIndex[]"
        },
        {
          "description": "Each element has the value of tokens to be received, the address, and an oracle signature if required.",
          "label": "Asset Receivers",
          "name": "AssetReceivers",
          "type": "AssetReceiver[]"
        }
      ],
      "label": "Asset Transfer",
      "name": "AssetTransfer"
    },
    {
      "description": "A file containing data.",
      "fields": [
        {
          "description": "Full name, including file extension, of the file. Length 0-255 bytes. 0 is valid.",
          "example": "Agreement.pdf",
          "label": "Document Name",
          "name": "Name",
          "type": "varchar"
        },
        {
          "description": "MIME type of the file. Length 0-255 bytes. 0 is valid. ",
          "example": "application/pdf",
          "label": "MIME Type",
          "name": "Type",
          "type": "varchar"
        },
        {
          "description": "The contents of the file.",
          "label": "File Contents",
          "name": "Contents",
          "type": "varbin",
          "varSize": "medium"
        }
      ],
      "label": "Document",
      "name": "Document"
    },
    {
      "description": "Entity represents the details of a legal Entity, such as a public or private company, government agency, or and individual.",
      "fields": [
        {
          "description": "Length 1-255 bytes (0 is not valid). Issuing entity (company, organization, individual).  Can be any unique identifying string, including human readable names for branding/vanity purposes. ",
          "example": "Tesla Inc.",
          "label": "Name",
          "name": "Name",
          "type": "varchar",
          "varSize": "tiny"
        },
        {
          "description": "The type of entity. (i.e Public Company, Individual) (Specification/Resources).",
          "example": "P",
          "label": "Type",
          "name": "Type",
          "type": "EntityType"
        },
        {
          "description": "Null is valid. A Legal Entity Identifier (or LEI) is an international identifier made up of a 20-character identifier that identifies distinct legal entities that engage in financial transactions. It is defined by ISO 17442.[1] Natural persons are not required to have an LEI; they’re eligible to have one issued, however, but only if they act in an independent business capacity.[2] The LEI is a global standard, designed to be non-proprietary data that is freely accessible to all.[3] As of December 2018, over 1,300,000 legal entities from more than 200 countries have now been issued with LEIs.",
          "example": "54930084UKLVMY22DS16",
          "label": "Legal Entity Identifier",
          "name": "LEI",
          "notes": "ISO 17442 - https://en.wikipedia.org/wiki/Legal_Entity_Identifier",
          "size": 20,
          "type": "fixedchar"
        },
        {
          "description": "Issuer/Entity/Contracting Party X Address Details (eg. HQ)",
          "example": "2",
          "label": "Unit Number",
          "name": "UnitNumber",
          "type": "varchar"
        },
        {
          "description": "",
          "example": "13577",
          "label": "Building Number",
          "name": "BuildingNumber",
          "type": "varchar",
          "varSize": "tiny"
        },
        {
          "description": "",
          "example": "Fairmont Ave",
          "label": "Street",
          "name": "Street",
          "type": "varchar",
          "varSize": "tiny"
        },
        {
          "description": "",
          "example": "Robinoh",
          "label": "Suburb/City",
          "name": "SuburbCity",
          "type": "varchar",
          "varSize": "tiny"
        },
        {
          "description": "",
          "example": "BC",
          "label": "Territory/State/Province Code",
          "name": "TerritoryStateProvinceCode",
          "size": 5,
          "type": "fixedchar"
        },
        {
          "description": "",
          "example": "USA",
          "label": "Country Code",
          "name": "CountryCode",
          "size": 3,
          "type": "fixedchar"
        },
        {
          "description": "",
          "example": "50210",
          "label": "Postal/ZIP Code",
          "name": "PostalZIPCode",
          "size": 12,
          "type": "fixedchar"
        },
        {
          "description": "Length 0-255 bytes. Address for text-based communication: eg. email address, Bitcoin address",
          "example": "satoshi@tokenized.com",
          "label": "Email Address",
          "name": "EmailAddress",
          "type": "varchar",
          "varSize": "tiny"
        },
        {
          "description": "Length 0-255 bytes. 0 is valid. Phone Number for Entity.",
          "example": "0448484848",
          "label": "Phone Number",
          "name": "PhoneNumber",
          "type": "varchar",
          "varSize": "tiny"
        },
        {
          "description": "A list of people that are in Administrative Roles for the Entity.  eg. Chair, Director, Managing Partner, etc.",
          "label": "Administration",
          "name": "Administration",
          "type": "Administrator[]"
        },
        {
          "description": "A list of people in Management Roles for the Entity. e.g CEO, COO, CTO, CFO, Secretary, Executive, etc.",
          "label": "Management",
          "name": "Management",
          "type": "Manager[]"
        },
        {
          "description": "Domain name owned by this entity. Length 0-255 bytes. 0 is valid.",
          "example": "tokenized.com",
          "label": "Domain Name",
          "name": "DomainName",
          "type": "varchar",
          "varSize": "tiny"
        },
        {
          "description": "Address of entity contract. When the contract type is asset contract, or a child type, this field refers to the entity specified in the contract at the address specified. When this field is present, no other fields should be included in the entity.",
          "label": "Entity Contract Address",
          "name": "EntityContractAddress",
          "type": "Address"
        }
      ],
      "label": "Entity",
      "name": "Entity"
    },
    {
      "description": "Manager is used to refer to a role that is responsible for the Management of an Entity.",
      "fields": [
        {
          "description": "CEO, COO, CFO, etc. Found in 'Roles' in Specification/Resources",
          "example": "5",
          "label": "Manager Type",
          "name": "Type",
          "type": "Role"
        },
        {
          "description": "Length 0-255 bytes. 0 is valid.",
          "example": "Satoshi Nakamoto",
          "label": "Manager Name",
          "name": "Name",
          "type": "varchar"
        }
      ],
      "label": "Manager",
      "name": "Manager"
    },
    {
      "description": "A Oracle defines the details of a public Oracle.",
      "fields": [
        {
          "description": "Identifying information about the oracle.",
          "label": "Oracle Entity",
          "name": "Entity",
          "type": "Entity"
        },
        {
          "description": "Length 0-255 bytes. 0 is valid. If applicable: URL for REST/RPC Endpoint",
          "example": "http://oracle.tokenized.com/api/3650d9/version2010",
          "label": "Oracle URL",
          "name": "URL",
          "type": "varchar"
        },
        {
          "description": "Length 0-255 bytes. 0 is not valid. Oracle Public Key (eg. Bitcoin Public key), used to confirm digital signed proofs for transfers.  Can also be the same public address that controls a Tokenized Oracle.",
          "label": "Oracle Public Key",
          "name": "PublicKey",
          "type": "varbin"
        },
        {
          "description": "The type of the oracle. 0 = Identity, 1 = Authority, 2 = Event. More than one value can be included to specify the oracle has more than one type.",
          "label": "Oracle Type",
          "name": "OracleType",
          "options": [
            0,
            1,
            2
          ],
          "size": 1,
          "type": "uint[]"
        }
      ],
      "label": "Oracle",
      "name": "Oracle"
    },
    {
      "description": "A QuantityIndex contains a quantity, and an index. The quantity could be used to describe a number of tokens, or a value. The index is used to refer to an input or output index position.",
      "fields": [
        {
          "description": "The index of the input/output (depending on context) sending/receiving the tokens.",
          "example": 0,
          "label": "Index",
          "name": "Index",
          "size": 2,
          "type": "uint"
        },
        {
          "description": "Number of tokens being sent",
          "example": 100,
          "label": "Quantity",
          "name": "Quantity",
          "size": 8,
          "type": "uint"
        }
      ],
      "label": "Quantity Index",
      "name": "QuantityIndex"
    },
    {
      "description": "A bitcoin transaction and the outputs that it spends.",
      "fields": [
        {
          "description": "A bitcoin transaction serialized in the bitcoin P2P format.",
          "example": 0,
          "label": "Transaction",
          "name": "Transaction",
          "size": "large",
          "type": "varbin"
        },
        {
          "description": "The bitcoin outputs corresponding to the inputs for the transaction. Serialized in bitcoin P2P format. There must be the same count as there are inputs in the contained transaction and they must be in the same order.",
          "label": "Outputs",
          "listSize": "medium",
          "name": "Outputs",
          "type": "varbin[]",
          "varSize": "large"
        }
      ],
      "label": "Reference Transaction",
      "name": "ReferenceTransaction"
    },
    {
      "description": "A TargetAddress defines a public address and quantity.",
      "fields": [
        {
          "description": "Public address where the token balance will be changed.",
          "label": "Address",
          "name": "Address",
          "type": "Address"
        },
        {
          "description": "Qty of tokens to be frozen, thawed, confiscated or reconciled. For Contract-wide freezes 0 will be used.",
          "example": "10000",
          "label": "Quantity",
          "name": "Quantity",
          "size": 8,
          "type": "uint"
        }
      ],
      "label": "Target Address",
      "name": "TargetAddress"
    },
    {
      "description": "A VotingSystem defines all details of a Voting System.",
      "fields": [
        {
          "description": "eg. Special Resolutions, Ordinary Resolutions, Fundamental Matters, General Matters, Directors' Vote, Poll, etc.",
          "example": "Special Resolutions",
          "label": "Voting System Name",
          "name": "Name",
          "type": "varchar"
        },
        {
          "description": "R - Relative Threshold, A - Absolute Threshold, P - Plurality,  (Relative Threshold means the number of counted votes must exceed the threshold % of total ballots cast.  Abstentations/spoiled votes do not detract from the liklihood of a vote passing as they are not included in the denominator.  Absolute Threshold requires the number of ballots counted to exceed the threshold value when compared to the total outstanding tokens.  Abstentations/spoiled votes detract from the liklihood of the vote passing.  For example, in an absolute threshold vote, if the threshold was 50% and 51% of the total outstanding tokens did not vote, then the vote cannot pass.  50% of all tokens would have had to vote for one vote option for the vote to be successful. Plurality means the most favoured option is selected, regardless of the number of votes cast or the percentage relative to other choices.",
          "example": "A",
          "label": "Vote Type",
          "name": "VoteType",
          "size": 1,
          "type": "fixedchar"
        },
        {
          "description": "0 - Standard Scoring (+1 * # of tokens owned), 1 - Weighted Scoring (1st choice * Vote Max * # of tokens held, 2nd choice * Vote Max-1 * # of tokens held,..etc.) ",
          "example": "0",
          "label": "Tally Logic",
          "name": "TallyLogic",
          "size": 1,
          "type": "uint"
        },
        {
          "description": "This field is ignored when VoteType is P (Plurality). Otherwise it is the percentage of ballots required for a proposal to pass. Valid values are greater than 0 and less than 100. 75 means 75% and greater.  Only applicable to Relative and Absolute Threshold vote methods.  The Plurality vote method requires no threshold value (NULL), as the successful vote option is simply selected on the basis of highest ballots cast for it.",
          "example": "75",
          "label": "Threshold Percentage for the Voting System",
          "name": "ThresholdPercentage",
          "size": 1,
          "type": "uint"
        },
        {
          "description": "Where an asset has a vote multiplier, true must be set here for the vote multiplier to count, otherwise votes are simply treated as 1x per token.",
          "label": "VoteMultiplierPermitted",
          "name": "VoteMultiplierPermitted",
          "type": "bool"
        },
        {
          "description": "Token Owners must pay the fee amount to broadcast a valid Proposal.  If the Proposal action is valid, the smart contract will start a vote. 0 is valid.",
          "example": "100",
          "label": "Holder Proposal Fee for the Voting System",
          "name": "HolderProposalFee",
          "size": 8,
          "type": "uint"
        }
      ],
      "label": "Voting System",
      "name": "VotingSystem"
    }
  ],
  "messages": [
    {
      "code": "C1",
      "description": "Allows the administration to tell the smart contract what they want the details (labels, data, T\u0026C's, etc.) of the Contract to be on-chain in a public and immutable way. The Contract Offer action 'initializes' a generic smart contract that has been spun up by either the smart contract operator or the administration. This on-chain action allows for the positive response from the smart contract with either a Contract Formation Action or a Rejection Action.",
      "fields": [
        {
          "description": "Can be any unique identifying string, including human readable names for branding/vanity purposes. Contract identifier (instance) is the bitcoin public key hash address. If the public address is lost, then the administration will have to reissue the entire contract, Asset Definition and tokens with the new public address. Smart contracts can be branded and specialized to suit any terms and conditions.\n",
          "example": "Tesla - Shareholder Agreement",
          "label": "Contract Name",
          "name": "ContractName",
          "type": "varchar"
        },
        {
          "description": "0 - No Body of agreement included, 1 - SHA-256 Hash, 2 - Tokenized Body of Agreement Format",
          "example": "1",
          "label": "Body of Agreement Type",
          "name": "BodyOfAgreementType",
          "notes": "Body of Agreement - Amendments can be restricted to a vote.",
          "options": [
            0,
            1,
            2
          ],
          "size": 1,
          "type": "uint"
        },
        {
          "description": "SHA-256 hash of the body of the agreement (full contract in pdf format or the like) or the full terms and conditions of an agreement in the Tokenized Body of Agreement format.  This is specific to the smart contract and relevant Assets.  Legal and technical information.",
          "label": "Body of Agreement",
          "name": "BodyOfAgreement",
          "type": "varbin",
          "varSize": "medium"
        },
        {
          "description": "Describes the purpose of the contract.",
          "example": "Shareholder Agreement",
          "label": "Contract Type",
          "name": "ContractType",
          "type": "varchar"
        },
        {
          "description": "Supporting documents that are important to the contract.",
          "label": "Supporting Documentation",
          "name": "SupportingDocs",
          "type": "Document[]"
        },
        {
          "description": "5 Letter Code to identify which governing law the contract will adhere to.  Disputes are to be settled by this law in the jurisdiction specified below. Private dispute resolution organizations can be used as well.  A custom code just needs to be defined.",
          "example": "USA",
          "label": "Governing Law",
          "name": "GoverningLaw",
          "notes": "Governing Law - Amendments can be restricted to a vote.",
          "size": 5,
          "type": "fixedchar"
        },
        {
          "description": "Legal proceedings/arbitration will take place using the specified Governing Law in this location.",
          "example": "US-CA",
          "label": "Jurisdiction",
          "name": "Jurisdiction",
          "notes": "Jurisdiction - Amendments can be restricted to a vote.",
          "size": 5,
          "type": "fixedchar"
        },
        {
          "description": "All actions related to the contract will cease to work after this timestamp. The smart contract will stop running.  This will allow many token use cases to be able to calculate total smart contract running costs for the entire life of the contract. Eg. an issuer is creating tickets for an event on the 5th of June 2018.  The smart contract will facilitate exchange and send transactions up until the 6th of June.  Wallets can use this to forget tokens that are no longer valid - or at least store them in an 'Expired' folder.",
          "label": "Contract Expiration",
          "name": "ContractExpiration",
          "notes": "Contract Expiration - Amendments can be restricted to a vote.",
          "type": "Timestamp"
        },
        {
          "description": "Points to an information page that also has a copy of the Contract.  Anyone can go to the website to have a look at the price/token, information about the issuer (company), information about the asset, legal information, etc.  There will also be a way for token owners to vote on this page and contact details with the issuer/tokenized companies. Could be a IPv6/IPv4, or txn-id for on-chain information or even a public address (DNS).",
          "example": "https://tokenized.com/Contract/3qeoSCg7JmfSnJesJFojj",
          "label": "Contract URI",
          "name": "ContractURI",
          "type": "varchar"
        },
        {
          "description": "The issuer of this contract.",
          "label": "Issuer",
          "name": "Issuer",
          "type": "Entity"
        },
        {
          "description": "The URL of the issuer's logo.",
          "example": "https://example.com/images/logo.png",
          "label": "Issuer Logo URL",
          "name": "IssuerLogoURL",
          "type": "varchar"
        },
        {
          "description": "If true, then the second input is a contract operator. If false, then all additional inputs are just funding and \"includes\" fields are skipped in serialization.",
          "label": "Contract Operator Included",
          "name": "ContractOperatorIncluded",
          "type": "bool"
        },
        {
          "description": "An additional entity with operator access to the contract.",
          "label": "Contract Operator",
          "name": "ContractOperator",
          "type": "Entity"
        },
        {
          "description": "The oracle that provided the signature used to verify the administration's identity.",
          "label": "Administration Oracle",
          "name": "AdminOracle",
          "type": "Oracle"
        },
        {
          "description": "The ECDSA signature provided by the oracle specified. The first input must correspond to the administration entity and, if a contract operator is included, the second input must correspond to the contract operator entity.",
          "label": "Administration Oracle Signature",
          "name": "AdminOracleSignature",
          "type": "varbin"
        },
        {
          "description": "The block height of the block hash used in the oracle signature.",
          "label": "Administration Oracle Signature Block height",
          "name": "AdminOracleSigBlockHeight",
          "size": 4,
          "type": "uint"
        },
        {
          "description": "Satoshis required to be paid to the contract for each asset action.",
          "label": "Contract Fee",
          "name": "ContractFee",
          "size": 8,
          "type": "uint"
        },
        {
          "description": "A list of voting systems.",
          "label": "Voting Systems",
          "name": "VotingSystems",
          "type": "VotingSystem[]"
        },
        {
          "description": "A set of permission objects containing switches and field references that define the permissions for modifying this contract. See the Permission documentation for more detail.",
          "label": "Contract Permissions",
          "name": "ContractPermissions",
          "type": "varbin",
          "varSize": "small"
        },
        {
          "description": "Number of Assets (non-fungible) permitted on this contract. 0 if unlimited which will display an infinity symbol in UI",
          "example": "1",
          "label": "Restricted Qty of Assets",
          "name": "RestrictedQtyAssets",
          "notes": "Qty of Assets - Amendments can be restricted to a vote.",
          "size": 8,
          "type": "uint"
        },
        {
          "description": "Set to true if the administration is permitted to make proposals outside of the smart contract scope.",
          "example": true,
          "label": "Administration Proposal",
          "name": "AdministrationProposal",
          "notes": "General Governance",
          "type": "bool"
        },
        {
          "description": "Set to true if a holder is permitted to make proposals outside of the smart contract scope.",
          "example": true,
          "label": "Holder Proposal",
          "name": "HolderProposal",
          "type": "bool"
        },
        {
          "description": "A list of oracles that provide approval for all token transfers for all assets under the contract.",
          "label": "Oracles",
          "name": "Oracles",
          "type": "Oracle[]"
        },
        {
          "description": "The address of the contract's master key. This key has the ability to change the active contract address in case of a security failure with the active contract key.",
          "label": "Master Address",
          "name": "MasterAddress",
          "type": "Address"
        }
      ],
      "label": "Contract Offer",
      "metadata": {
        "inputs": [
          {
            "comments": "The smart contract sets the administration's public address with whatever public address is in Index 0 of the first valid Contract Offer.  From then on, the SC will only respond to 'commands' (request actions) from this address with respect to actions that are controlled by the administration according to the protocol.",
            "label": "Administration's Public Address",
            "name": "Administration"
          },
          {
            "comments": "Can also be used as a cold storage backup for the issuer. This is important if the issuer wants to be able to change their address as changes to the issuer or operator pkh in an amendment require signatures from both the issuer and the operator pkhs. The one exception to this rule, the Contract Operator can nominate a secondary controlling public address that can act on behalf of the issuer for issuer related requests. Typically this will be the Smart Contract Operator.\n",
            "label": "Contract Operator's Public Address (Optional)",
            "name": "ContractOperator"
          }
        ],
        "outputs": [
          {
            "comments": "A contract address that has no other contract associated to it already.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "ContractOffer"
    },
    {
      "code": "C2",
      "description": "This txn is created by the contract (smart contract/off-chain agent/token contract) upon receipt of a valid Contract Offer Action from the administration.  The smart contract will execute on a server controlled by the administration, or a smart contract operator on their behalf.",
      "fields": [
        {
          "description": "Can be any unique identifying string, including human readable names for branding/vanity purposes. Contract identifier (instance) is the bitcoin public key hash address. If the public address is lost, then the administration will have to reissue the entire contract, asset definition and tokens with the new public address. Smart contracts can be branded and specialized to suit any terms and conditions.\n",
          "example": "Tesla - Shareholder Agreement",
          "label": "Contract Name",
          "name": "ContractName",
          "type": "varchar"
        },
        {
          "description": "0 - No Body of agreement included, 1 - SHA-256 Hash, 2 - Tokenized Body of Agreement Format",
          "example": "1",
          "label": "Body of Agreement Type",
          "name": "BodyOfAgreementType",
          "notes": "Body of Agreement - Amendments can be restricted to a vote.",
          "options": [
            0,
            1,
            2
          ],
          "size": 1,
          "type": "uint"
        },
        {
          "description": "SHA-256 hash of the body of the agreement (full contract in pdf format or the like) or the full terms and conditions of an agreement in the Tokenized Body of Agreement format.  This is specific to the smart contract and relevant Assets.  Legal and technical information.",
          "label": "Body of Agreement",
          "name": "BodyOfAgreement",
          "type": "varbin",
          "varSize": "medium"
        },
        {
          "description": "Describes the purpose of the contract.",
          "example": "Shareholder Agreement",
          "label": "Contract Type",
          "name": "ContractType",
          "type": "varchar"
        },
        {
          "description": "Supporting documents that are important to the contract.",
          "label": "Supporting Documentation",
          "name": "SupportingDocs",
          "type": "Document[]"
        },
        {
          "description": "5 Letter Code to identify which governing law the contract will adhere to.  Disputes are to be settled by this law in the jurisdiction specified below. Private dispute resolution organizations can be used as well.  A custom code just needs to be defined.",
          "example": "USA",
          "label": "Governing Law",
          "name": "GoverningLaw",
          "notes": "Governing Law - Amendments can be restricted to a vote.",
          "size": 5,
          "type": "fixedchar"
        },
        {
          "description": "Legal proceedings/arbitration will take place using the specified Governing Law in this location.",
          "example": "US-CA",
          "label": "Jurisdiction",
          "name": "Jurisdiction",
          "notes": "Jurisdiction - Amendments can be restricted to a vote.",
          "size": 5,
          "type": "fixedchar"
        },
        {
          "description": "All actions related to the contract will cease to work after this timestamp. The smart contract will stop running.  This will allow many token use cases to be able to calculate smart contract running costs. Eg. an issuer is creating tickets for an event on the 5th of June 2018.  The smart contract will facilitate exchange and send transactions up until the 6th of June.  Wallets can use this to forget tokens that are no longer valid - or at least store them in an 'Expired' folder.",
          "example": "Wed May 09 2018 00:00:00 GMT+1000 (AEST)",
          "label": "Contract Expiration",
          "name": "ContractExpiration",
          "notes": "Contract Expiration - Amendments can be restricted to a vote.",
          "type": "Timestamp"
        },
        {
          "description": "Length 0-255 bytes.  0 is valid. Points to an information page that also has a copy of the Contract.  Anyone can go to the website to have a look at the price/token, information about the Issuer (company), information about the Asset, legal information, etc.  There will also be a way for Token Owners to vote on this page and contact details with the Issuer/tokenized companies. Could be a IPv6/IPv4, an IPFS address (hash) or txn-id for on chain information or even a public address (DNS).",
          "example": "https://tokenized.com/Contract/3qeoSCg7JmfSnJesJFojj",
          "label": "Contract URI",
          "name": "ContractURI",
          "type": "varchar"
        },
        {
          "description": "The issuer of this contract.",
          "label": "Issuer",
          "name": "Issuer",
          "type": "Entity"
        },
        {
          "description": "The URL of the issuer's logo.",
          "example": "https://example.tld/images/logo.png",
          "label": "Issuer Logo URL",
          "name": "IssuerLogoURL",
          "type": "varchar"
        },
        {
          "description": "An additional entity with operator access to the contract.",
          "label": "Contract Operator",
          "name": "ContractOperator",
          "type": "Entity"
        },
        {
          "description": "The oracle that provided the signature used to verify the administration's identity.",
          "label": "Administration Oracle",
          "name": "AdminOracle",
          "type": "Oracle"
        },
        {
          "description": "The ECDSA signature provided by the oracle specified. The first input must correspond to the administration entity and, if a contract operator is included, the second input must correspond to the contract operator entity.",
          "label": "Administration Oracle Signature",
          "name": "AdminOracleSignature",
          "type": "varbin"
        },
        {
          "description": "The block height of the block hash used in the oracle signature.",
          "label": "Administration Oracle Signature Block height",
          "name": "AdminOracleSigBlockHeight",
          "size": 4,
          "type": "uint"
        },
        {
          "description": "Satoshis required to be paid to the contract for each asset action.",
          "label": "Contract Fee",
          "name": "ContractFee",
          "size": 8,
          "type": "uint"
        },
        {
          "description": "A list voting systems.",
          "label": "Voting Systems",
          "name": "VotingSystems",
          "type": "VotingSystem[]"
        },
        {
          "description": "A set of permission objects containing switches and field references that define the permissions for modifying this contract. See the Permission documentation for more detail.",
          "label": "Contract Permissions",
          "name": "ContractPermissions",
          "type": "varbin",
          "varSize": "small"
        },
        {
          "description": "Number of Assets (non-fungible) permitted on this contract. 0 if unlimited which will display an infinity symbol in UI",
          "example": "1",
          "label": "Restricted Qty of Assets",
          "name": "RestrictedQtyAssets",
          "notes": "Qty of Assets - Amendments can be restricted to a vote.",
          "size": 8,
          "type": "uint"
        },
        {
          "description": "Set to true if the administration is permitted to make proposals outside of the smart contract scope.",
          "example": true,
          "label": "Administration Proposal",
          "name": "AdministrationProposal",
          "notes": "General Governance",
          "type": "bool"
        },
        {
          "description": "Set to true if a holder is permitted to make proposals outside of the smart contract scope.",
          "example": true,
          "label": "Holder Proposal",
          "name": "HolderProposal",
          "type": "bool"
        },
        {
          "description": "A list of oracles that provide approval for all token transfers for all assets under the contract.",
          "label": "Oracles",
          "name": "Oracles",
          "type": "Oracle[]"
        },
        {
          "description": "The address of the contract's master key. This key has the ability to change the active contract address in case of a security failure with the active contract key.",
          "label": "Master Address",
          "name": "MasterAddress",
          "type": "Address"
        },
        {
          "description": "A counter for the number of times this contract has been revised using an amendment action.",
          "example": "0",
          "label": "Contract Revision",
          "name": "ContractRevision",
          "notes": "Can't be changed by the administration or smart contract operator.",
          "size": 4,
          "type": "uint"
        },
        {
          "description": "Timestamp in nanoseconds of when the smart contract created the action.",
          "label": "Timestamp",
          "name": "Timestamp",
          "notes": "Cannot be changed by the administration, operator. Smart contract controls.",
          "type": "Timestamp"
        }
      ],
      "label": "Contract Formation",
      "metadata": {
        "inputs": [
          {
            "comments": "The related contract address.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "outputs": [
          {
            "comments": "Required so that users can monitor transactions to the contract for updates to contract/assets.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "ContractFormation"
    },
    {
      "code": "C3",
      "description": "The administration can initiate an amendment to the contract establishment metadata. The ability to make an amendment to the contract is restricted by the Authorization Flag set on the current revision of Contract Formation action.",
      "fields": [
        {
          "description": "Used to change the administration address.  The new administration address must be in the input[1] position. A change of the administration or operator address requires both the operator and the administration address to be in the inputs (both signatures) of the Contract Amendment action.",
          "example": 1,
          "label": "Change Administration Address",
          "name": "ChangeAdministrationAddress",
          "type": "bool"
        },
        {
          "description": "Used to change the smart contract operator address.  The new operator address must be in the input[1] position, unless the administration is being changed too, then it is in input[2]. A change of the administration or operator address requires both the operator and the administration address to be in the inputs (both signatures) of the Contract Amendment action.",
          "example": 1,
          "label": "Change Operator Address",
          "name": "ChangeOperatorAddress",
          "type": "bool"
        },
        {
          "description": "Counter 0 to (2^32)-1",
          "example": 42,
          "label": "Contract Revision",
          "name": "ContractRevision",
          "size": 4,
          "type": "uint"
        },
        {
          "description": "A collection of modifications to perform on this contract.",
          "label": "Amendments",
          "name": "Amendments",
          "type": "Amendment[]"
        },
        {
          "description": "The Bitcoin transaction ID of the associated result action that permitted the modifications. See Governance for more details.",
          "label": "Ref Tx ID",
          "name": "RefTxID",
          "type": "TxId"
        }
      ],
      "label": "Contract Amendment",
      "metadata": {
        "inputs": [
          {
            "comments": "This action can only come from the administration.",
            "label": "Administration's Public Address",
            "name": "Administration"
          },
          {
            "comments": "Only treated as the new administration address when the Change Administration Address flag is set to true.",
            "label": "New Administration Public Address",
            "name": "NewAdministration"
          }
        ],
        "outputs": [
          {
            "comments": "The related contract address.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "ContractAmendment"
    },
    {
      "code": "C4",
      "description": "Static Contract Formation Action",
      "fields": [
        {
          "description": "Can be any unique identifying string, including human readable names for branding/vanity purposes. Contract identifier (instance) is the bitcoin public address. If the public address is lost, then the administration will have to reissue the entire contract, Asset Definition and tokens with the new public address. Smart contracts can be branded and specialized to suit any terms and conditions.\n",
          "example": "Tesla - Shareholder Agreement",
          "label": "Contract Name",
          "name": "ContractName",
          "type": "varchar"
        },
        {
          "description": "32 randomly generated bytes. Each Contract Code should be unique. The Contract ID will be human facing and will be the Contract Code, with a checksum, encoded in base58 and prefixed by 'CON'. Contract ID = CON + base58(ContractCode + checksum).  Eg. Contract ID = 'CON18RDoKK7Ed5zid2FkKVy7q3rULr4tgfjr4'",
          "label": "Contract Code",
          "name": "ContractCode",
          "notes": null,
          "type": "ContractCode"
        },
        {
          "description": "1 - SHA-256 Hash, 2 - Tokenized Body of Agreement Format",
          "example": "1",
          "label": "Body of Agreement Type",
          "name": "BodyOfAgreementType",
          "notes": "Body of Agreement - Amendments can be restricted to a vote.",
          "options": [
            1,
            2
          ],
          "size": 1,
          "type": "uint"
        },
        {
          "description": "SHA-256 hash of the body of the agreement (full contract in pdf format or the like) or the full terms and conditions of an agreement in the Tokenized Body of Agreement format.  This is specific to the smart contract and relevant Assets.  Legal and technical information.",
          "label": "Body of Agreement",
          "name": "BodyOfAgreement",
          "type": "varbin",
          "varSize": "medium"
        },
        {
          "description": "Describes the purpose of the contract.",
          "example": "Non-Disclosure Agreement",
          "label": "Contract Type",
          "name": "ContractType",
          "type": "varchar"
        },
        {
          "description": "Supporting documents that are important to the contract.",
          "label": "Supporting Documentation",
          "name": "SupportingDocs",
          "type": "Document[]"
        },
        {
          "description": "Counter 0 to (2^32)-1",
          "example": "0",
          "label": "Contract Revision",
          "name": "ContractRevision",
          "size": 4,
          "type": "uint"
        },
        {
          "description": "5 Letter Code to identify which governing law the contract will adhere to.  Disputes are to be settled by this law in the jurisdiction specified below. Private dispute resolution organizations can be used as well.  A custom code just needs to be defined.",
          "example": "USA",
          "label": "Governing Law",
          "name": "GoverningLaw",
          "size": 5,
          "type": "fixedchar"
        },
        {
          "description": "Legal proceedings/arbitration will take place using the specified Governing Law in this location.",
          "example": "US-CA",
          "label": "Jurisdiction",
          "name": "Jurisdiction",
          "size": 5,
          "type": "fixedchar"
        },
        {
          "description": "Start date of the contract.",
          "label": "Effective Date",
          "name": "EffectiveDate",
          "type": "Timestamp"
        },
        {
          "description": "All actions related to the contract will cease to work after this timestamp. The smart contract will stop running.  This will allow many token use cases to be able to calculate smart contract running costs. Eg. an issuer is creating tickets for an event on the 5th of June 2018.  The smart contract will facilitate exchange and send transactions up until the 6th of June.  Wallets can use this to forget tokens that are no longer valid - or at least store them in an 'Expired' folder.",
          "label": "Contract Expiration",
          "name": "ContractExpiration",
          "type": "Timestamp"
        },
        {
          "description": "Length 0-255 bytes. Points to an information page that also has a copy of the Contract.  Anyone can go to the website to have a look at the price/token, information about the issuer (company), information about the Asset, legal information, etc.  There will also be a way for token owners to vote on this page and contact details with the issuer/tokenized companies. Could be a IPv6/IPv4, or txn-id for on chain information or even a public address (DNS).",
          "example": "https://tokenized.com/Contract/3qeoSCg7JmfSnJesJFojj",
          "label": "Contract URI",
          "name": "ContractURI",
          "type": "varchar"
        },
        {
          "description": "The Tx-ID of the previous contract revision.",
          "label": "PrevRevTxID",
          "name": "PrevRevTxID",
          "type": "TxId"
        },
        {
          "description": "A list of legal entities associated with this contract.",
          "label": "Entities",
          "name": "Entities",
          "type": "Entity[]"
        },
        {
          "description": "The oracle that provided the signature used to verify the entity's identity.",
          "label": "Entity Oracle",
          "name": "EntityOracle",
          "type": "Oracle"
        },
        {
          "description": "The ECDSA signature provided by the oracle specified. For N entities, the first N inputs must correspond with those entities.",
          "label": "Entity Oracle Signature",
          "name": "EntityOracleSignature",
          "type": "varbin"
        },
        {
          "description": "The block height of the block hash used in the oracle signature.",
          "label": "Entity Oracle Signature Block height",
          "name": "EntityOracleSigBlockHeight",
          "size": 4,
          "type": "uint"
        }
      ],
      "label": "Static Contract Formation",
      "metadata": {
        "inputs": [
          {
            "comments": "Any number of involved parties with this contract.",
            "label": "Issuer or Party X Public Address",
            "name": "PartyX"
          }
        ]
      },
      "name": "StaticContractFormation"
    },
    {
      "code": "C5",
      "description": "This txn is signed by the master contract key defined in the contract formation and changes the active contract address which the contract uses to receive and respond to requests. This is a worst case scenario fallback to only be used when the contract private key is believed to be exposed.",
      "fields": [
        {
          "description": "The address to be used by all future requests/responses for the contract.",
          "label": "New Contract Address",
          "name": "NewContractAddress",
          "type": "varbin",
          "varSize": "small"
        },
        {
          "description": "Timestamp in nanoseconds of when the action was created.",
          "label": "Timestamp",
          "name": "Timestamp",
          "type": "Timestamp"
        }
      ],
      "label": "Contract Address Change",
      "metadata": {
        "inputs": [
          {
            "comments": "The contract master address.",
            "label": "Contract Master Public Address",
            "name": "ContractMaster"
          }
        ],
        "outputs": [
          {
            "comments": "Currently active, and soon to be deactivated, contract address.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ]
      },
      "name": "ContractAddressChange"
    },
    {
      "code": "A1",
      "description": "This action is used by the administration to define the properties/characteristics of the asset (token) that it wants to create. An asset has a unique identifier called AssetID = AssetType + base58(AssetCode + checksum). An asset is always linked to a contract that is identified by the public address of the Contract wallet.\n",
      "fields": [
        {
          "description": "A set of permission objects containing switches and field references that define the permissions for modifying this asset. See the Permission documentation for more detail.",
          "label": "Asset Permissions",
          "name": "AssetPermissions",
          "type": "varbin",
          "varSize": "small"
        },
        {
          "description": "Set to true if transfers are permitted between two parties, otherwise set to false to prevent peer-to-peer transfers.",
          "example": 1,
          "label": "Transfers Permitted",
          "name": "TransfersPermitted",
          "type": "bool"
        },
        {
          "description": "If specified, the asset can only be traded within the specified trade restriction zone. For example, AUS would restrict to Australian residents only.",
          "label": "Trade Restrictions",
          "listSize": "small",
          "name": "TradeRestrictions",
          "type": "Polity[]"
        },
        {
          "description": "Set to true if the administration is permitted to make enforcement orders on user tokens and balances, otherwise set to false to disable this feature.",
          "example": 1,
          "label": "Enforcement Orders Permitted",
          "name": "EnforcementOrdersPermitted",
          "type": "bool"
        },
        {
          "description": "When false holders of this asset will not be able to vote for tokens of this asset even on voting systems in which vote multiplers are not permitted.",
          "example": true,
          "label": "Voting Rights",
          "name": "VotingRights",
          "type": "bool"
        },
        {
          "description": "Multiplies a vote by the specified integer. Where 1 token is equal to 1 vote with a 1 for vote multipler (normal), 1 token = 3 votes with a multiplier of 3, for example. If zero, then holders of this asset don't get any votes for their tokens.",
          "example": "3",
          "label": "Vote Multiplier",
          "name": "VoteMultiplier",
          "size": 1,
          "type": "uint"
        },
        {
          "description": "Set to true if the administration is permitted to make proposals outside of the smart contract scope.",
          "example": true,
          "label": "Administration Proposal",
          "name": "AdministrationProposal",
          "notes": "General Governance",
          "type": "bool"
        },
        {
          "description": "Set to true if a holder is permitted to make proposals outside of the smart contract scope.",
          "example": true,
          "label": "Holder Proposal",
          "name": "HolderProposal",
          "type": "bool"
        },
        {
          "description": "Supported values: 1 - Contract-wide Asset Governance. 0 - Asset-wide Asset Governance.  If a referendum or initiative is used to propose a modification to a subfield controlled by the asset permissions, then the vote will either be a contract-wide vote (all assets vote on the referendum/initiative) or an asset-wide vote (only this asset votes on the referendum/initiative) depending on the value in this subfield.  The voting system specifies the voting rules.",
          "example": "1",
          "label": "Asset Modification Governance",
          "name": "AssetModificationGovernance",
          "options": [
            0,
            1
          ],
          "size": 1,
          "type": "uint"
        },
        {
          "description": "The number of tokens to issue with this asset. Set to greater than zero for fungible tokens. If the value is 1 then it becomes a non-fungible token, where the contract would have many assets. Set to 0 to represent a placeholder asset, where tokens are to be issued later, or to represent a decomissioned asset where all tokens have been revoked.",
          "example": "1000000",
          "label": "Token Quantity",
          "name": "TokenQty",
          "size": 8,
          "type": "uint"
        },
        {
          "description": "A code representing the type of asset and the structure of the payload.",
          "label": "Asset Type",
          "name": "AssetType",
          "type": "AssetType"
        },
        {
          "description": "A custom payload that contains meta data about this asset. Payload structure and length is dependent on the asset type chosen. See asset documentation for more details.",
          "label": "Asset Payload",
          "name": "AssetPayload",
          "type": "varbin",
          "varSize": "small"
        }
      ],
      "label": "Asset Definition",
      "metadata": {
        "inputs": [
          {
            "comments": "This action can only come from the administration.",
            "label": "Administration's Public Address",
            "name": "Administration"
          }
        ],
        "outputs": [
          {
            "comments": "The contract that this asset should be assigned to. Must include enough for the responding action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "AssetDefinition"
    },
    {
      "code": "A2",
      "description": "This action creates an asset in response to the administration's instructions in the Definition Action.",
      "fields": [
        {
          "description": "A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)",
          "label": "Asset Code",
          "name": "AssetCode",
          "notes": "Cannot be changed by the administration, operator or smart contract.",
          "type": "AssetCode"
        },
        {
          "description": "The index of the asset within the contract. First asset is zero, second is one. Used to derive the asset code.",
          "example": 0,
          "label": "Asset Index",
          "name": "AssetIndex",
          "size": 8,
          "type": "uint"
        },
        {
          "description": "A set of permission objects containing switches and field references that define the permissions for modifying this asset. See the Permission documentation for more detail.",
          "label": "Asset Permissions",
          "name": "AssetPermissions",
          "type": "varbin",
          "varSize": "small"
        },
        {
          "description": "Set to true if transfers are permitted between two parties, otherwise set to false to prevent peer-to-peer transfers.",
          "example": 1,
          "label": "Transfers Permitted",
          "name": "TransfersPermitted",
          "type": "bool"
        },
        {
          "description": "If specified, the asset can only be traded within the specified trade restriction zone. For example, AUS would restrict to Australian residents only.",
          "label": "Trade Restrictions",
          "listSize": "small",
          "name": "TradeRestrictions",
          "type": "Polity[]"
        },
        {
          "description": "Set to true if the administration is permitted to make enforcement orders on user tokens and balances, otherwise set to false to disable this feature.",
          "example": 1,
          "label": "Enforcement Orders Permitted",
          "name": "EnforcementOrdersPermitted",
          "type": "bool"
        },
        {
          "description": "When false holders of this asset will not be able to vote for tokens of this asset even on voting systems in which vote multiplers are not permitted.",
          "example": true,
          "label": "Voting Rights",
          "name": "VotingRights",
          "type": "bool"
        },
        {
          "description": "Multiplies a vote by the specified integer. Where 1 token is equal to 1 vote with a 1 for vote multipler (normal), 1 token = 3 votes with a multiplier of 3, for example. If zero, then holders of this asset don't get any votes for their tokens.",
          "example": "3",
          "label": "Vote Multiplier",
          "name": "VoteMultiplier",
          "size": 1,
          "type": "uint"
        },
        {
          "description": "Set to true if the administration is permitted to make proposals outside of the smart contract scope.",
          "example": true,
          "label": "Administration Proposal",
          "name": "AdministrationProposal",
          "notes": "General Governance",
          "type": "bool"
        },
        {
          "description": "Set to true if a holder is permitted to make proposals outside of the smart contract scope.",
          "example": true,
          "label": "Holder Proposal",
          "name": "HolderProposal",
          "type": "bool"
        },
        {
          "description": "Supported values: 1 - Contract-wide Asset Governance.  0 - Asset-wide Asset Governance.  If a referendum or initiative is used to propose a modification to a subfield controlled by the asset permissions, then the vote will either be a contract-wide vote (all assets vote on the referendum/initiative) or an asset-wide vote (only this asset votes on the referendum/initiative) depending on the value in this subfield.  The voting system specifies the voting rules.",
          "example": "1",
          "label": "Asset Modification Governance",
          "name": "AssetModificationGovernance",
          "options": [
            0,
            1
          ],
          "size": 1,
          "type": "uint"
        },
        {
          "description": "The number of tokens to issue with this asset. Set to greater than zero for fungible tokens. If the value is 1 then it becomes a non-fungible token, where the contract would have many assets. Set to 0 to represent a placeholder asset, where tokens are to be issued later, or to represent a decomissioned asset where all tokens have been revoked.",
          "example": "1000000",
          "label": "Token Quantity",
          "name": "TokenQty",
          "size": 8,
          "type": "uint"
        },
        {
          "description": "A code representing the type of asset and the structure of the payload.",
          "label": "Asset Type",
          "name": "AssetType",
          "type": "AssetType"
        },
        {
          "description": "A custom payload that contains meta data about this asset. Payload structure and length is dependent on the asset type chosen. See asset documentation for more details.",
          "label": "Asset Payload",
          "name": "AssetPayload",
          "type": "varbin",
          "varSize": "small"
        },
        {
          "description": "A counter for the number of times this asset has been revised using a modification action.",
          "example": "456789",
          "label": "Asset Revision",
          "name": "AssetRevision",
          "size": 4,
          "type": "uint"
        },
        {
          "description": "Timestamp in nanoseconds of when the smart contract created the action.",
          "label": "Timestamp",
          "name": "Timestamp",
          "notes": "Cannot be changed by the administration or operator. Smart contract controls.",
          "type": "Timestamp"
        }
      ],
      "label": "Asset Creation",
      "metadata": {
        "inputs": [
          {
            "comments": "The contract that this asset was assigned to.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "outputs": [
          {
            "comments": "Required so that users can monitor transactions to the contract for updates to contract/assets.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "AssetCreation"
    },
    {
      "code": "A3",
      "description": "Token Dilutions, Call Backs/Revocations, burning etc.",
      "fields": [
        {
          "description": "Three letter character that specifies the asset type.",
          "example": "SHC",
          "label": "Asset Type",
          "name": "AssetType",
          "size": 3,
          "type": "fixedchar"
        },
        {
          "description": "A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)",
          "label": "Asset Code",
          "name": "AssetCode",
          "notes": "Cannot be changed by the administration, operator or smart contract.",
          "type": "AssetCode"
        },
        {
          "description": "The current revision figure to ensure the modification provided is based on the latest version.",
          "example": 0,
          "label": "Asset Revision",
          "name": "AssetRevision",
          "notes": "Cannot be Amended",
          "size": 4,
          "type": "uint"
        },
        {
          "description": "A collection of modifications to perform on this asset.",
          "label": "Amendments",
          "name": "Amendments",
          "type": "Amendment[]"
        },
        {
          "description": "The Bitcoin transaction ID of the associated result action that permitted the modifications. See Governance for more details.",
          "label": "Ref Tx ID",
          "name": "RefTxID",
          "type": "TxId"
        }
      ],
      "label": "Asset Modification",
      "metadata": {
        "inputs": [
          {
            "comments": "This action can only come from the administration.",
            "label": "Administration's Public Address",
            "name": "Administration"
          }
        ],
        "outputs": [
          {
            "comments": "The contract that this asset currently belongs to. Must include enough for the responding action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "AssetModification"
    },
    {
      "code": "T1",
      "description": "A Token Owner(s) Sends, Exchanges or Swaps a token(s) or Bitcoin for a token(s) or Bitcoin.  Can be as simple as sending a single token to a receiver.  Or can be as complex as many senders sending many different assets - controlled by many different smart contracts - to a number of receivers.  This action also supports atomic swaps (tokens for tokens).  Since many parties and contracts can be involved in a transfer and the corresponding settlement action, the partially signed T1 and T2 actions will need to be passed around on-chain with an M1 action, or off-chain.",
      "fields": [
        {
          "description": "The Assets involved in the Transfer Action.",
          "label": "Assets",
          "name": "Assets",
          "type": "AssetTransfer[]"
        },
        {
          "description": "This prevents any party from holding on to the partially signed message as a form of an option.  Eg. the exchange at this price is valid for 30 mins.",
          "label": "Offer Expiry",
          "name": "OfferExpiry",
          "type": "Timestamp"
        },
        {
          "description": "Fixed amount of bitcoin being paid to an exchange for facilitating a transfer.",
          "example": "0.01",
          "label": "Exchange Fee",
          "name": "ExchangeFee",
          "size": 8,
          "type": "uint"
        },
        {
          "description": "Identifies the public address that the exchange fee should be paid to.",
          "label": "Exchange Fee Address",
          "name": "ExchangeFeeAddress",
          "type": "Address"
        }
      ],
      "label": "Transfer",
      "metadata": {
        "inputs": [
          {
            "comments": "Asset (token) Sending Public Address. Assets[i].AssetSenders[j].Index references these inputs.",
            "label": "Asset Senders",
            "name": "AssetSenders"
          }
        ],
        "outputs": [
          {
            "comments": "Enough for the costs of the responding action, including any bitcoins being transfered, and the Contract Fee.",
            "label": "Contract Public Address for Asset X",
            "name": "AssetContract"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "Transfer"
    },
    {
      "code": "T2",
      "description": "Settles the transfer request of bitcoins and tokens from transfer (T1) actions.",
      "fields": [
        {
          "description": "The Assets settled by the transfer action.",
          "label": "Assets",
          "name": "Assets",
          "type": "AssetSettlement[]"
        },
        {
          "description": "Timestamp in nanoseconds of when the smart contract created the action.",
          "label": "Timestamp",
          "name": "Timestamp",
          "notes": "Cannot be changed by the administration, operator. Smart contract controls.",
          "type": "Timestamp"
        }
      ],
      "label": "Settlement",
      "metadata": {
        "inputs": [
          {
            "comments": "Contract (Asset X) in response to a transfer action with Asset X being sent to another address(es).",
            "label": "Contract Public Address (Asset X)",
            "name": "AssetXContract"
          }
        ],
        "outputs": [
          {
            "comments": "Address X that is being settled for Asset 1.",
            "label": "Asset 1 Settlement Address X",
            "name": "AssetXSettlementAddressX"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "Settlement"
    },
    {
      "code": "G1",
      "description": "Allows the Administration/Token Holders to propose a change (aka Initiative/Shareholder vote).  A significant cost - specified in the Contract Formation - can be attached to this action when sent from Token Holders to reduce spam, as the resulting vote will be put to all token owners.",
      "fields": [
        {
          "description": "Type of proposal. Supported values:\n  0 Referendum / Administration Initiates / Members Vote\n  1 Initiative / Members Initiate / Members Vote\n  2 AdministrativeMatter / Administration Initiates / Administrators Vote\n",
          "label": "Type",
          "name": "Type",
          "options": [
            0,
            1,
            2
          ],
          "size": 1,
          "type": "uint"
        },
        {
          "description": "Three letter character that specifies the asset type.",
          "example": "SHC",
          "label": "Asset Type",
          "name": "AssetType",
          "size": 3,
          "type": "fixedchar"
        },
        {
          "description": "A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)",
          "label": "Asset Code",
          "name": "AssetCode",
          "notes": "Cannot be changed by the administration, operator or smart contract.",
          "type": "AssetCode"
        },
        {
          "description": "X for Vote System X. (1-255, 0 is not valid.)",
          "example": "1",
          "label": "Vote System",
          "name": "VoteSystem",
          "size": 1,
          "type": "uint"
        },
        {
          "description": "Each element contains details of which fields to modify, or delete. Because the number of fields in a Contract and Asset is dynamic due to some fields being able to be repeated, the index value of the field needs to be calculated against the Contract or Asset the changes are to apply to. In the event of a Vote being created from this Initiative, the changes will be applied to the version of the Contract or Asset at that time.",
          "label": "Proposed Amendments",
          "name": "ProposedAmendments",
          "type": "Amendment[]"
        },
        {
          "description": "Length 1-255 bytes. 0 is not valid. Each byte allows for a different vote option. Typical votes will likely be multiple choice or Y/N. Vote instances are identified by the Tx-ID. AB would be used for Y/N (binary) type votes. When Specific is true, only AB is a valid value.",
          "example": "ABCDEFGHIJKLMNO",
          "label": "Vote Options",
          "name": "VoteOptions",
          "type": "varchar"
        },
        {
          "description": "Range: 1-X. How many selections can a voter make in a Ballot Cast. 1 is selected for Y/N (binary). When Specific is true, only 1 is a valid value.",
          "example": "15",
          "label": "Vote Max",
          "name": "VoteMax",
          "size": 1,
          "type": "uint"
        },
        {
          "description": "Length restricted by the Bitcoin protocol. 0 is valid. Description or details of the vote",
          "example": "Change the name of the Contract.",
          "label": "Proposal Description",
          "name": "ProposalDescription",
          "type": "varchar",
          "varSize": "medium"
        },
        {
          "description": "SHA256 Hash of the proposal document to be distributed to voters.",
          "example": "77201b0094f50df309f0343e4f44dae64d0de503c91038faf2c6b039f9f18aec",
          "label": "Proposal Document Hash",
          "name": "ProposalDocumentHash",
          "size": 32,
          "type": "bin"
        },
        {
          "description": "Ballot casts after this timestamp will not be included. The vote has finished.",
          "label": "Vote Cut-Off Timestamp",
          "name": "VoteCutOffTimestamp",
          "type": "Timestamp"
        }
      ],
      "label": "Proposal",
      "metadata": {
        "inputs": [
          {
            "comments": "The user making the proposal for this contract.",
            "label": "Operator / Token Owner's Public Address",
            "name": "User"
          }
        ],
        "outputs": [
          {
            "comments": "Includes contract fee and holder proposal fee if applicable.",
            "label": "Contract Public Address",
            "name": "Contract"
          },
          {
            "comments": "Fund the Result TX at Vote cut off",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection",
        "validation": "Contract/Asset Amendment or nothing"
      },
      "name": "Proposal"
    },
    {
      "code": "G2",
      "description": "A vote is created by the Contract in response to a valid Proposal Action.",
      "fields": [
        {
          "description": "Timestamp in nanoseconds of when the smart contract created the action.",
          "label": "Timestamp",
          "name": "Timestamp",
          "notes": "Cannot be changed by the administration, operator. Smart contract controls.",
          "type": "Timestamp"
        }
      ],
      "label": "Vote",
      "metadata": {
        "inputs": [
          {
            "comments": "The contract that is performing this action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "outputs": [
          {
            "comments": "Required so that users can monitor transactions to the contract for notifications of this action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection",
        "validation": "None"
      },
      "name": "Vote"
    },
    {
      "code": "G3",
      "description": "Used by Token Owners to cast their ballot (vote) on proposals. 1 Vote per token unless a vote multiplier is specified in the relevant Asset Definition action.",
      "fields": [
        {
          "description": "Tx ID of the Vote the Ballot Cast is being made for.",
          "label": "Vote Tx ID",
          "name": "VoteTxId",
          "type": "TxId"
        },
        {
          "description": "Length 1-255 bytes. 0 is not valid. Max length is the VoteMax value from the Proposal action. Accept, Reject, Abstain, Spoiled, Multiple Choice, or Preference List. 15 options total. Order of preference. 1st position = 1st choice. 2nd position = 2nd choice, etc. A is always Accept and B is always reject in a Y/N votes.",
          "example": "A",
          "label": "Vote",
          "name": "Vote",
          "type": "varchar"
        }
      ],
      "label": "Ballot Cast",
      "metadata": {
        "inputs": [
          {
            "comments": "The user casting the ballot for this contract.",
            "label": "Token Owner's Public Address",
            "name": "User"
          }
        ],
        "nvalidation": "BallotCounted",
        "outputs": [
          {
            "comments": "Funds ballot cast response.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection"
      },
      "name": "BallotCast"
    },
    {
      "code": "G4",
      "description": "The smart contract will respond to a Ballot Cast action with a Ballot Counted action if the Ballot Cast is valid. If the Ballot Cast is not valid, then the smart contract will respond with a Rejection Action.",
      "fields": [
        {
          "description": "Tx ID of the Vote the Ballot Cast is being made for.",
          "label": "Vote Tx ID",
          "name": "VoteTxId",
          "type": "TxId"
        },
        {
          "description": "Length 1-255 bytes. 0 is not valid. Max length is the VoteMax value from the Proposal action. Accept, Reject, Abstain, Spoiled, Multiple Choice, or Preference List. 15 options total. Order of preference. 1st position = 1st choice. 2nd position = 2nd choice, etc. A is always Accept and B is always reject in a Y/N votes.",
          "example": "A",
          "label": "Vote",
          "name": "Vote",
          "type": "varchar"
        },
        {
          "description": "Number of votes counted for this ballot. Factors in vote multipliers if there are any allowed, otherwise it is just quantity of tokens held.",
          "label": "Quantity",
          "name": "Quantity",
          "size": 8,
          "type": "uint"
        },
        {
          "description": "Timestamp in nanoseconds of when the smart contract created the action.",
          "label": "Timestamp",
          "name": "Timestamp",
          "notes": "Cannot be changed by the administration, operator. Smart contract controls.",
          "type": "Timestamp"
        }
      ],
      "label": "Ballot Counted",
      "metadata": {
        "inputs": [
          {
            "comments": "The contract that is performing this action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "outputs": [
          {
            "comments": "Required so that users can monitor transactions to the contract for notifications of this action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection",
        "validation": "None"
      },
      "name": "BallotCounted"
    },
    {
      "code": "G5",
      "description": "Once a vote has been completed the results are published. After the result is posted, it is up to the administration to send a contract/asset amendement if appropriate.",
      "fields": [
        {
          "description": "Three letter character that specifies the asset type.",
          "example": "SHC",
          "label": "Asset Type",
          "name": "AssetType",
          "size": 3,
          "type": "fixedchar"
        },
        {
          "description": "A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)",
          "label": "Asset Code",
          "name": "AssetCode",
          "notes": "Cannot be changed by the administration, operator or smart contract.",
          "type": "AssetCode"
        },
        {
          "description": "Each element contains details of which fields to modify, or delete. Because the number of fields in a Contract and Asset is dynamic due to some fields being able to be repeated, the index value of the field needs to be calculated against the Contract or Asset the changes are to apply to. In the event of a Vote being created from this Initiative, the changes will be applied to the version of the Contract or Asset at that time.",
          "label": "Proposed Amendments",
          "name": "ProposedAmendments",
          "type": "Amendment[]"
        },
        {
          "description": "Link to the Vote Action txn.",
          "label": "Vote Tx ID",
          "name": "VoteTxId",
          "type": "TxId"
        },
        {
          "description": "List of number of valid votes counted for each vote option. Length is encoded like a regular list object, but must match the length of VoteOptions from the Proposal action.",
          "label": "Option Tally",
          "name": "OptionTally",
          "size": 8,
          "type": "uint[]"
        },
        {
          "description": "Length 1-255 bytes. 0 is not valid. The Option with the most votes. In the event of a draw for 1st place, all winning options are listed.",
          "label": "Result",
          "name": "Result",
          "type": "varchar"
        },
        {
          "description": "Timestamp in nanoseconds of when the smart contract created the action.",
          "label": "Timestamp",
          "name": "Timestamp",
          "notes": "Cannot be changed by the administration, operator. Smart contract controls.",
          "type": "Timestamp"
        }
      ],
      "label": "Result",
      "metadata": {
        "inputs": [
          {
            "comments": "The contract that is performing this action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "outputs": [
          {
            "comments": "Required so that users can monitor transactions to the contract for notifications of this action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection",
        "validation": "None"
      },
      "name": "Result"
    },
    {
      "code": "E1",
      "description": "Used by the administration to signal to the smart contract that the tokens that a particular public address(es) owns are to be confiscated, frozen, thawed or reconciled.",
      "fields": [
        {
          "description": "Freeze (F), Thaw (T), Confiscate (C), Reconcile (R)",
          "example": "F",
          "label": "Compliance Action",
          "name": "ComplianceAction",
          "options": [
            "F",
            "T",
            "C",
            "R"
          ],
          "size": 1,
          "type": "fixedchar"
        },
        {
          "description": "Three letter character that specifies the asset type.",
          "example": "SHC",
          "label": "Asset Type",
          "name": "AssetType",
          "size": 3,
          "type": "fixedchar"
        },
        {
          "description": "A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)",
          "label": "Asset Code",
          "name": "AssetCode",
          "notes": "Cannot be changed by the administration, operator or smart contract.",
          "type": "AssetCode"
        },
        {
          "description": "The holders and quantities that are effected by the order. For a contract or asset wide freeze only the contract address is specified. Zero quantities are invalid unless it is for the contract address in an asset wide or contract wide freeze. In a thaw order this field is not serialized, because the entire freeze from the FreezeTxId freeze action will be thawed.",
          "label": "Target Addresses",
          "listSize": "medium",
          "name": "TargetAddresses",
          "type": "TargetAddress[]"
        },
        {
          "description": "The tx id of the freeze action that is being thawed. Only serialized for thaw orders.",
          "label": "Freeze Tx Id",
          "name": "FreezeTxId",
          "type": "TxId"
        },
        {
          "description": "Used for a 'time out'.  Tokens are automatically unfrozen after the expiration timestamp without requiring a Thaw Action. Null value for Thaw, Confiscation and Reconciallitaion orders.",
          "example": "Tue Oct 09 2018 05:00:00 GMT+1000 (AEST)",
          "label": "Freeze Period",
          "name": "FreezePeriod",
          "type": "Timestamp"
        },
        {
          "description": "The public address for confiscated tokens to be deposited in.  Null for Freeze, Thaw, actions.",
          "label": "Deposit Address",
          "name": "DepositAddress",
          "notes": "Eventually the supporting evidence/explanation can be supported by a Subfield that has the public address (and a signed message) owned by a legal authority for ID verification/certification purposes.",
          "type": "Address"
        },
        {
          "description": "Length 0-255 bytes. Enforcement Authority Name (eg. Issuer, Queensland Police Service, Tokenized, etc.)",
          "example": "Supreme and District Courts Brisbane",
          "label": "Authority Name",
          "name": "AuthorityName",
          "type": "varchar"
        },
        {
          "description": "Length 0-255 bytes. Public Key associated with the Enforcement Authority",
          "label": "Authority Public Key",
          "name": "AuthorityPublicKey",
          "type": "varbin"
        },
        {
          "description": "Algorithm used for order signature. Only valid value is currently 1 = ECDSA+secp256k1",
          "example": 1,
          "label": "Signature Algorithm",
          "name": "SignatureAlgorithm",
          "options": [
            1
          ],
          "size": 1,
          "type": "uint"
        },
        {
          "description": "Length 0-255 bytes. Signature for a message that lists out the target addresses and deposit address. Signature of (Contract PKH, Compliance Action, Authority Name, Asset Code, Supporting Evidence Hash, FreezePeriod, TargetAddresses, and DepositAddress)",
          "label": "Authority Order Signature",
          "name": "OrderSignature",
          "type": "varbin"
        },
        {
          "description": "Deprecated for new supporting evidence type and data fields. SHA-256: warrant, court order, etc.",
          "label": "Deprecated Supporting Evidence Hash",
          "name": "DeprecatedSupportingEvidenceHash",
          "size": 32,
          "type": "bin"
        },
        {
          "description": "Deprecated for a new data format for reference transactions. The request/response actions that were dropped.  The entire txn for both actions is included as evidence that the actions were accepted into the mempool at one point and that the senders (token/Bitcoin) signed their intent to transfer.  The management of this record keeping is off-chain and managed by the administration or operator to preserve the integrity of the state of the tokens. Only applicable for reconcilliation actions.  No subfield when F, T, R is selected as the Compliance Action subfield.",
          "label": "Deprecated Ref Txs",
          "name": "DeprecatedRefTxs",
          "notes": "Can be null.  Dropped actions that require a reconciliation action to fix the break in the chain are considered to be an extremely rare event.",
          "type": "varbin",
          "varSize": "medium"
        },
        {
          "description": "Index of address in TargetAddresses and amount of bitcoin (in satoshis) they are receiving in exchange for their tokens.",
          "label": "Bitcoin Dispersions",
          "listSize": "small",
          "name": "BitcoinDispersions",
          "type": "QuantityIndex[]"
        },
        {
          "description": "A message to include with the enforcement order.",
          "example": "Compelled by a court order.",
          "label": "Message",
          "name": "Message",
          "type": "varchar",
          "varSize": "medium"
        },
        {
          "description": "The data format of the supporting evidence field. 0 = no evidence data provided, 1 = markdown containing warrant, court order, etc.",
          "label": "Supporting Evidence Format",
          "name": "SupportingEvidenceFormat",
          "options": [
            0,
            1
          ],
          "size": 1,
          "type": "uint"
        },
        {
          "description": "Supporting evidence related to the order being requested.",
          "label": "Supporting Evidence",
          "name": "SupportingEvidence",
          "size": "medium",
          "type": "varbin"
        },
        {
          "description": "The request/response actions that were dropped.  The entire txn for both actions is included as evidence that the actions were accepted into the mempool at one point and that the senders (token/Bitcoin) signed their intent to transfer.  The management of this record keeping is off-chain and managed by the administration or operator to preserve the integrity of the state of the tokens. Only applicable for reconcilliation actions.  No subfield when F, T, R is selected as the Compliance Action subfield.",
          "label": "Reference Transactions",
          "listSize": "medium",
          "name": "ReferenceTransactions",
          "notes": "Can be null.  Dropped actions that require a reconciliation action to fix the break in the chain are considered to be an extremely rare event.",
          "type": "ReferenceTransaction[]"
        }
      ],
      "label": "Order",
      "metadata": {
        "inputs": [
          {
            "comments": "This action can only come from the administration.",
            "label": "Administration's Public Address",
            "name": "Administration"
          }
        ],
        "outputs": [
          {
            "comments": "Contract fee and funding for response transaction.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "Order"
    },
    {
      "code": "E2",
      "description": "The contract responding to an Order action to freeze assets. To be used to comply with contractual/legal/issuer requirements. The target public address(es) will be marked as frozen. However the Freeze action publishes this fact to the public blockchain for transparency. The contract will not respond to any actions requested by the frozen address.\n",
      "fields": [
        {
          "description": "Three letter character that specifies the asset type.",
          "example": "SHC",
          "label": "Asset Type",
          "name": "AssetType",
          "size": 3,
          "type": "fixedchar"
        },
        {
          "description": "A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)",
          "label": "Asset Code",
          "name": "AssetCode",
          "notes": "Cannot be changed by the administration, operator or smart contract.",
          "type": "AssetCode"
        },
        {
          "description": "Indices to addresses in outputs and the quantities being frozen. If the only address is the contract address and the asset code is zeros, then it is a contract wide freeze. If the only address is the contract address and the asset code is specified, then it is an asset wide freeze.",
          "label": "Quantities",
          "listSize": "small",
          "name": "Quantities",
          "type": "QuantityIndex[]"
        },
        {
          "description": "Used for a 'time out'.  Tokens are automatically unfrozen after the expiration timestamp without requiring a Thaw Action.",
          "label": "Freeze Period",
          "name": "FreezePeriod",
          "type": "Timestamp"
        },
        {
          "description": "Timestamp in nanoseconds of when the smart contract created the action.",
          "label": "Timestamp",
          "name": "Timestamp",
          "notes": "Cannot be changed by the administration, operator. Smart contract controls.",
          "type": "Timestamp"
        }
      ],
      "label": "Freeze",
      "metadata": {
        "inputs": [
          {
            "comments": "The contract that is performing this action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "outputs": [
          {
            "comments": "If Target Public Address is the Contract Address then the entire contract is frozen.  All request actions during the Freeze period will be ignored and rejected when the contract is thawed and rebuilds.",
            "label": "Target Public Address X",
            "name": "TargetX"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "Freeze"
    },
    {
      "code": "E3",
      "description": "The contract responding to an Order action to thaw assets. To be used to comply with contractual obligations or legal requirements. The Alleged Offender's tokens will be unfrozen to allow them to resume normal exchange and governance activities.\n",
      "fields": [
        {
          "description": "The tx id of the freeze action that is being reversed.",
          "label": "Freeze Tx Id",
          "name": "FreezeTxId",
          "type": "TxId"
        },
        {
          "description": "Timestamp in nanoseconds of when the smart contract created the action.",
          "label": "Timestamp",
          "name": "Timestamp",
          "notes": "Cannot be changed by the administration, operator. Smart contract controls.",
          "type": "Timestamp"
        }
      ],
      "label": "Thaw",
      "metadata": {
        "inputs": [
          {
            "comments": "The contract that is performing this action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "outputs": [
          {
            "comments": "Can be the Contract Address for a 'Contract-wide' Thaw in response to a Contract-wide Freeze.",
            "label": "Target Public Address X",
            "name": "TargetX"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "Thaw"
    },
    {
      "code": "E4",
      "description": "The contract responding to an Order action to confiscate assets. To be used to comply with contractual obligations, legal and/or issuer requirements.\n",
      "fields": [
        {
          "description": "Three letter character that specifies the asset type.",
          "example": "SHC",
          "label": "Asset Type",
          "name": "AssetType",
          "size": 3,
          "type": "fixedchar"
        },
        {
          "description": "A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)",
          "label": "Asset Code",
          "name": "AssetCode",
          "notes": "Cannot be changed by the administration, operator or smart contract.",
          "type": "AssetCode"
        },
        {
          "description": "The holders effected by the confiscation and their balance remaining.",
          "label": "Quantities",
          "listSize": "small",
          "name": "Quantities",
          "type": "QuantityIndex[]"
        },
        {
          "description": "Deposit address's token balance after confiscation.",
          "example": "10000",
          "label": "Deposit Qty",
          "name": "DepositQty",
          "size": 8,
          "type": "uint"
        },
        {
          "description": "Timestamp in nanoseconds of when the smart contract created the action.",
          "label": "Timestamp",
          "name": "Timestamp",
          "notes": "Cannot be changed by the administration, operator. Smart contract controls.",
          "type": "Timestamp"
        }
      ],
      "label": "Confiscation",
      "metadata": {
        "inputs": [
          {
            "comments": "The contract that is performing this action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "outputs": [
          {
            "comments": "Can be the Contract Address for a 'Contract-wide' Confiscation.",
            "label": "Target Public Address X",
            "name": "TargetX"
          },
          {
            "comments": "Dust limit rule minimum value output of 546",
            "label": "Deposit Public Address",
            "name": null
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "Confiscation"
    },
    {
      "code": "E5",
      "description": "The contract responding to an Order action to reconcile assets. To be used at the direction of the administration to fix record keeping errors with bitcoin and token balances.\n",
      "fields": [
        {
          "description": "Three letter character that specifies the asset type.",
          "example": "SHC",
          "label": "Asset Type",
          "name": "AssetType",
          "size": 3,
          "type": "fixedchar"
        },
        {
          "description": "A unique code that is used to identify the asset. It is generated by hashing the contract public key hash and the asset index. SHA256(contract PKH + asset index)",
          "label": "Asset Code",
          "name": "AssetCode",
          "notes": "Cannot be changed by the administration, operator or smart contract.",
          "type": "AssetCode"
        },
        {
          "description": "The holders effected by the reconciliation and their balance remaining.",
          "label": "Quantities",
          "listSize": "small",
          "name": "Quantities",
          "type": "QuantityIndex[]"
        },
        {
          "description": "Timestamp in nanoseconds of when the smart contract created the action.",
          "label": "Timestamp",
          "name": "Timestamp",
          "notes": "Cannot be changed by the administration, operator. Smart contract controls.",
          "type": "Timestamp"
        }
      ],
      "label": "Reconciliation",
      "metadata": {
        "inputs": [
          {
            "comments": "The contract that is performing this action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "outputs": [
          {
            "comments": "546 minimum.  If N bitcoin needs to be sent to the address, then this will be the output that receives the Bitcoin.",
            "label": "Target Public Address X",
            "name": "TargetX"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "Reconciliation"
    },
    {
      "code": "R1",
      "description": "Establishes an on-chain register.",
      "fields": [
        {
          "description": "A custom message to include with this action.",
          "example": "North America Whitelist",
          "label": "Message",
          "name": "Message",
          "type": "varchar",
          "varSize": "medium"
        }
      ],
      "label": "Establishment",
      "metadata": {
        "inputs": [
          {
            "comments": "The address of the associated register.",
            "label": "Register Public Address",
            "name": "Register"
          }
        ],
        "outputs": [
          {
            "comments": "Required so that users can monitor transactions to the register for notifications of this action.",
            "label": "Register Public Address",
            "name": "Register"
          }
        ]
      },
      "name": "Establishment"
    },
    {
      "code": "R2",
      "description": "Adds an entry to the Register.",
      "fields": [
        {
          "description": "A custom message to include with this action.",
          "example": "username",
          "label": "Message",
          "name": "Message",
          "type": "varchar",
          "varSize": "medium"
        }
      ],
      "label": "Addition",
      "metadata": {
        "inputs": [
          {
            "comments": "The address of the associated register.",
            "label": "Register Public Address",
            "name": "Register"
          }
        ],
        "outputs": [
          {
            "comments": "Required so that users can monitor transactions to the register for notifications of this action.",
            "label": "Register Public Address",
            "name": "Register"
          }
        ]
      },
      "name": "Addition"
    },
    {
      "code": "R3",
      "description": "A register entry/record can be altered.",
      "fields": [
        {
          "description": "Transaction ID of the register entry to be altered.",
          "label": "Entry Tx ID",
          "name": "EntryTxID",
          "type": "TxId"
        },
        {
          "description": "A custom message to include with this action.",
          "example": "Changed Country of Residence",
          "label": "Message",
          "name": "Message",
          "type": "varchar",
          "varSize": "medium"
        }
      ],
      "label": "Alteration",
      "metadata": {
        "inputs": [
          {
            "comments": "The address of the associated register.",
            "label": "Register Public Address",
            "name": "Register"
          }
        ],
        "outputs": [
          {
            "comments": "Required so that users can monitor transactions to the register for notifications of this action.",
            "label": "Register Public Address",
            "name": "Register"
          }
        ]
      },
      "name": "Alteration"
    },
    {
      "code": "R4",
      "description": "Removes an entry/record from the Register.",
      "fields": [
        {
          "description": "Transaction ID of the register entry to be altered.",
          "label": "Entry Tx ID",
          "name": "EntryTxID",
          "type": "TxId"
        },
        {
          "description": "A custom message to include with this action.",
          "example": "Removed due to violation of company policy.",
          "label": "Message",
          "name": "Message",
          "type": "varchar",
          "varSize": "medium"
        }
      ],
      "label": "Removal",
      "metadata": {
        "inputs": [
          {
            "comments": "The address of the associated register.",
            "label": "Register Public Address",
            "name": "Register"
          }
        ],
        "outputs": [
          {
            "comments": "Required so that users can monitor transactions to the register for notifications of this action.",
            "label": "Register Public Address",
            "name": "Register"
          }
        ]
      },
      "name": "Removal"
    },
    {
      "code": "M1",
      "description": "The message action is a general purpose communication action. 'Twitter/SMS' for Issuers/Investors/Users. The message txn can also be used for passing partially signed txns on-chain, establishing private communication channels and EDI (receipting, invoices, PO, and private offers/bids). The messages are broken down by type for easy filtering in the a user's wallet. The Message Types are listed in the Message Types table.\n",
      "fields": [
        {
          "description": "Associates the message to a particular input by the index. If none are specified then the first input is assumed.",
          "label": "Sender Indexes",
          "name": "SenderIndexes",
          "size": 4,
          "type": "uint[]"
        },
        {
          "description": "Associates the message to a particular output by the index. If none are specified then the first output is assumed.",
          "label": "Receiver Indexes",
          "name": "ReceiverIndexes",
          "size": 4,
          "type": "uint[]"
        },
        {
          "label": "Message Code",
          "name": "MessageCode",
          "size": 2,
          "type": "uint"
        },
        {
          "description": "Public or private (RSA public key, Diffie-Hellman). Issuers/Contracts can send the signifying amount of satoshis to themselves for public announcements or private 'notes' if encrypted. See Message Types for a full list of potential use cases.\n",
          "example": "Hello world!",
          "label": "Message Payload",
          "name": "MessagePayload",
          "type": "varbin",
          "varSize": "medium"
        }
      ],
      "label": "Message",
      "metadata": {
        "inputs": [
          {
            "comments": "The user sending the message.",
            "label": "Sender Public Address",
            "name": "MsgSender"
          }
        ],
        "outputs": [
          {
            "comments": "The recipient's address for the message, supplied by the sender.",
            "label": "Receiver Public Address\"",
            "name": "MsgReceiverX"
          }
        ]
      },
      "name": "Message"
    },
    {
      "code": "M2",
      "description": "Used to reject request actions that do not comply with the Contract. If money is to be returned to a User then it is used in lieu of the Settlement Action to properly account for token balances. All Administration/User request Actions must be responded to by the Contract with an Action.  The only exception to this rule is when there is not enough fees in the first Action for the Contract response action to remain revenue neutral.  If not enough fees are attached to pay for the Contract response then the Contract will not respond.",
      "fields": [
        {
          "description": "Associates the message to a particular output by the index. If none are specified then the first output is assumed.",
          "label": "Address Indexes",
          "name": "AddressIndexes",
          "size": 4,
          "type": "uint[]"
        },
        {
          "description": "The address which is believed to have caused the rejection.",
          "label": "Reject Address Index",
          "name": "RejectAddressIndex",
          "size": 2,
          "type": "uint"
        },
        {
          "description": "Classifies the rejection by a type.",
          "example": "1",
          "label": "Rejection Code",
          "name": "RejectionCode",
          "type": "RejectionCode"
        },
        {
          "description": "Length 0-65,535 bytes. Message that explains the reasoning for a rejection, if needed.  Most rejection types will be captured by the Rejection Type Subfield.",
          "example": "Sorry, you don't have enough tokens.",
          "label": "Message",
          "name": "Message",
          "type": "varchar",
          "varSize": "small"
        },
        {
          "description": "Timestamp in nanoseconds of when the smart contract created the action.",
          "label": "Timestamp",
          "name": "Timestamp",
          "notes": "Cannot be changed by the administration, operator. Smart contract controls.",
          "type": "Timestamp"
        }
      ],
      "label": "Rejection",
      "metadata": {
        "inputs": [
          {
            "comments": "The contract that is performing this action.",
            "label": "Contract Public Address",
            "name": "Contract"
          }
        ],
        "outputs": [
          {
            "comments": "The affected user or contract's publid addresses. Refunds all money provided in the request action, less fees",
            "label": "User / Contract public addresses",
            "name": "Recipients"
          }
        ],
        "rejection": "Rejection",
        "validation": "AssetCreation"
      },
      "name": "Rejection"
    }
  ],
  "name": "Tokenized Protocol",
  "package": "actions",
  "resources": [
    {
      "codeType": {
        "size": 1,
        "type": "fixedchar"
      },
      "description": "Legal Entities \u0026 Ownership Structures. 1 character.",
      "name": "Entities",
      "values": [
        {
          "code": "",
          "label": "Unspecified",
          "metadata": null,
          "name": "Unspecified"
        },
        {
          "code": "I",
          "label": "Individual",
          "metadata": {
            "constitutionalDocument": null,
            "roles": {
              "administrators": {
                "agent": [],
                "legalGuardian": [],
                "principal": null
              },
              "associates": {
                "accountant": [],
                "advisor": [],
                "lawyer": [],
                "manager": [],
                "trader": []
              },
              "collaborators": {
                "friend": [],
                "governmentAgency": [],
                "suppliers": []
              },
              "managers": null,
              "members": {
                "principal": null
              }
            },
            "type": "Legal"
          },
          "name": "Individual"
        },
        {
          "code": "P",
          "label": "Public Company Limited by Shares",
          "metadata": {
            "constitutionalDocument": {
              "companyConstitution": null
            },
            "roles": {
              "administrators": {
                "chairman": null,
                "director": []
              },
              "associates": {
                "accountant": [],
                "advisor": [],
                "employee": [],
                "lawyer": [],
                "manager": [],
                "trader": []
              },
              "collaborators": {
                "customer": [],
                "governmentAgency": [],
                "supplier": []
              },
              "managers": {
                "ceo": null,
                "cfo": null,
                "coo": null,
                "cto": null,
                "executive": [],
                "secretary": null
              },
              "members": {
                "shareholder": [],
                "significantShareholder": []
              }
            },
            "type": "Legal"
          },
          "name": "PublicCompany"
        },
        {
          "code": "C",
          "label": "Private Company Limited by Shares",
          "metadata": {
            "constitutionalDocument": {
              "companyConstitution": null
            },
            "roles": {
              "administrators": {
                "chairman": null,
                "director": []
              },
              "associates": {
                "accountant": [],
                "advisor": [],
                "employee": [],
                "lawyer": [],
                "manager": [],
                "trader": []
              },
              "collaborators": {
                "customer": [],
                "governmentAgency": [],
                "supplier": []
              },
              "managers": {
                "ceo": null,
                "cfo": null,
                "coo": null,
                "cto": null,
                "executive": [],
                "secretary": null
              },
              "members": {
                "shareholder": [],
                "significantShareholder": []
              }
            },
            "type": "Legal"
          },
          "name": "PrivateCompany"
        },
        {
          "code": "L",
          "label": "Limited Partnership",
          "metadata": {
            "constitutionalDocument": {
              "partnershipAgreement": null
            },
            "roles": {
              "administrators": {
                "partner": []
              },
              "associates": {
                "accountant": [],
                "advisor": [],
                "employee": [],
                "lawyer": [],
                "manager": [],
                "trader": []
              },
              "collaborators": {
                "customer": [],
                "governmentAgency": [],
                "supplier": []
              },
              "managers": {
                "managingPartner": []
              },
              "members": {
                "partner": []
              }
            },
            "type": "Ownership"
          },
          "name": "LimitedPartnership"
        },
        {
          "code": "X",
          "label": "Unlimited Partnership",
          "metadata": {
            "constitutionalDocument": {
              "partnershipAgreement": null
            },
            "roles": {
              "administrators": {
                "partner": []
              },
              "associates": {
                "accountant": [],
                "advisor": [],
                "contractor": [],
                "employee": [],
                "lawyer": [],
                "manager": [],
                "trader": []
              },
              "collaborators": {
                "customer": [],
                "governmentAgency": [],
                "supplier": []
              },
              "managers": {
                "managingPartner": []
              },
              "members": {
                "partner": []
              }
            },
            "type": "Ownership"
          },
          "name": "UnlimitedPartnership"
        },
        {
          "code": "T",
          "label": "Sole Proprietorship",
          "metadata": {
            "constitutionalDocument": null,
            "roles": {
              "administrators": {
                "agent": [],
                "proprietor": null
              },
              "associates": {
                "accountant": [],
                "advisor": [],
                "employee": [],
                "lawyer": [],
                "manager": [],
                "trader": []
              },
              "collaborators": {
                "customer": [],
                "governmentAgency": [],
                "supplier": []
              },
              "members": {
                "proprietor": null
              }
            },
            "type": "Ownership"
          },
          "name": "SoleProprietorship"
        },
        {
          "code": "S",
          "label": "Statutory Company",
          "metadata": {
            "constitutionalDocument": {
              "companyConstitution": null
            },
            "roles": {
              "administrators": {
                "chairman": null,
                "director": []
              },
              "associates": {
                "accountant": [],
                "advisor": [],
                "employee": [],
                "lawyer": [],
                "manager": [],
                "trader": []
              },
              "collaborators": {
                "customer": [],
                "governmentAgency": [],
                "supplier": []
              },
              "managers": {
                "ceo": null,
                "cfo": null,
                "coo": null,
                "cto": null,
                "executive": [],
                "secretary": null
              },
              "members": {
                "nationState": null
              }
            },
            "type": "Legal"
          },
          "name": "StatutoryCompany"
        },
        {
          "code": "O",
          "label": "Non-Profit Organization",
          "metadata": {
            "constitutionalDocument": {
              "organizationConstitution": null
            },
            "role": {
              "administrators": {
                "chairman": null,
                "director": []
              },
              "associates": {
                "accountant": [],
                "advisor": [],
                "employee": [],
                "lawyer": [],
                "manager": [],
                "trader": []
              },
              "collaborators": {
                "customer": [],
                "governmentAgency": [],
                "supplier": []
              },
              "managers": {
                "ceo": null,
                "cfo": null,
                "coo": null,
                "cto": null,
                "executive": [],
                "secretary": null
              }
            },
            "type": "Legal"
          },
          "name": "NonProfitOrganization"
        },
        {
          "code": false,
          "label": "Nation State",
          "metadata": {
            "constitutionalDocument": {
              "nationalConstitution": null
            },
            "role": {
              "administrators": null,
              "associates": null,
              "collaborators": null,
              "managers": null,
              "members": {
                "citizen": []
              }
            },
            "type": "Legal"
          },
          "name": "NationState"
        },
        {
          "code": "G",
          "label": "Government Agency",
          "metadata": {
            "constitutionalDocument": {
              "charter": null
            },
            "role": {
              "administrators": null,
              "associates": {
                "accountant": [],
                "advisor": [],
                "employee": [],
                "lawyer": [],
                "manager": [],
                "trader": []
              },
              "collaborators": {
                "customer": [],
                "governmentAgency": [],
                "supplier": []
              },
              "members": null
            },
            "type": "Legal"
          },
          "name": "GovernmentAgency"
        },
        {
          "code": "U",
          "label": "Unit Trust",
          "metadata": {
            "constitutionalDocument": {
              "trustDeed": null
            },
            "roles": {
              "administrators": {
                "protector": [],
                "trustee": []
              },
              "associates": {
                "accountant": [],
                "advisor": [],
                "custodian": [],
                "employee": [],
                "lawyer": [],
                "manager": [],
                "settlor": [],
                "trader": []
              },
              "collaborators": {
                "customer": [],
                "governmentAgency": [],
                "supplier": []
              },
              "members": {
                "unitholder": []
              }
            },
            "type": "Ownership"
          },
          "name": "UnitTrust"
        },
        {
          "code": "D",
          "label": "Discretionary Trust",
          "metadata": {
            "constitutionalDocument": {
              "trustDeed": null
            },
            "roles": {
              "administrators": {
                "protector": [],
                "trustee": []
              },
              "associates": {
                "accountant": [],
                "advisor": [],
                "custodian": [],
                "employee": [],
                "lawyer": [],
                "manager": [],
                "settlor": [],
                "trader": []
              },
              "collaborators": {
                "customer": [],
                "governmentAgency": [],
                "supplier": []
              },
              "members": {
                "beneficiary": []
              }
            },
            "type": "Ownership"
          },
          "name": "DiscretionaryTrust"
        }
      ]
    },
    {
      "codeType": {
        "size": 3,
        "type": "fixedchar"
      },
      "description": "Polities (eg. Countries/Nation-States (ISO-3166 Alpha-3), Political Unions, International Organizations, etc.). Based on a 3 character code.",
      "name": "Polities",
      "values": [
        {
          "code": "ALA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/52/Flag_of_%C3%85land.svg",
            "phone_code": "+358",
            "states": null
          },
          "name": "Aaland Islands"
        },
        {
          "code": "AFG",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/9a/Flag_of_Afghanistan.svg",
            "phone_code": "+93",
            "states": null
          },
          "name": "Afghanistan"
        },
        {
          "code": "ALB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/36/Flag_of_Albania.svg",
            "phone_code": "+355",
            "states": null
          },
          "name": "Albania"
        },
        {
          "code": "DZA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/77/Flag_of_Algeria.svg",
            "phone_code": "+213",
            "states": null
          },
          "name": "Algeria"
        },
        {
          "code": "ASM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/87/Flag_of_American_Samoa.svg",
            "phone_code": "+1684",
            "states": null
          },
          "name": "American Samoa"
        },
        {
          "code": "AND",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/1/19/Flag_of_Andorra.svg",
            "phone_code": "+376",
            "states": null
          },
          "name": "Andorra"
        },
        {
          "code": "AGO",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Angola.svg",
            "phone_code": "+244",
            "states": null
          },
          "name": "Angola"
        },
        {
          "code": "AIA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/b4/Flag_of_Anguilla.svg",
            "phone_code": "+1264",
            "states": null
          },
          "name": "Anguilla"
        },
        {
          "code": "ATA",
          "metadata": {
            "flag": null,
            "phone_code": "+672",
            "states": null
          },
          "name": "Antarctica"
        },
        {
          "code": "ATG",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/89/Flag_of_Antigua_and_Barbuda.svg",
            "phone_code": "+1268",
            "states": null
          },
          "name": "Antigua and Barbuda"
        },
        {
          "code": "ARG",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/1/1a/Flag_of_Argentina.svg",
            "phone_code": "+54",
            "states": null
          },
          "name": "Argentina"
        },
        {
          "code": "ARM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/2f/Flag_of_Armenia.svg",
            "phone_code": "+374",
            "states": null
          },
          "name": "Armenia"
        },
        {
          "code": "ABW",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/f6/Flag_of_Aruba.svg",
            "phone_code": "+297",
            "states": null
          },
          "name": "Aruba"
        },
        {
          "code": "AU",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/51/Flag_of_the_African_Union.svg",
            "states": {
              "AGO": null,
              "BDI": null,
              "BEN": null,
              "BFA": null,
              "BWA": null,
              "CAF": null,
              "CIV": null,
              "CMR": null,
              "COD": null,
              "COM": null,
              "CPV": null,
              "DJI": null,
              "DZA": null,
              "EGY": null,
              "ERI": null,
              "ETH": null,
              "GAB": null,
              "GHA": null,
              "GIN": null,
              "GMB": null,
              "GNB": null,
              "GNQ": null,
              "KEN": null,
              "LBR": null,
              "LBY": null,
              "LSO": null,
              "SWZ": null,
              "TCD": null
            }
          },
          "name": "African Union"
        },
        {
          "code": "AUS",
          "metadata": {
            "fiscal_year": "0701-0630",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/b9/Flag_of_Australia.svg",
            "gov_fiscal_year": "0701-0630",
            "phone_code": "+61",
            "states": {
              "AUACT": "Australian Capital Territory",
              "AUCC": "Cocos (Keening) Island",
              "AUCX": "Christmas Island",
              "AUHM": "Heard Island and McDonalds Islands",
              "AUJBT": "Jervis Bay Territory",
              "AUNF": "Norfolk Island",
              "AUNSW": "New South Wales",
              "AUNT": "Northern Territory",
              "AUQLD": "Queensland",
              "AUSA": "South Australia",
              "AUTAS": "Tasmania",
              "AUVIC": "Victoria",
              "AUWA": "Western Australia"
            }
          },
          "name": "Australia"
        },
        {
          "code": "AUT",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/41/Flag_of_Austria.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+43",
            "states": null
          },
          "name": "Austria"
        },
        {
          "code": "AZE",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/dd/Flag_of_Azerbaijan.svg",
            "phone_code": "+994",
            "states": null
          },
          "name": "Azerbaijan"
        },
        {
          "code": "BHS",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/93/Flag_of_the_Bahamas.svg",
            "phone_code": "+1242",
            "states": null
          },
          "name": "The Bahamas"
        },
        {
          "code": "BHR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/2c/Flag_of_Bahrain.svg",
            "phone_code": "+973",
            "states": null
          },
          "name": "Bahrain"
        },
        {
          "code": "BGD",
          "metadata": {
            "fiscal_year": "0701-0630",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/f9/Flag_of_Bangladesh.svg",
            "gov_fiscal_year": "0701-0630",
            "phone_code": "+880",
            "states": null
          },
          "name": "Bangladesh"
        },
        {
          "code": "BRB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/e/ef/Flag_of_Barbados.svg",
            "phone_code": "+1246",
            "states": null
          },
          "name": "Barbados"
        },
        {
          "code": "BLR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/85/Flag_of_Belarus.svg",
            "phone_code": "+375",
            "states": null
          },
          "name": "Belarus"
        },
        {
          "code": "BEL",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/65/Flag_of_Belgium.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+32",
            "states": null
          },
          "name": "Belgium"
        },
        {
          "code": "BLZ",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/e/e7/Flag_of_Belize.svg",
            "phone_code": "+501",
            "states": null
          },
          "name": "Belize"
        },
        {
          "code": "BEN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/0a/Flag_of_Benin.svg",
            "phone_code": "+229",
            "states": null
          },
          "name": "Benin"
        },
        {
          "code": "BMU",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/bf/Flag_of_Bermuda.svg",
            "phone_code": "+1441",
            "states": null
          },
          "name": "Bermuda"
        },
        {
          "code": "BTN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/91/Flag_of_Bhutan.svg",
            "phone_code": "+975",
            "states": null
          },
          "name": "Bhutan"
        },
        {
          "code": "BOL",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/de/Flag_of_Bolivia_%28state%29.svg",
            "phone_code": "+591",
            "states": null
          },
          "name": "Bolivia"
        },
        {
          "code": "BES",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/20/Flag_of_the_Netherlands.svg",
            "phone_code": "+599",
            "states": null
          },
          "name": "Bonaire, St Eustasuis and Saba"
        },
        {
          "code": "BIH",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/bf/Flag_of_Bosnia_and_Herzegovina.svg",
            "phone_code": "+387",
            "states": null
          },
          "name": "Bosnia and Herzegovina"
        },
        {
          "code": "BWA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/fa/Flag_of_Botswana.svg",
            "phone_code": "+267",
            "states": null
          },
          "name": "Botswana"
        },
        {
          "code": "BVT",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d9/Flag_of_Norway.svg",
            "phone_code": "+47",
            "states": null
          },
          "name": "Bouvet Island"
        },
        {
          "code": "BRA",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/en/0/05/Flag_of_Brazil.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+55",
            "states": {
              "BRAC": "Acre",
              "BRAL": "Alagoas",
              "BRAM": "Amazonas",
              "BRAP": "Amapá",
              "BRBA": "Bahia",
              "BRCE": "Ceará",
              "BRDF": "Federal District",
              "BRES": "Espírito Santo",
              "BRGO": "Goiás",
              "BRMA": "Maranhão",
              "BRMG": "Minas Gerais",
              "BRMS": "Mato Grosso do Sul",
              "BRMT": "Mato Grosso",
              "BRPA": "Pará",
              "BRPB": "Paraíba",
              "BRPE": "Pernambuco",
              "BRPI": "Piauí",
              "BRPR": "Paraná",
              "BRRJ": "Rio de Janeiro",
              "BRRN": "Rio Grande do Norte",
              "BRRO": "Rondônia",
              "BRRR": "Roraima",
              "BRRS": "Rio Grande do Sul",
              "BRSC": "Santa Catarina",
              "BRSE": "Sergipe",
              "BRSP": "São Paulo",
              "BRTO": "Tocantins"
            }
          },
          "name": "Brazil"
        },
        {
          "code": "IOT",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/6e/Flag_of_the_British_Indian_Ocean_Territory.svg",
            "phone_code": "+246",
            "states": null
          },
          "name": "British Indian Ocean Territory"
        },
        {
          "code": "VGB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/42/Flag_of_the_British_Virgin_Islands.svg",
            "phone_code": "+1284",
            "states": null
          },
          "name": "British Virgin Islands"
        },
        {
          "code": "BRN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/9c/Flag_of_Brunei.svg",
            "phone_code": "+673",
            "states": null
          },
          "name": "Brunei"
        },
        {
          "code": "BGR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/9a/Flag_of_Bulgaria.svg",
            "phone_code": "+359",
            "states": null
          },
          "name": "Bulgaria"
        },
        {
          "code": "BFA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/31/Flag_of_Burkina_Faso.svg",
            "phone_code": "+226",
            "states": null
          },
          "name": "Burkina Faso"
        },
        {
          "code": "BDI",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/50/Flag_of_Burundi.svg",
            "phone_code": "+257",
            "states": null
          },
          "name": "Burundi"
        },
        {
          "code": "KHM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/83/Flag_of_Cambodia.svg",
            "phone_code": "+855",
            "states": null
          },
          "name": "Cambodia"
        },
        {
          "code": "CMR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/4f/Flag_of_Cameroon.svg",
            "phone_code": "+237",
            "states": null
          },
          "name": "Cameroon"
        },
        {
          "code": "CAN",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d9/Flag_of_Canada_%28Pantone%29.svg",
            "gov_fiscal_year": "0401-0331",
            "phone_code": "+1",
            "states": {
              "CAAB": "Alberta",
              "CABC": "British Columbia",
              "CAMB": "Manitoba",
              "CANB": "New Brunswick",
              "CANL": "Newfoundland and Labrador",
              "CANS": "Nova Scotia",
              "CANT": "Northwest Territories",
              "CANU": "Nunavut",
              "CAON": "Ontario",
              "CAPE": "Prince Edward Island",
              "CAQC": "Quebec",
              "CASK": "Saskatchewan",
              "CAYT": "Yukon"
            }
          },
          "name": "Canada"
        },
        {
          "code": "CPV",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/38/Flag_of_Cape_Verde.svg",
            "phone_code": "+238",
            "states": null
          },
          "name": "Cape Verde"
        },
        {
          "code": "CYM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/0f/Flag_of_the_Cayman_Islands.svg",
            "phone_code": "+1345",
            "states": null
          },
          "name": "Cayman Islands"
        },
        {
          "code": "CAF",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/6f/Flag_of_the_Central_African_Republic.svg",
            "phone_code": "+236",
            "states": null
          },
          "name": "Central African Republic"
        },
        {
          "code": "TCD",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/4b/Flag_of_Chad.svg",
            "phone_code": "+235",
            "states": null
          },
          "name": "Chad"
        },
        {
          "code": "CHL",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/78/Flag_of_Chile.svg",
            "phone_code": "+56",
            "states": null
          },
          "name": "Chile"
        },
        {
          "code": "CHN",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/fa/Flag_of_the_People%27s_Republic_of_China.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+86",
            "states": {
              "CNAH": "Anhui",
              "CNBJ": "Beijing",
              "CNCQ": "Chongqing",
              "CNFJ": "Fujian",
              "CNGD": "Guangdong",
              "CNGS": "Gansu",
              "CNGX": "Guangxi",
              "CNGZ": "Guizhou",
              "CNHA": "Henan",
              "CNHB": "Hubei",
              "CNHE": "Hebei",
              "CNHI": "Hainan",
              "CNHK": "Hong Kong (Xianggang)",
              "CNHL": "Heilongjiang",
              "CNHN": "Hunan",
              "CNJL": "Jilin",
              "CNJS": "Jiangsu",
              "CNJX": "Jiangxi",
              "CNLN": "Liaoning",
              "CNMC": "Macao (Aomen)",
              "CNNM": "Nei Mongol (mn)",
              "CNNX": "Ningxia",
              "CNQH": "Qinghai",
              "CNSC": "Sichuan",
              "CNSD": "Shandong",
              "CNSH": "Shanghai",
              "CNSN": "Shaanxi",
              "CNSX": "Shanxi",
              "CNTJ": "Tianjin",
              "CNTW": "Taiwan",
              "CNXJ": "Xinjiang",
              "CNXZ": "Xizang",
              "CNYN": "Yunnan",
              "CNZJ": "Zhejiang"
            }
          },
          "name": "China"
        },
        {
          "code": "CXR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/67/Flag_of_Christmas_Island.svg",
            "phone_code": "+53",
            "states": null
          },
          "name": "Christmas Island"
        },
        {
          "code": "CCK",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/74/Flag_of_the_Cocos_%28Keeling%29_Islands.svg",
            "phone_code": "+61",
            "states": null
          },
          "name": "Cocos Islands"
        },
        {
          "code": "COL",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/21/Flag_of_Colombia.svg",
            "phone_code": "+57",
            "states": null
          },
          "name": "Colombia"
        },
        {
          "code": "COM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/94/Flag_of_the_Comoros.svg",
            "phone_code": "+269",
            "states": null
          },
          "name": "Comoros"
        },
        {
          "code": "COG",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/92/Flag_of_the_Republic_of_the_Congo.svg",
            "phone_code": "+242",
            "states": null
          },
          "name": "Congo-Brazzaville"
        },
        {
          "code": "COD",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/6f/Flag_of_the_Democratic_Republic_of_the_Congo.svg",
            "phone_code": "+243",
            "states": null
          },
          "name": "Congo-Kinshasa"
        },
        {
          "code": "COK",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/35/Flag_of_the_Cook_Islands.svg",
            "phone_code": "+682",
            "states": null
          },
          "name": "Cook Islands"
        },
        {
          "code": "CRI",
          "metadata": {
            "fiscal_year": "1001-0931",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/bc/Flag_of_Costa_Rica_%28state%29.svg",
            "gov_fiscal_year": "1001-0931",
            "phone_code": "+506",
            "states": null
          },
          "name": "Costa Rica"
        },
        {
          "code": "HRV",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/1/1b/Flag_of_Croatia.svg",
            "phone_code": "+385",
            "states": null
          },
          "name": "Croatia"
        },
        {
          "code": "CUB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/bd/Flag_of_Cuba.svg",
            "phone_code": "+53",
            "states": null
          },
          "name": "Cuba"
        },
        {
          "code": "CUW",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/b1/Flag_of_Cura%C3%A7ao.svg",
            "phone_code": "+599",
            "states": null
          },
          "name": "Curacao (Netherlands Antilles)"
        },
        {
          "code": "CYP",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d4/Flag_of_Cyprus.svg",
            "phone_code": "+357",
            "states": null
          },
          "name": "Cyprus"
        },
        {
          "code": "CZE",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/c/cb/Flag_of_the_Czech_Republic.svg",
            "phone_code": "+420",
            "states": null
          },
          "name": "Czech Republic"
        },
        {
          "code": "DNK",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/9c/Flag_of_Denmark.svg",
            "phone_code": "+45",
            "states": null
          },
          "name": "Denmark"
        },
        {
          "code": "DJI",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/34/Flag_of_Djibouti.svg",
            "phone_code": "+253",
            "states": null
          },
          "name": "Djibouti"
        },
        {
          "code": "DMA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/c/c4/Flag_of_Dominica.svg",
            "phone_code": "+1767",
            "states": null
          },
          "name": "Dominica"
        },
        {
          "code": "DOM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/9f/Flag_of_the_Dominican_Republic.svg",
            "phone_code": "+1829",
            "states": null
          },
          "name": "Dominican Republic"
        },
        {
          "code": "TLS",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/26/Flag_of_East_Timor.svg",
            "phone_code": "+670",
            "states": null
          },
          "name": "East Timor"
        },
        {
          "code": "ECU",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/e/e8/Flag_of_Ecuador.svg",
            "phone_code": "+593",
            "states": null
          },
          "name": "Ecuador"
        },
        {
          "code": "EGY",
          "metadata": {
            "fiscal_year": "0701-0630",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/fe/Flag_of_Egypt.svg",
            "gov_fiscal_year": "0701-0630",
            "phone_code": "+20",
            "states": null
          },
          "name": "Egypt"
        },
        {
          "code": "SLV",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/34/Flag_of_El_Salvador.svg",
            "phone_code": "+503",
            "states": null
          },
          "name": "El Salvador"
        },
        {
          "code": "GNQ",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/31/Flag_of_Equatorial_Guinea.svg",
            "phone_code": "+240",
            "states": null
          },
          "name": "Equatorial Guinea"
        },
        {
          "code": "ERI",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/29/Flag_of_Eritrea.svg",
            "phone_code": "+291",
            "states": null
          },
          "name": "Eritrea"
        },
        {
          "code": "EST",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/8f/Flag_of_Estonia.svg",
            "phone_code": "+372",
            "states": null
          },
          "name": "Estonia"
        },
        {
          "code": "ETH",
          "metadata": {
            "fiscal_year": "0708-0707",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/71/Flag_of_Ethiopia.svg",
            "gov_fiscal_year": "0708-0707",
            "phone_code": "+251",
            "states": null
          },
          "name": "Ethiopia"
        },
        {
          "code": "EU",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/b7/Flag_of_Europe.svg",
            "states": {
              "AUT": null,
              "BEL": null,
              "BGR": null,
              "CYP": null,
              "CZE": null,
              "DEU": null,
              "DNK": null,
              "ESP": null,
              "EST": null,
              "FIN": null,
              "FRA": null,
              "GBR": null,
              "GRC": null,
              "HRV": null,
              "HUN": null,
              "IRL": null,
              "ITA": null,
              "LTU": null,
              "LUX": null,
              "LVA": null,
              "MLT": null,
              "NLD": null,
              "POL": null,
              "PRT": null,
              "ROU": null,
              "SVK": null,
              "SVN": null,
              "SWE": null
            }
          },
          "name": "European Union"
        },
        {
          "code": "FLK",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/83/Flag_of_the_Falkland_Islands.svg",
            "phone_code": "+500",
            "states": null
          },
          "name": "Falkland Islands"
        },
        {
          "code": "FRO",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/3c/Flag_of_the_Faroe_Islands.svg",
            "phone_code": "+298",
            "states": null
          },
          "name": "Faroe Islands"
        },
        {
          "code": "FJI",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/ba/Flag_of_Fiji.svg",
            "phone_code": "+679",
            "states": null
          },
          "name": "Fiji"
        },
        {
          "code": "FIN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/bc/Flag_of_Finland.svg",
            "phone_code": "+358",
            "states": null
          },
          "name": "Finland"
        },
        {
          "code": "FRA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/c/c3/Flag_of_France.svg",
            "phone_code": "+33",
            "states": null
          },
          "name": "France"
        },
        {
          "code": "GUF",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/c/c3/Flag_of_France.svg",
            "phone_code": "+594",
            "states": null
          },
          "name": "French Guiana"
        },
        {
          "code": "PYF",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/db/Flag_of_French_Polynesia.svg",
            "phone_code": "+689",
            "states": null
          },
          "name": "French Polynesia"
        },
        {
          "code": "ATF",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/a/a7/Flag_of_the_French_Southern_and_Antarctic_Lands.svg",
            "phone_code": "+262",
            "states": null
          },
          "name": "French Southern and Antarctic Lands"
        },
        {
          "code": "GAB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/04/Flag_of_Gabon.svg",
            "phone_code": "+241",
            "states": null
          },
          "name": "Gabon"
        },
        {
          "code": "GMB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/77/Flag_of_The_Gambia.svg",
            "phone_code": "+220",
            "states": null
          },
          "name": "The Gambia"
        },
        {
          "code": "GEO",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/0f/Flag_of_Georgia.svg",
            "phone_code": "+995",
            "states": null
          },
          "name": "Georgia"
        },
        {
          "code": "DEU",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/en/b/ba/Flag_of_Germany.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+49",
            "states": null
          },
          "name": "Germany"
        },
        {
          "code": "GHA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/1/19/Flag_of_Ghana.svg",
            "phone_code": "+233",
            "states": null
          },
          "name": "Ghana"
        },
        {
          "code": "GIB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/02/Flag_of_Gibraltar.svg",
            "phone_code": "+350",
            "states": null
          },
          "name": "Gibraltar"
        },
        {
          "code": "GRC",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/5c/Flag_of_Greece.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+30",
            "states": null
          },
          "name": "Greece"
        },
        {
          "code": "GRL",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/09/Flag_of_Greenland.svg",
            "phone_code": "+299",
            "states": null
          },
          "name": "Greenland"
        },
        {
          "code": "GRD",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/bc/Flag_of_Grenada.svg",
            "phone_code": "+1473",
            "states": null
          },
          "name": "Grenada"
        },
        {
          "code": "GLP",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/c/c3/Flag_of_France.svg",
            "phone_code": "+590",
            "states": null
          },
          "name": "Guadeloupe"
        },
        {
          "code": "GUM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/07/Flag_of_Guam.svg",
            "phone_code": "+1671",
            "states": null
          },
          "name": "Guam"
        },
        {
          "code": "GTM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/e/ec/Flag_of_Guatemala.svg",
            "phone_code": "+502",
            "states": null
          },
          "name": "Guatemala"
        },
        {
          "code": "GGY",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/fa/Flag_of_Guernsey.svg",
            "phone_code": "+44",
            "states": null
          },
          "name": "Guernsey"
        },
        {
          "code": "GIN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/e/ed/Flag_of_Guinea.svg",
            "phone_code": "+224",
            "states": null
          },
          "name": "Guinea"
        },
        {
          "code": "GNB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_Guinea-Bissau.svg",
            "phone_code": "+245",
            "states": null
          },
          "name": "Guinea-Bissau"
        },
        {
          "code": "GUY",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/99/Flag_of_Guyana.svg",
            "phone_code": "+592",
            "states": null
          },
          "name": "Guyana"
        },
        {
          "code": "HTI",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/56/Flag_of_Haiti.svg",
            "phone_code": "+509",
            "states": null
          },
          "name": "Haiti"
        },
        {
          "code": "HMD",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/88/Flag_of_Australia_%28converted%29.svg",
            "phone_code": "+672",
            "states": null
          },
          "name": "Heard Island and McDonald Islands"
        },
        {
          "code": "HND",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/82/Flag_of_Honduras.svg",
            "phone_code": "+504",
            "states": null
          },
          "name": "Honduras"
        },
        {
          "code": "HKG",
          "metadata": {
            "fiscal_year": "0401-0331",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/5b/Flag_of_Hong_Kong.svg",
            "gov_fiscal_year": "0401-0331",
            "phone_code": "+852",
            "states": null
          },
          "name": "Hong Kong"
        },
        {
          "code": "HUN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/c/c1/Flag_of_Hungary.svg",
            "phone_code": "+36",
            "states": null
          },
          "name": "Hungary"
        },
        {
          "code": "ISL",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/c/ce/Flag_of_Iceland.svg",
            "phone_code": "+354",
            "states": null
          },
          "name": "Iceland"
        },
        {
          "code": "IND",
          "metadata": {
            "fiscal_year": "0401-0331",
            "flag": "https://upload.wikimedia.org/wikipedia/en/4/41/Flag_of_India.svg",
            "gov_fiscal_year": "0401-0331",
            "phone_code": "+91",
            "states": {
              "INAN": "Andaman and Nicobar Islands",
              "INAP": "Andhra Pradesh",
              "INAR": "Arunachal Pradesh",
              "INAS": "Assam",
              "INBR": "Bihar",
              "INCH": "Chandigarh",
              "INCT": "Chhattisgarh",
              "INDD": "Daman and Diu",
              "INDL": "Delhi",
              "INDN": "Dadra and Nagar Haveli",
              "INGA": "Goa",
              "INGJ": "Gujarat",
              "INHP": "Himachal Pradesh",
              "INHR": "Haryana",
              "INJH": "Jharkhand",
              "INJK": "Jammu and Kashmir",
              "INKA": "Karnataka",
              "INKL": "Kerala",
              "INLD": "Lakshadweep",
              "INMH": "Maharashtra",
              "INML": "Meghalaya",
              "INMN": "Manipur",
              "INMP": "Madhya Pradesh",
              "INMZ": "Mizoram",
              "INNL": "Nagaland",
              "INOR": "Odisha (formerly known as Orissa)",
              "INPB": "Punjab",
              "INPY": "Puducherry (Pondicherry)",
              "INRJ": "Rajasthan",
              "INSK": "Sikkim",
              "INTG": "Telangana",
              "INTN": "Tamil Nadu",
              "INTR": "Tripura",
              "INUP": "Uttar Pradesh",
              "INUT": "Uttarakhand",
              "INWB": "West Bengal"
            }
          },
          "name": "India"
        },
        {
          "code": "IDN",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/9f/Flag_of_Indonesia.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+62",
            "states": null
          },
          "name": "Indonesia"
        },
        {
          "code": "IRN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/c/ca/Flag_of_Iran.svg",
            "phone_code": "+98",
            "states": null
          },
          "name": "Iran"
        },
        {
          "code": "IRQ",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/f6/Flag_of_Iraq.svg",
            "phone_code": "+964",
            "states": null
          },
          "name": "Iraq"
        },
        {
          "code": "IRL",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/45/Flag_of_Ireland.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+353",
            "states": null
          },
          "name": "Ireland"
        },
        {
          "code": "IMN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/5d/Flag_of_the_Isle_of_Mann.svg",
            "phone_code": "+44",
            "states": null
          },
          "name": "Isle of Man"
        },
        {
          "code": "ISR",
          "fiscal_year": "0101-1231",
          "gov_fiscal_year": "0101-1231",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d4/Flag_of_Israel.svg",
            "states": null
          },
          "name": "Israel",
          "phone_code": "+972"
        },
        {
          "code": "ITA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/0/03/Flag_of_Italy.svg",
            "phone_code": "+39",
            "states": null
          },
          "name": "Italy"
        },
        {
          "code": "CIV",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/fe/Flag_of_C%C3%B4te_d%27Ivoire.svg",
            "phone_code": "+225",
            "states": null
          },
          "name": "Cote D'Ivoire (Former Ivory Coast)"
        },
        {
          "code": "JAM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/0a/Flag_of_Jamaica.svg",
            "phone_code": "+1876",
            "states": null
          },
          "name": "Jamaica"
        },
        {
          "code": "JPN",
          "fiscal_year": "0101-1231",
          "gov_fiscal_year": "0401-0331",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/9/9e/Flag_of_Japan.svg",
            "states": null
          },
          "name": "Japan",
          "phone_code": "+81"
        },
        {
          "code": "JEY",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/1/1c/Flag_of_Jersey.svg",
            "phone_code": "+44",
            "states": null
          },
          "name": "Jersey"
        },
        {
          "code": "JOR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/c/c0/Flag_of_Jordan.svg",
            "phone_code": "+962",
            "states": null
          },
          "name": "Jordan"
        },
        {
          "code": "KAZ",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d3/Flag_of_Kazakhstan.svg",
            "phone_code": "+7",
            "states": null
          },
          "name": "Kazakhstan"
        },
        {
          "code": "KEN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/49/Flag_of_Kenya.svg",
            "phone_code": "+254",
            "states": null
          },
          "name": "Kenya"
        },
        {
          "code": "KIR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d3/Flag_of_Kiribati.svg",
            "phone_code": "+686",
            "states": null
          },
          "name": "Kiribati"
        },
        {
          "code": "KWT",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/a/aa/Flag_of_Kuwait.svg",
            "phone_code": "+965",
            "states": null
          },
          "name": "Kuwait"
        },
        {
          "code": "KGZ",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/c/c7/Flag_of_Kyrgyzstan.svg",
            "phone_code": "+996",
            "states": null
          },
          "name": "Kyrgyzstan"
        },
        {
          "code": "LAO",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/56/Flag_of_Laos.svg",
            "phone_code": "+856",
            "states": null
          },
          "name": "Laos"
        },
        {
          "code": "LVA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/84/Flag_of_Latvia.svg",
            "phone_code": "+371",
            "states": null
          },
          "name": "Latvia"
        },
        {
          "code": "LBN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/59/Flag_of_Lebanon.svg",
            "phone_code": "+961",
            "states": null
          },
          "name": "Lebanon"
        },
        {
          "code": "LSO",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/4a/Flag_of_Lesotho.svg",
            "phone_code": "+266",
            "states": null
          },
          "name": "Lesotho"
        },
        {
          "code": "LBR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/b8/Flag_of_Liberia.svg",
            "phone_code": "+231",
            "states": null
          },
          "name": "Liberia"
        },
        {
          "code": "LBY",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/05/Flag_of_Libya.svg",
            "phone_code": "+218",
            "states": null
          },
          "name": "Libya"
        },
        {
          "code": "LIE",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/47/Flag_of_Liechtenstein.svg",
            "phone_code": "+423",
            "states": null
          },
          "name": "Liechtenstein"
        },
        {
          "code": "LTU",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/1/11/Flag_of_Lithuania.svg",
            "phone_code": "+370",
            "states": null
          },
          "name": "Lithuania"
        },
        {
          "code": "LUX",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/da/Flag_of_Luxembourg.svg",
            "phone_code": "+352",
            "states": null
          },
          "name": "Luxembourg"
        },
        {
          "code": "MAC",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/63/Flag_of_Macau.svg",
            "phone_code": "+853",
            "states": null
          },
          "name": "Macau"
        },
        {
          "code": "MKD",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/f8/Flag_of_Macedonia.svg",
            "phone_code": "+389",
            "states": null
          },
          "name": "Macedonia"
        },
        {
          "code": "MDG",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/bc/Flag_of_Madagascar.svg",
            "phone_code": "+261",
            "states": null
          },
          "name": "Madagascar"
        },
        {
          "code": "MWI",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d1/Flag_of_Malawi.svg",
            "phone_code": "+265",
            "states": null
          },
          "name": "Malawi"
        },
        {
          "code": "MYS",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/66/Flag_of_Malaysia.svg",
            "phone_code": "+60",
            "states": null
          },
          "name": "Malaysia"
        },
        {
          "code": "MDV",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/0f/Flag_of_Maldives.svg",
            "phone_code": "+960",
            "states": null
          },
          "name": "Maldives"
        },
        {
          "code": "MLI",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/92/Flag_of_Mali.svg",
            "phone_code": "+223",
            "states": null
          },
          "name": "Mali"
        },
        {
          "code": "MLT",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/73/Flag_of_Malta.svg",
            "phone_code": "+356",
            "states": null
          },
          "name": "Malta"
        },
        {
          "code": "MHL",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/2e/Flag_of_the_Marshall_Islands.svg",
            "phone_code": "+692",
            "states": null
          },
          "name": "Marshall Islands"
        },
        {
          "code": "MTQ",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/c/c3/Flag_of_France.svg",
            "phone_code": "+596",
            "states": null
          },
          "name": "Martinique"
        },
        {
          "code": "MRT",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/30/New_National_Flag_of_Mauritania.png",
            "phone_code": "+222",
            "states": null
          },
          "name": "Mauritania"
        },
        {
          "code": "MUS",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/77/Flag_of_Mauritius.svg",
            "phone_code": "+230",
            "states": null
          },
          "name": "Mauritius"
        },
        {
          "code": "MYT",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/4a/Flag_of_Mayotte_%28local%29.svg",
            "phone_code": "+269",
            "states": null
          },
          "name": "Mayotte"
        },
        {
          "code": "MEX",
          "metadata": {
            "MXAGU": "Aguascalientes",
            "MXBCN": "Baja California",
            "MXBCS": "Baja California Sur",
            "MXCAM": "Campeche",
            "MXCHH": "Chihuahua",
            "MXCHP": "Chiapas",
            "MXCOA": "Coahuila",
            "MXCOL": "Colima",
            "MXDIF": "Distrito Federal",
            "MXDUR": "Durango",
            "MXGRO": "Guerrero",
            "MXGUA": "Guanajuato",
            "MXHID": "Hidalgo",
            "MXJAL": "Jalisco",
            "MXMEX": "Mexico (Federal District)",
            "MXMIC": "Michoacán",
            "MXMOR": "Morelos",
            "MXNAY": "Nayarit",
            "MXNLE": "Nuevo León",
            "MXOAX": "Oaxaca",
            "MXPUE": "Puebla",
            "MXQUE": "Querétaro",
            "MXROO": "Quintana Roo",
            "MXSIN": "Sinaloa",
            "MXSLP": "San Luis Potosí",
            "MXSON": "Sonora",
            "MXTAB": "Tabasco",
            "MXTAM": "Tamaulipas",
            "MXTLA": "Tlaxcala",
            "MXVER": "Veracruz",
            "MXYUC": "Yucatán",
            "MXZAC": "Zacatecas",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/fc/Flag_of_Mexico.svg",
            "phone_code": "+52",
            "states": null
          },
          "name": "Mexico"
        },
        {
          "code": "FSM",
          "metadata": {
            "flag": null,
            "phone_code": "+691",
            "states": null
          },
          "name": "Micronesia"
        },
        {
          "code": "MDA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/27/Flag_of_Moldova.svg",
            "phone_code": "+373",
            "states": null
          },
          "name": "Moldova"
        },
        {
          "code": "MCO",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/e/ea/Flag_of_Monaco.svg",
            "phone_code": "+377",
            "states": null
          },
          "name": "Monaco"
        },
        {
          "code": "MNG",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/4c/Flag_of_Mongolia.svg",
            "phone_code": "+976",
            "states": null
          },
          "name": "Mongolia"
        },
        {
          "code": "MNE",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/64/Flag_of_Montenegro.svg",
            "phone_code": "+382",
            "states": null
          },
          "name": "Montenegro"
        },
        {
          "code": "MSR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d0/Flag_of_Montserrat.svg",
            "phone_code": "+1664",
            "states": null
          },
          "name": "Montserrat"
        },
        {
          "code": "MAR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/2c/Flag_of_Morocco.svg",
            "phone_code": "+212",
            "states": null
          },
          "name": "Morocco"
        },
        {
          "code": "MOZ",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d0/Flag_of_Mozambique.svg",
            "phone_code": "+258",
            "states": null
          },
          "name": "Mozambique"
        },
        {
          "code": "MMR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/8c/Flag_of_Myanmar.svg",
            "phone_code": "+95",
            "states": null
          },
          "name": "Myanmar"
        },
        {
          "code": "NAM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/00/Flag_of_Namibia.svg",
            "phone_code": "+264",
            "states": null
          },
          "name": "Namibia"
        },
        {
          "code": "NRU",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/30/Flag_of_Nauru.svg",
            "phone_code": "+674",
            "states": null
          },
          "name": "Nauru"
        },
        {
          "code": "NPL",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/9b/Flag_of_Nepal.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+977",
            "states": null
          },
          "name": "Nepal"
        },
        {
          "code": "NLD",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/20/Flag_of_the_Netherlands.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+31",
            "states": null
          },
          "name": "Netherlands"
        },
        {
          "code": "NCL",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/c/c3/Flag_of_France.svg",
            "phone_code": "+687",
            "states": null
          },
          "name": "New Caledonia"
        },
        {
          "code": "NZL",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/3e/Flag_of_New_Zealand.svg",
            "phone_code": "+64",
            "states": null
          },
          "name": "New Zealand"
        },
        {
          "code": "NIC",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/1/19/Flag_of_Nicaragua.svg",
            "phone_code": "+505",
            "states": null
          },
          "name": "Nicaragua"
        },
        {
          "code": "NER",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/f4/Flag_of_Niger.svg",
            "phone_code": "+227",
            "states": null
          },
          "name": "Niger"
        },
        {
          "code": "NGA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/79/Flag_of_Nigeria.svg",
            "phone_code": "+234",
            "states": null
          },
          "name": "Nigeria"
        },
        {
          "code": "NIU",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_Niue.svg",
            "phone_code": "+683",
            "states": null
          },
          "name": "Niue"
        },
        {
          "code": "NFK",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/48/Flag_of_Norfolk_Island.svg",
            "phone_code": "+672",
            "states": null
          },
          "name": "Norfolk and Philip Island"
        },
        {
          "code": "PRK",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/51/Flag_of_North_Korea.svg",
            "phone_code": "+850",
            "states": null
          },
          "name": "North Korea"
        },
        {
          "code": "MNP",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/e/e0/Flag_of_the_Northern_Mariana_Islands.svg",
            "phone_code": "+1670",
            "states": null
          },
          "name": "Northern Mariana Islands"
        },
        {
          "code": "NOR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d9/Flag_of_Norway.svg",
            "phone_code": "+47",
            "states": null
          },
          "name": "Norway"
        },
        {
          "code": "OMN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/dd/Flag_of_Oman.svg",
            "phone_code": "+968",
            "states": null
          },
          "name": "Oman"
        },
        {
          "code": "PAK",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/32/Flag_of_Pakistan.svg",
            "phone_code": "+92",
            "states": null
          },
          "name": "Pakistan"
        },
        {
          "code": "PLW",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/48/Flag_of_Palau.svg",
            "phone_code": "+680",
            "states": null
          },
          "name": "Palau"
        },
        {
          "code": "PSE",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/00/Flag_of_Palestine.svg",
            "phone_code": "+970",
            "states": null
          },
          "name": "Palestinian Territory"
        },
        {
          "code": "PAN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/a/ab/Flag_of_Panama.svg",
            "phone_code": "+507",
            "states": null
          },
          "name": "Panama"
        },
        {
          "code": "PNG",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/e/e3/Flag_of_Papua_New_Guinea.svg",
            "phone_code": "+675",
            "states": null
          },
          "name": "Papua New Guinea"
        },
        {
          "code": "PRY",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/27/Flag_of_Paraguay.svg",
            "phone_code": "+595",
            "states": null
          },
          "name": "Paraguay"
        },
        {
          "code": "PER",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/df/Flag_of_Peru_%28state%29.svg",
            "phone_code": "+51",
            "states": null
          },
          "name": "Peru"
        },
        {
          "code": "PHL",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/99/Flag_of_the_Philippines.svg",
            "phone_code": "+63",
            "states": null
          },
          "name": "Philippines"
        },
        {
          "code": "PCN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/88/Flag_of_the_Pitcairn_Islands.svg",
            "phone_code": "+64",
            "states": null
          },
          "name": "Pitcairn Islands"
        },
        {
          "code": "POL",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/1/12/Flag_of_Poland.svg",
            "phone_code": "+48",
            "states": null
          },
          "name": "Poland"
        },
        {
          "code": "PRT",
          "fiscal_year": "0101-1231",
          "gov_fiscal_year": "0101-1231",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/5c/Flag_of_Portugal.svg",
            "states": null
          },
          "name": "Portugal",
          "phone_code": "+351"
        },
        {
          "code": "PRI",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/28/Flag_of_Puerto_Rico.svg",
            "phone_code": "+1787",
            "states": null
          },
          "name": "Puerto Rico"
        },
        {
          "code": "QAT",
          "fiscal_year": "0101-1231",
          "gov_fiscal_year": "0101-1231",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/65/Flag_of_Qatar.svg",
            "states": null
          },
          "name": "Qatar",
          "phone_code": "+974"
        },
        {
          "code": "REU",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/5a/Flag_of_R%C3%A9union.svg",
            "phone_code": "+262",
            "states": null
          },
          "name": "Réunion"
        },
        {
          "code": "ROU",
          "fiscal_year": "0101-1231",
          "gov_fiscal_year": "0101-1231",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/73/Flag_of_Romania.svg",
            "states": null
          },
          "name": "Romania",
          "phone_code": "+40"
        },
        {
          "code": "RUS",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/en/f/f3/Flag_of_Russia.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+7",
            "states": {
              "RUAD": "Adygeya, Respublika",
              "RUAL": "Altay, Respublika",
              "RUALT": "Altayskiy kray",
              "RUAMU": "Amurskaya oblast\"",
              "RUARK": "Arkhangel\"skaya oblast\"",
              "RUAST": "Astrakhanskaya oblast\"",
              "RUBA": "Bashkortostan, Respublika",
              "RUBEL": "Belgorodskaya oblast\"",
              "RUBRY": "Bryanskaya oblast\"",
              "RUBU": "Buryatiya, Respublika",
              "RUCE": "Chechenskaya Respublika",
              "RUCHE": "Chelyabinskaya oblast\"",
              "RUCHU": "Chukotskiy avtonomnyy okrug",
              "RUCU": "Chuvashskaya Respublika",
              "RUDA": "Dagestan, Respublika",
              "RUIN": "Ingushetiya, Respublika",
              "RUIRK": "Irkutskaya oblast\"",
              "RUIVA": "Ivanovskaya oblast\"",
              "RUKAM": "Kamchatskiy kray",
              "RUKB": "Kabardino-Balkarskaya Respublika",
              "RUKC": "Karachayevo-Cherkesskaya Respubl.",
              "RUKDA": "Krasnodarskiy kray",
              "RUKEM": "Kemerovskaya oblast\"",
              "RUKGD": "Kaliningradskaya oblast\"",
              "RUKGN": "Kurganskaya oblast\"",
              "RUKHA": "Khabarovskiy kray",
              "RUKHM": "Khanty-Mansiyskiy avtonomnyy okrug-Yugra",
              "RUKIR": "Kirovskaya oblast\"",
              "RUKK": "Khakasiya, Respublika",
              "RUKL": "Kalmykiya, Respublika",
              "RUKLU": "Kaluzhskaya oblast\"",
              "RUKO": "Komi, Respublika",
              "RUKOS": "Kostromskaya oblast\"",
              "RUKR": "Kareliya, Respublika",
              "RUKRS": "Kurskaya oblast\"",
              "RUKYA": "Krasnoyarskiy kray",
              "RULEN": "Leningradskaya oblast\"",
              "RULIP": "Lipetskaya oblast\"",
              "RUMAG": "Magadanskaya oblast\"",
              "RUME": "Mariy El, Respublika",
              "RUMO": "Mordoviya, Respublika",
              "RUMOS": "Moskovskaya oblast\"",
              "RUMOW": "Moskva (autonomous city)",
              "RUMUR": "Murmanskaya oblast\"",
              "RUNEN": "Nenetskiy avtonomnyy okrug",
              "RUNGR": "Novgorodskaya oblast\"",
              "RUNIZ": "Nizhegorodskaya oblast\"",
              "RUNVS": "Novosibirskaya oblast\"",
              "RUOMS": "Omskaya oblast\"",
              "RUORE": "Orenburgskaya oblast\"",
              "RUORL": "Orlovskaya oblast\"",
              "RUPER": "Permskiy kray",
              "RUPNZ": "Penzenskaya oblast\"",
              "RUPRI": "Primorskiy kray",
              "RUPSK": "Pskovskaya oblast\"",
              "RUROS": "Rostovskaya oblast\"",
              "RURYA": "Ryazanskaya oblast\"",
              "RUSA": "Sakha, Respublika",
              "RUSAK": "Sakhalinskaya oblast\"",
              "RUSAM": "Samarskaya oblast\"",
              "RUSAR": "Saratovskaya oblast\"",
              "RUSE": "Severnaya Osetiya-Alaniya, Respubl.",
              "RUSMO": "Smolenskaya oblast\"",
              "RUSPE": "Sankt-Peterburg (autonomous city)",
              "RUSTA": "Stavropol\"skiy kray",
              "RUSVE": "Sverdlovskaya oblast\"",
              "RUTA": "Tatarstan, Respublika",
              "RUTAM": "Tambovskaya oblast\"",
              "RUTOM": "Tomskaya oblast\"",
              "RUTUL": "Tul\"skaya oblast\"",
              "RUTVE": "Tverskaya oblast\"",
              "RUTY": "Tyva, Respublika",
              "RUTYU": "Tyumenskaya oblast\"",
              "RUUD": "Udmurtskaya Respublika",
              "RUULY": "Ul\"yanovskaya oblast\"",
              "RUVGG": "Volgogradskaya oblast\"",
              "RUVLA": "Vladimirskaya oblast\"",
              "RUVLG": "Vologodskaya oblast\"",
              "RUVOR": "Voronezhskaya oblast\"",
              "RUYAN": "Yamalo-Nenetskiy avtonomnyy okrug",
              "RUYAR": "Yaroslavskaya oblast\"",
              "RUYEV": "Yevreyskaya avtonomnaya oblast\"",
              "RUZAB": "Zabaykal\"skiy kray"
            }
          },
          "name": "Russia"
        },
        {
          "code": "RWA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/1/17/Flag_of_Rwanda.svg",
            "phone_code": "+250",
            "states": null
          },
          "name": "Rwanda"
        },
        {
          "code": "SHN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/a/ae/Flag_of_the_United_Kingdom.svg",
            "phone_code": "+290",
            "states": null
          },
          "name": "Saint Helena, Ascension and Tristan da Cunha"
        },
        {
          "code": "KNA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/fe/Flag_of_Saint_Kitts_and_Nevis.svg",
            "phone_code": "+1869",
            "states": null
          },
          "name": "Saint Kitts and Nevis"
        },
        {
          "code": "LCA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/9f/Flag_of_Saint_Lucia.svg",
            "phone_code": "+1758",
            "states": null
          },
          "name": "Saint Lucia"
        },
        {
          "code": "SPM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/c/c3/Flag_of_France.svg",
            "phone_code": "+508",
            "states": null
          },
          "name": "Saint Pierre and Miquelon"
        },
        {
          "code": "VCT",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/6d/Flag_of_Saint_Vincent_and_the_Grenadines.svg",
            "phone_code": "+1784",
            "states": null
          },
          "name": "Saint Vincent and the Grenadines"
        },
        {
          "code": "BLM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/df/Flag_of_Saint_Barthelemy_%28local%29.svg",
            "phone_code": "+590",
            "states": null
          },
          "name": "Saint-Barthelemy"
        },
        {
          "code": "MAF",
          "metadata": {
            "flag": null,
            "phone_code": "+590",
            "states": null
          },
          "name": "Saint-Martin"
        },
        {
          "code": "WSM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/31/Flag_of_Samoa.svg",
            "phone_code": "+685",
            "states": null
          },
          "name": "Samoa"
        },
        {
          "code": "SMR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/b1/Flag_of_San_Marino.svg",
            "phone_code": "+378",
            "states": null
          },
          "name": "San Marino"
        },
        {
          "code": "STP",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/4f/Flag_of_Sao_Tome_and_Principe.svg",
            "phone_code": "+239",
            "states": null
          },
          "name": "São Tomé and Príncipe"
        },
        {
          "code": "SAU",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/0d/Flag_of_Saudi_Arabia.svg",
            "phone_code": "+966",
            "states": null
          },
          "name": "Saudi Arabia"
        },
        {
          "code": "SEN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/fd/Flag_of_Senegal.svg",
            "phone_code": "+221",
            "states": null
          },
          "name": "Senegal"
        },
        {
          "code": "SRB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/ff/Flag_of_Serbia.svg",
            "phone_code": "+381",
            "states": null
          },
          "name": "Serbia"
        },
        {
          "code": "SYC",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/fc/Flag_of_Seychelles.svg",
            "phone_code": "+248",
            "states": null
          },
          "name": "Seychelles"
        },
        {
          "code": "SLE",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/1/17/Flag_of_Sierra_Leone.svg",
            "phone_code": "+232",
            "states": null
          },
          "name": "Sierra Leone"
        },
        {
          "code": "SGP",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/48/Flag_of_Singapore.svg",
            "phone_code": "+65",
            "states": null
          },
          "name": "Singapore"
        },
        {
          "code": "SXM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d3/Flag_of_Sint_Maarten.svg",
            "phone_code": "+1721",
            "states": null
          },
          "name": "Sint Maarten"
        },
        {
          "code": "SVK",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/e/e6/Flag_of_Slovakia.svg",
            "phone_code": "+421",
            "states": null
          },
          "name": "Slovakia"
        },
        {
          "code": "SVN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/f0/Flag_of_Slovenia.svg",
            "phone_code": "+386",
            "states": null
          },
          "name": "Slovenia"
        },
        {
          "code": "SLB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/74/Flag_of_the_Solomon_Islands.svg",
            "phone_code": "+677",
            "states": null
          },
          "name": "Solomon Islands"
        },
        {
          "code": "SOM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/a/a0/Flag_of_Somalia.svg",
            "phone_code": "+252",
            "states": null
          },
          "name": "Somalia"
        },
        {
          "code": "ZAF",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/a/af/Flag_of_South_Africa.svg",
            "phone_code": "+27",
            "states": null
          },
          "name": "South Africa"
        },
        {
          "code": "SGS",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/e/ed/Flag_of_South_Georgia_and_the_South_Sandwich_Islands.svg",
            "phone_code": "+500",
            "states": null
          },
          "name": "South Georgia and the South Sandwich Islands"
        },
        {
          "code": "KOR",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/09/Flag_of_South_Korea.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+82",
            "states": null
          },
          "name": "South Korea"
        },
        {
          "code": "SSD",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/7a/Flag_of_South_Sudan.svg",
            "phone_code": "+211",
            "states": null
          },
          "name": "South Sudan"
        },
        {
          "code": "ESP",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/en/9/9a/Flag_of_Spain.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+34",
            "states": null
          },
          "name": "Spain"
        },
        {
          "code": "LKA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/1/11/Flag_of_Sri_Lanka.svg",
            "phone_code": "+94",
            "states": null
          },
          "name": "Sri Lanka"
        },
        {
          "code": "SDN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_Sudan.svg",
            "phone_code": "+249",
            "states": null
          },
          "name": "Sudan"
        },
        {
          "code": "SUR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/60/Flag_of_Suriname.svg",
            "phone_code": "+597",
            "states": null
          },
          "name": "Suriname"
        },
        {
          "code": "SJM",
          "metadata": {
            "flag": null,
            "phone_code": "+47",
            "states": null
          },
          "name": "Svalbard and Jan Mayen"
        },
        {
          "code": "SWZ",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/fb/Flag_of_Eswatini.svg",
            "phone_code": "+268",
            "states": null
          },
          "name": "Swaziland"
        },
        {
          "code": "SWE",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/en/4/4c/Flag_of_Sweden.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+46",
            "states": null
          },
          "name": "Sweden"
        },
        {
          "code": "CHE",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/08/Flag_of_Switzerland_%28Pantone%29.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+41",
            "states": null
          },
          "name": "Switzerland"
        },
        {
          "code": "SYR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/5/53/Flag_of_Syria.svg",
            "phone_code": "+963",
            "states": null
          },
          "name": "Syria"
        },
        {
          "code": "TWN",
          "metadata": {
            "fiscal_year": "0101-1231",
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/72/Flag_of_the_Republic_of_China.svg",
            "gov_fiscal_year": "0101-1231",
            "phone_code": "+886",
            "states": null
          },
          "name": "Taiwan"
        },
        {
          "code": "TJK",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/d/d0/Flag_of_Tajikistan.svg",
            "phone_code": "+992",
            "states": null
          },
          "name": "Tajikistan"
        },
        {
          "code": "TZA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/38/Flag_of_Tanzania.svg",
            "phone_code": "+255",
            "states": null
          },
          "name": "Tanzania"
        },
        {
          "code": "THA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/a/a9/Flag_of_Thailand.svg",
            "phone_code": "+66",
            "states": null
          },
          "name": "Thailand"
        },
        {
          "code": "TGO",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/68/Flag_of_Togo.svg",
            "phone_code": "+228",
            "states": null
          },
          "name": "Togo"
        },
        {
          "code": "TKL",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/8e/Flag_of_Tokelau.svg",
            "phone_code": "+690",
            "states": null
          },
          "name": "Tokelau"
        },
        {
          "code": "TON",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/9/9a/Flag_of_Tonga.svg",
            "phone_code": "+676",
            "states": null
          },
          "name": "Tonga"
        },
        {
          "code": "TTO",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/64/Flag_of_Trinidad_and_Tobago.svg",
            "phone_code": "+1868",
            "states": null
          },
          "name": "Trinidad and Tobago"
        },
        {
          "code": "TUN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/c/ce/Flag_of_Tunisia.svg",
            "phone_code": "+216",
            "states": null
          },
          "name": "Tunisia"
        },
        {
          "code": "TUR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/b/b4/Flag_of_Turkey.svg",
            "phone_code": "+90",
            "states": null
          },
          "name": "Turkey"
        },
        {
          "code": "TKM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/1/1b/Flag_of_Turkmenistan.svg",
            "phone_code": "+993",
            "states": null
          },
          "name": "Turkmenistan"
        },
        {
          "code": "TCA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/a/a0/Flag_of_the_Turks_and_Caicos_Islands.svg",
            "phone_code": "+1649",
            "states": null
          },
          "name": "Turks and Caicos Islands"
        },
        {
          "code": "TUV",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/3/38/Flag_of_Tuvalu.svg",
            "phone_code": "+688",
            "states": null
          },
          "name": "Tuvalu"
        },
        {
          "code": "UGA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/4e/Flag_of_Uganda.svg",
            "phone_code": "+256",
            "states": null
          },
          "name": "Uganda"
        },
        {
          "code": "UKR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/4/49/Flag_of_Ukraine.svg",
            "phone_code": "+380",
            "states": null
          },
          "name": "Ukraine"
        },
        {
          "code": "ARE",
          "fiscal_year": "0101-1231",
          "gov_fiscal_year": "0101-1231",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/c/cb/Flag_of_the_United_Arab_Emirates.svg",
            "states": null
          },
          "name": "United Arab Emirates",
          "phone_code": "+971"
        },
        {
          "code": "GBR",
          "metadata": {
            "fiscal_year": "0406-0405",
            "flag": "https://upload.wikimedia.org/wikipedia/en/a/ae/Flag_of_the_United_Kingdom.svg",
            "gov_fiscal_year": "0401-0331",
            "phone_code": "+44",
            "states": null
          },
          "name": "United Kingdom"
        },
        {
          "code": "UMI",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/a/a4/Flag_of_the_United_States.svg",
            "phone_code": "+246",
            "states": null
          },
          "name": "United States Minor Outlying Islands"
        },
        {
          "code": "URY",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/fe/Flag_of_Uruguay.svg",
            "phone_code": "+598",
            "states": null
          },
          "name": "Uruguay"
        },
        {
          "code": "VIR",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/f/f8/Flag_of_the_United_States_Virgin_Islands.svg",
            "phone_code": "+1340",
            "states": null
          },
          "name": "US Virgin Islands"
        },
        {
          "code": "USA",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/a/a4/Flag_of_the_United_States.svg",
            "phone_code": "+1",
            "states": {
              "USAK": "Alaska",
              "USAL": "Alabama",
              "USAR": "Arkansas",
              "USAS": "American Samoa",
              "USAZ": "Arizona",
              "USCA": "California",
              "USCO": "Colorado",
              "USCT": "Connecticut",
              "USDC": "Washington D.C.",
              "USDE": "Delaware",
              "USFL": "Florida",
              "USGA": "Georgia",
              "USGU": "Guam",
              "USHI": "Hawaii",
              "USIA": "Iowa",
              "USID": "Idaho",
              "USIL": "Illinois",
              "USIN": "Indiana",
              "USKS": "Kansas",
              "USKY": "Kentucky",
              "USLA": "Louisiana",
              "USMA": "Massachusetts",
              "USMD": "Maryland",
              "USME": "Maine",
              "USMI": "Michigan",
              "USMN": "Minnesota",
              "USMO": "Missouri",
              "USMP": "Northern Mariana Islands",
              "USMS": "Mississippi",
              "USMT": "Montana",
              "USNC": "North Carolina",
              "USND": "North Dakota",
              "USNE": "Nebraska",
              "USNH": "New Hampshire",
              "USNJ": "New Jersey",
              "USNM": "New Mexico",
              "USNV": "Nevada",
              "USNY": "New York",
              "USOH": "Ohio",
              "USOK": "Oklahoma",
              "USOR": "Oregon",
              "USPA": "Pennsylvania",
              "USPR": "Puerto Rico",
              "USRI": "Rhode Island",
              "USSC": "South Carolina",
              "USSD": "South Dakota",
              "USTN": "Tennessee",
              "USTX": "Texas",
              "USUM": "United States Minor Outlying Islands",
              "USUT": "Utah",
              "USVA": "Virginia",
              "USVI": "US Virgin Islands",
              "USVT": "Vermont",
              "USWA": "Washington",
              "USWI": "Wisconsin",
              "USWV": "West Virginia",
              "USWY": "Wyoming"
            }
          },
          "name": "USA"
        },
        {
          "code": "UZB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/84/Flag_of_Uzbekistan.svg",
            "phone_code": "+998",
            "states": null
          },
          "name": "Uzbekistan"
        },
        {
          "code": "VUT",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/6e/Flag_of_Vanuatu_%28official%29.svg",
            "phone_code": "+678",
            "states": null
          },
          "name": "Vanuatu"
        },
        {
          "code": "VAT",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/00/Flag_of_the_Vatican_City.svg",
            "phone_code": "+418",
            "states": null
          },
          "name": "Vatican City"
        },
        {
          "code": "VEN",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/7/7b/Flag_of_Venezuela_%28state%29.svg",
            "phone_code": "+58",
            "states": null
          },
          "name": "Venezuela"
        },
        {
          "code": "VNM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/2/21/Flag_of_Vietnam.svg",
            "phone_code": "+84",
            "states": null
          },
          "name": "Vietnam"
        },
        {
          "code": "WLF",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/en/c/c3/Flag_of_France.svg",
            "phone_code": "+681",
            "states": null
          },
          "name": "Wallis and Futuna"
        },
        {
          "code": "ESH",
          "metadata": {
            "flag": null,
            "phone_code": "+212",
            "states": null
          },
          "name": "Western Sahara"
        },
        {
          "code": "YEM",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/8/89/Flag_of_Yemen.svg",
            "phone_code": "+967",
            "states": null
          },
          "name": "Yemen"
        },
        {
          "code": "ZMB",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/0/06/Flag_of_Zambia.svg",
            "phone_code": "+260",
            "states": null
          },
          "name": "Zambia"
        },
        {
          "code": "ZWE",
          "metadata": {
            "flag": "https://upload.wikimedia.org/wikipedia/commons/6/6a/Flag_of_Zimbabwe.svg",
            "phone_code": "+263",
            "states": null
          },
          "name": "Zimbabwe"
        }
      ]
    },
    {
      "codeType": {
        "type": "uint"
      },
      "description": "Roles that entities play in relation to their interactions with other entities. These roles have widely-accepted tasks, rights and duties.\n",
      "name": "Roles",
      "values": [
        {
          "code": 1,
          "name": "Accountant"
        },
        {
          "code": 2,
          "name": "Advisor"
        },
        {
          "code": 3,
          "name": "Agent"
        },
        {
          "code": 4,
          "name": "Beneficiary"
        },
        {
          "code": 5,
          "name": "CEO"
        },
        {
          "code": 6,
          "name": "CFO"
        },
        {
          "code": 7,
          "name": "Chair"
        },
        {
          "code": 8,
          "name": "COO"
        },
        {
          "code": 9,
          "name": "CTO"
        },
        {
          "code": 10,
          "name": "Custodian"
        },
        {
          "code": 11,
          "name": "Director"
        },
        {
          "code": 12,
          "name": "Executive"
        },
        {
          "code": 13,
          "name": "Lawyer"
        },
        {
          "code": 14,
          "name": "Legal Guardian"
        },
        {
          "code": 15,
          "name": "Limited Partner"
        },
        {
          "code": 16,
          "name": "Manager"
        },
        {
          "code": 17,
          "name": "Managing Partner"
        },
        {
          "code": 18,
          "description": "Shareholder",
          "name": "Member"
        },
        {
          "code": 19,
          "name": "Partner"
        },
        {
          "code": 20,
          "name": "Principal"
        },
        {
          "code": 21,
          "name": "Proprietor"
        },
        {
          "code": 22,
          "name": "Protector"
        },
        {
          "code": 23,
          "name": "Secretary"
        },
        {
          "code": 24,
          "name": "Settlor"
        },
        {
          "code": 25,
          "description": "Major Shareholder",
          "name": "Significant Member"
        },
        {
          "code": 26,
          "name": "Smart Contract Operator"
        },
        {
          "code": 27,
          "name": "Trader"
        },
        {
          "code": 28,
          "name": "Trustee"
        },
        {
          "code": 29,
          "name": "Unit Holder"
        }
      ]
    },
    {
      "codeType": {
        "type": "uint"
      },
      "description": "Code/Text combinations returned in rejection messages when a request is not accepted.",
      "name": "Rejections",
      "values": [
        {
          "code": 0,
          "description": "No failure. This code should not be used in a reject message.",
          "label": "Success",
          "name": "Success"
        },
        {
          "code": 1,
          "description": "The OP_RETURN message is malformed. It doesn't pass data validation or something about it isn't according to protocol.",
          "label": "Message Malformed",
          "name": "MsgMalformed"
        },
        {
          "code": 2,
          "description": "The Bitcoin tx is malformed. Incorrect inputs/outputs or something similar.",
          "label": "Transaction Malformed",
          "name": "TxMalformed"
        },
        {
          "code": 3,
          "description": "A dependency, other contract/service, has failed to complete before the smart contract's timeout.",
          "label": "Time Out",
          "name": "Timeout"
        },
        {
          "code": 4,
          "description": "The contract has been moved to a different address. Please find the addres change message and send requests to new address.",
          "label": "Contract Moved",
          "name": "ContractMoved"
        },
        {
          "code": 5,
          "description": "A double spend attempt has been detected.",
          "label": "Double Spend",
          "name": "DoubleSpend"
        },
        {
          "code": 10,
          "description": "The contract already exists and can't be recreated.",
          "label": "Contract Already Exists",
          "name": "ContractExists"
        },
        {
          "code": 12,
          "description": "Sent when a CA tries to reduce the number of allowed assets below the number of assets that already exist for this contract.",
          "label": "Contract Asset Quantity Reduction",
          "name": "ContractAssetQtyReduction"
        },
        {
          "code": 13,
          "description": "Sent when the administration attempted to increase the quantity of assets in a contract beyond the maximum number allowed.",
          "label": "Contract Fixed Quantity",
          "name": "ContractFixedQuantity"
        },
        {
          "code": 14,
          "description": "The contract permissions prohibit the action requested.",
          "label": "Contract Permissions Prohibit",
          "name": "ContractPermissions"
        },
        {
          "code": 15,
          "description": "The contract is expired so can no longer accept requests.",
          "label": "Contract Expired",
          "name": "ContractExpired"
        },
        {
          "code": 16,
          "description": "The contract is frozen and the request is not permitted while frozen.",
          "label": "Contract Frozen",
          "name": "ContractFrozen"
        },
        {
          "code": 17,
          "description": "The revision in a contract amendment is incorrect.",
          "label": "Contract Revision Incorrect",
          "name": "ContractRevision"
        },
        {
          "code": 18,
          "description": "Action not permitted by contract.",
          "label": "Contract Not Permitted",
          "name": "ContractNotPermitted"
        },
        {
          "code": 19,
          "description": "Both operators signatures are required to perform this action.",
          "label": "Contract BothOperatorsRequired",
          "name": "ContractBothOperatorsRequired"
        },
        {
          "code": 20,
          "description": "The asset code specified already exists and can't be reused.",
          "label": "Asset Code Already Exists",
          "name": "AssetCodeExists"
        },
        {
          "code": 21,
          "description": "The asset code is not found.",
          "label": "Asset Not Found",
          "name": "AssetNotFound"
        },
        {
          "code": 22,
          "description": "The asset permissions prohibit the action requested.",
          "label": "Asset Permissions Prohibit",
          "name": "AssetPermissions"
        },
        {
          "code": 23,
          "description": "The asset is frozen and the request is not permitted while frozen.",
          "label": "Asset Frozen",
          "name": "AssetFrozen"
        },
        {
          "code": 24,
          "description": "The revision in an asset amendment is incorrect.",
          "label": "Asset Revision Incorrect",
          "name": "AssetRevision"
        },
        {
          "code": 25,
          "description": "Action not permitted by asset.",
          "label": "Asset Not Permitted",
          "name": "AssetNotPermitted"
        },
        {
          "code": 30,
          "description": "Transfers with the sender and receiver addresses the same are not permitted.",
          "label": "Transfer To Self Prohibited",
          "name": "TransferSelf"
        },
        {
          "code": 31,
          "description": "The transfer has expired.",
          "label": "Transfer Expired",
          "name": "TransferExpired"
        },
        {
          "code": 32,
          "description": "Holdings are frozen, so the request can't be completed.",
          "label": "Holdings Frozen",
          "name": "HoldingsFrozen"
        },
        {
          "code": 33,
          "description": "Holdings are locked by a multi-contract request, so the request can't be completed yet.",
          "label": "Holdings Locked",
          "name": "HoldingsLocked"
        },
        {
          "code": 40,
          "description": "Holders are not permitted to make proposals.",
          "label": "Holder Proposal Prohibited",
          "name": "HolderProposalProhibited"
        },
        {
          "code": 41,
          "description": "The proposal conflicts with an unapplied proposal.",
          "label": "Proposal Conflicts",
          "name": "ProposalConflicts"
        },
        {
          "code": 42,
          "description": "The vote ID referenced is not found.",
          "label": "Vote Not Found",
          "name": "VoteNotFound"
        },
        {
          "code": 43,
          "description": "The vote has closed and ballots are no longer permitted.",
          "label": "Vote Closed",
          "name": "VoteClosed"
        },
        {
          "code": 44,
          "description": "The ballot has already been counted for this address.",
          "label": "Ballot Already Counted",
          "name": "BallotAlreadyCounted"
        },
        {
          "code": 45,
          "description": "The voting system isn't permitted for this request.",
          "label": "Vote System Not Permitted",
          "name": "VoteSystemNotPermitted"
        },
        {
          "code": 60,
          "description": "Insufficient bitcoin quantities for response transaction fees.",
          "label": "Insufficient Transaction Fee Funding",
          "name": "InsufficientTxFeeFunding"
        },
        {
          "code": 61,
          "description": "Insufficient bitcoin quantity in inputs to fund request.",
          "label": "Insufficient Value",
          "name": "InsufficientValue"
        },
        {
          "code": 62,
          "description": "Insufficient token holdings to for request.",
          "label": "Insufficient Quantity",
          "name": "InsufficientQuantity"
        },
        {
          "code": 70,
          "description": "The requestor is not the administration and is required to be for this request.",
          "label": "Requestor Is Not Administration",
          "name": "NotAdministration"
        },
        {
          "code": 71,
          "description": "The requestor is not the operator and is required to be for this request.",
          "label": "Requestor Is Not Operator",
          "name": "NotOperator"
        },
        {
          "code": 72,
          "description": "The address specified is not permitted for this request.",
          "label": "Unauthorized Address",
          "name": "UnauthorizedAddress"
        },
        {
          "code": 80,
          "description": "The signature provided is not valid. This is for signatures included within OP_RETURN data. Not bitcoin transaction signature scripts.",
          "label": "Invalid Signature",
          "name": "InvalidSignature"
        }
      ]
    },
    {
      "codeType": {
        "type": "uint"
      },
      "description": "Predefined tags for output metadata. Multiple values can be assigned to an output to describe a tx output.\n",
      "metadata": {
        "type": "Tag"
      },
      "name": "Tags",
      "values": [
        {
          "code": 1,
          "name": "Housing"
        },
        {
          "code": 2,
          "name": "Utilities"
        },
        {
          "code": 3,
          "name": "Food"
        },
        {
          "code": 4,
          "name": "Medical"
        },
        {
          "code": 5,
          "name": "Financial Services"
        },
        {
          "code": 6,
          "name": "Entertainment"
        },
        {
          "code": 7,
          "name": "Sales"
        },
        {
          "code": 8,
          "name": "Automotive"
        },
        {
          "code": 9,
          "name": "Transportation"
        },
        {
          "code": 10,
          "name": "Fitness"
        },
        {
          "code": 20,
          "name": "Electricity"
        },
        {
          "code": 21,
          "name": "Water"
        },
        {
          "code": 22,
          "name": "Internet"
        },
        {
          "code": 23,
          "name": "Medicine"
        },
        {
          "code": 24,
          "name": "Service"
        },
        {
          "code": 25,
          "name": "Repair"
        },
        {
          "code": 26,
          "name": "Supplies"
        },
        {
          "code": 27,
          "name": "Parts"
        },
        {
          "code": 28,
          "name": "Labor"
        },
        {
          "code": 29,
          "name": "Tip"
        },
        {
          "code": 30,
          "name": "Media"
        },
        {
          "code": 40,
          "name": "Music"
        },
        {
          "code": 41,
          "name": "Video"
        },
        {
          "code": 42,
          "name": "Photo"
        },
        {
          "code": 43,
          "name": "Audio"
        },
        {
          "code": 100,
          "name": "Alcohol"
        },
        {
          "code": 101,
          "name": "Tobacco"
        },
        {
          "code": 120,
          "name": "Discounted"
        },
        {
          "code": 121,
          "name": "Promotional"
        }
      ]
    }
  ],
  "version": 1
}