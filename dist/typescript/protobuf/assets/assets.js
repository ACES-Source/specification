// source: assets.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.assets.AgeRestrictionField');
goog.provide('proto.assets.BondFixedRate');
goog.provide('proto.assets.CasinoChip');
goog.provide('proto.assets.Coupon');
goog.provide('proto.assets.Currency');
goog.provide('proto.assets.CurrencyValueField');
goog.provide('proto.assets.LoyaltyPoints');
goog.provide('proto.assets.Membership');
goog.provide('proto.assets.RateField');
goog.provide('proto.assets.ShareCommon');
goog.provide('proto.assets.TicketAdmission');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.Membership = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.Membership, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.Membership.displayName = 'proto.assets.Membership';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.Currency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.Currency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.Currency.displayName = 'proto.assets.Currency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.ShareCommon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.ShareCommon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.ShareCommon.displayName = 'proto.assets.ShareCommon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.BondFixedRate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.assets.BondFixedRate.repeatedFields_, null);
};
goog.inherits(proto.assets.BondFixedRate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.BondFixedRate.displayName = 'proto.assets.BondFixedRate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.Coupon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.Coupon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.Coupon.displayName = 'proto.assets.Coupon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.LoyaltyPoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.LoyaltyPoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.LoyaltyPoints.displayName = 'proto.assets.LoyaltyPoints';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.TicketAdmission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.TicketAdmission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.TicketAdmission.displayName = 'proto.assets.TicketAdmission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.CasinoChip = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.CasinoChip, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.CasinoChip.displayName = 'proto.assets.CasinoChip';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.AgeRestrictionField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.AgeRestrictionField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.AgeRestrictionField.displayName = 'proto.assets.AgeRestrictionField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.CurrencyValueField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.CurrencyValueField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.CurrencyValueField.displayName = 'proto.assets.CurrencyValueField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.RateField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.RateField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.assets.RateField.displayName = 'proto.assets.RateField';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.Membership.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.Membership.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.Membership} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Membership.toObject = function(includeInstance, msg) {
  var f, obj = {
    agerestriction: (f = msg.getAgerestriction()) && proto.assets.AgeRestrictionField.toObject(includeInstance, f),
    validfrom: jspb.Message.getFieldWithDefault(msg, 2, 0),
    expirationtimestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    id: jspb.Message.getFieldWithDefault(msg, 4, ""),
    membershipclass: jspb.Message.getFieldWithDefault(msg, 5, ""),
    roletype: jspb.Message.getFieldWithDefault(msg, 6, ""),
    membershiptype: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    transferspermitted: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.Membership}
 */
proto.assets.Membership.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.Membership;
  return proto.assets.Membership.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.Membership} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.Membership}
 */
proto.assets.Membership.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.assets.AgeRestrictionField;
      reader.readMessage(value,proto.assets.AgeRestrictionField.deserializeBinaryFromReader);
      msg.setAgerestriction(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValidfrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpirationtimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMembershipclass(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoletype(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMembershiptype(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferspermitted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.Membership.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.Membership.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.Membership} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Membership.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAgerestriction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.assets.AgeRestrictionField.serializeBinaryToWriter
    );
  }
  f = message.getValidfrom();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getExpirationtimestamp();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMembershipclass();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRoletype();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMembershiptype();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTransferspermitted();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional AgeRestrictionField AgeRestriction = 1;
 * @return {?proto.assets.AgeRestrictionField}
 */
proto.assets.Membership.prototype.getAgerestriction = function() {
  return /** @type{?proto.assets.AgeRestrictionField} */ (
    jspb.Message.getWrapperField(this, proto.assets.AgeRestrictionField, 1));
};


/**
 * @param {?proto.assets.AgeRestrictionField|undefined} value
 * @return {!proto.assets.Membership} returns this
*/
proto.assets.Membership.prototype.setAgerestriction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.Membership} returns this
 */
proto.assets.Membership.prototype.clearAgerestriction = function() {
  return this.setAgerestriction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.Membership.prototype.hasAgerestriction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 ValidFrom = 2;
 * @return {number}
 */
proto.assets.Membership.prototype.getValidfrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Membership} returns this
 */
proto.assets.Membership.prototype.setValidfrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 ExpirationTimestamp = 3;
 * @return {number}
 */
proto.assets.Membership.prototype.getExpirationtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Membership} returns this
 */
proto.assets.Membership.prototype.setExpirationtimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string ID = 4;
 * @return {string}
 */
proto.assets.Membership.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Membership} returns this
 */
proto.assets.Membership.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string MembershipClass = 5;
 * @return {string}
 */
proto.assets.Membership.prototype.getMembershipclass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Membership} returns this
 */
proto.assets.Membership.prototype.setMembershipclass = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string RoleType = 6;
 * @return {string}
 */
proto.assets.Membership.prototype.getRoletype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Membership} returns this
 */
proto.assets.Membership.prototype.setRoletype = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string MembershipType = 7;
 * @return {string}
 */
proto.assets.Membership.prototype.getMembershiptype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Membership} returns this
 */
proto.assets.Membership.prototype.setMembershiptype = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Description = 8;
 * @return {string}
 */
proto.assets.Membership.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Membership} returns this
 */
proto.assets.Membership.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool TransfersPermitted = 9;
 * @return {boolean}
 */
proto.assets.Membership.prototype.getTransferspermitted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.assets.Membership} returns this
 */
proto.assets.Membership.prototype.setTransferspermitted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.Currency.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.Currency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.Currency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Currency.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    monetaryauthority: jspb.Message.getFieldWithDefault(msg, 2, ""),
    precision: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.Currency}
 */
proto.assets.Currency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.Currency;
  return proto.assets.Currency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.Currency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.Currency}
 */
proto.assets.Currency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMonetaryauthority(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPrecision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.Currency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.Currency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.Currency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Currency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMonetaryauthority();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrecision();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string CurrencyCode = 1;
 * @return {string}
 */
proto.assets.Currency.prototype.getCurrencycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Currency} returns this
 */
proto.assets.Currency.prototype.setCurrencycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string MonetaryAuthority = 2;
 * @return {string}
 */
proto.assets.Currency.prototype.getMonetaryauthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Currency} returns this
 */
proto.assets.Currency.prototype.setMonetaryauthority = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 Precision = 4;
 * @return {number}
 */
proto.assets.Currency.prototype.getPrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Currency} returns this
 */
proto.assets.Currency.prototype.setPrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.ShareCommon.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.ShareCommon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.ShareCommon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.ShareCommon.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticker: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isin: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    transferspermitted: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.ShareCommon}
 */
proto.assets.ShareCommon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.ShareCommon;
  return proto.assets.ShareCommon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.ShareCommon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.ShareCommon}
 */
proto.assets.ShareCommon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsin(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferspermitted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.ShareCommon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.ShareCommon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.ShareCommon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.ShareCommon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsin();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTransferspermitted();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string Ticker = 1;
 * @return {string}
 */
proto.assets.ShareCommon.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.ShareCommon} returns this
 */
proto.assets.ShareCommon.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ISIN = 2;
 * @return {string}
 */
proto.assets.ShareCommon.prototype.getIsin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.ShareCommon} returns this
 */
proto.assets.ShareCommon.prototype.setIsin = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Description = 3;
 * @return {string}
 */
proto.assets.ShareCommon.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.ShareCommon} returns this
 */
proto.assets.ShareCommon.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool TransfersPermitted = 4;
 * @return {boolean}
 */
proto.assets.ShareCommon.prototype.getTransferspermitted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.assets.ShareCommon} returns this
 */
proto.assets.ShareCommon.prototype.setTransferspermitted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.assets.BondFixedRate.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.BondFixedRate.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.BondFixedRate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.BondFixedRate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.BondFixedRate.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bondtype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isin: jspb.Message.getFieldWithDefault(msg, 3, ""),
    collateral: jspb.Message.getFieldWithDefault(msg, 4, ""),
    parvalue: (f = msg.getParvalue()) && proto.assets.CurrencyValueField.toObject(includeInstance, f),
    interestrate: (f = msg.getInterestrate()) && proto.assets.RateField.toObject(includeInstance, f),
    interestpaymentinitialdate: jspb.Message.getFieldWithDefault(msg, 7, 0),
    interestpaymentdatedeltasList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    latepaymentpenaltyrate: (f = msg.getLatepaymentpenaltyrate()) && proto.assets.RateField.toObject(includeInstance, f),
    latepaymentwindow: jspb.Message.getFieldWithDefault(msg, 10, 0),
    latepaymentpenaltyperiod: jspb.Message.getFieldWithDefault(msg, 11, 0),
    maturitydate: jspb.Message.getFieldWithDefault(msg, 12, 0),
    agerestriction: (f = msg.getAgerestriction()) && proto.assets.AgeRestrictionField.toObject(includeInstance, f),
    transferspermitted: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.BondFixedRate}
 */
proto.assets.BondFixedRate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.BondFixedRate;
  return proto.assets.BondFixedRate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.BondFixedRate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.BondFixedRate}
 */
proto.assets.BondFixedRate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBondtype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsin(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollateral(value);
      break;
    case 5:
      var value = new proto.assets.CurrencyValueField;
      reader.readMessage(value,proto.assets.CurrencyValueField.deserializeBinaryFromReader);
      msg.setParvalue(value);
      break;
    case 6:
      var value = new proto.assets.RateField;
      reader.readMessage(value,proto.assets.RateField.deserializeBinaryFromReader);
      msg.setInterestrate(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInterestpaymentinitialdate(value);
      break;
    case 8:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setInterestpaymentdatedeltasList(value);
      break;
    case 9:
      var value = new proto.assets.RateField;
      reader.readMessage(value,proto.assets.RateField.deserializeBinaryFromReader);
      msg.setLatepaymentpenaltyrate(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLatepaymentwindow(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLatepaymentpenaltyperiod(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaturitydate(value);
      break;
    case 13:
      var value = new proto.assets.AgeRestrictionField;
      reader.readMessage(value,proto.assets.AgeRestrictionField.deserializeBinaryFromReader);
      msg.setAgerestriction(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferspermitted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.BondFixedRate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.BondFixedRate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.BondFixedRate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.BondFixedRate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBondtype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsin();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCollateral();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getParvalue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.assets.CurrencyValueField.serializeBinaryToWriter
    );
  }
  f = message.getInterestrate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.assets.RateField.serializeBinaryToWriter
    );
  }
  f = message.getInterestpaymentinitialdate();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getInterestpaymentdatedeltasList();
  if (f.length > 0) {
    writer.writePackedUint64(
      8,
      f
    );
  }
  f = message.getLatepaymentpenaltyrate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.assets.RateField.serializeBinaryToWriter
    );
  }
  f = message.getLatepaymentwindow();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getLatepaymentpenaltyperiod();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getMaturitydate();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getAgerestriction();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.assets.AgeRestrictionField.serializeBinaryToWriter
    );
  }
  f = message.getTransferspermitted();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional string Name = 1;
 * @return {string}
 */
proto.assets.BondFixedRate.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BondType = 2;
 * @return {string}
 */
proto.assets.BondFixedRate.prototype.getBondtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.setBondtype = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ISIN = 3;
 * @return {string}
 */
proto.assets.BondFixedRate.prototype.getIsin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.setIsin = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Collateral = 4;
 * @return {string}
 */
proto.assets.BondFixedRate.prototype.getCollateral = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.setCollateral = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional CurrencyValueField ParValue = 5;
 * @return {?proto.assets.CurrencyValueField}
 */
proto.assets.BondFixedRate.prototype.getParvalue = function() {
  return /** @type{?proto.assets.CurrencyValueField} */ (
    jspb.Message.getWrapperField(this, proto.assets.CurrencyValueField, 5));
};


/**
 * @param {?proto.assets.CurrencyValueField|undefined} value
 * @return {!proto.assets.BondFixedRate} returns this
*/
proto.assets.BondFixedRate.prototype.setParvalue = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.clearParvalue = function() {
  return this.setParvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.BondFixedRate.prototype.hasParvalue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RateField InterestRate = 6;
 * @return {?proto.assets.RateField}
 */
proto.assets.BondFixedRate.prototype.getInterestrate = function() {
  return /** @type{?proto.assets.RateField} */ (
    jspb.Message.getWrapperField(this, proto.assets.RateField, 6));
};


/**
 * @param {?proto.assets.RateField|undefined} value
 * @return {!proto.assets.BondFixedRate} returns this
*/
proto.assets.BondFixedRate.prototype.setInterestrate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.clearInterestrate = function() {
  return this.setInterestrate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.BondFixedRate.prototype.hasInterestrate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 InterestPaymentInitialDate = 7;
 * @return {number}
 */
proto.assets.BondFixedRate.prototype.getInterestpaymentinitialdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.setInterestpaymentinitialdate = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated uint64 InterestPaymentDateDeltas = 8;
 * @return {!Array<number>}
 */
proto.assets.BondFixedRate.prototype.getInterestpaymentdatedeltasList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.setInterestpaymentdatedeltasList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.addInterestpaymentdatedeltas = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.clearInterestpaymentdatedeltasList = function() {
  return this.setInterestpaymentdatedeltasList([]);
};


/**
 * optional RateField LatePaymentPenaltyRate = 9;
 * @return {?proto.assets.RateField}
 */
proto.assets.BondFixedRate.prototype.getLatepaymentpenaltyrate = function() {
  return /** @type{?proto.assets.RateField} */ (
    jspb.Message.getWrapperField(this, proto.assets.RateField, 9));
};


/**
 * @param {?proto.assets.RateField|undefined} value
 * @return {!proto.assets.BondFixedRate} returns this
*/
proto.assets.BondFixedRate.prototype.setLatepaymentpenaltyrate = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.clearLatepaymentpenaltyrate = function() {
  return this.setLatepaymentpenaltyrate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.BondFixedRate.prototype.hasLatepaymentpenaltyrate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 LatePaymentWindow = 10;
 * @return {number}
 */
proto.assets.BondFixedRate.prototype.getLatepaymentwindow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.setLatepaymentwindow = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 LatePaymentPenaltyPeriod = 11;
 * @return {number}
 */
proto.assets.BondFixedRate.prototype.getLatepaymentpenaltyperiod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.setLatepaymentpenaltyperiod = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 MaturityDate = 12;
 * @return {number}
 */
proto.assets.BondFixedRate.prototype.getMaturitydate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.setMaturitydate = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional AgeRestrictionField AgeRestriction = 13;
 * @return {?proto.assets.AgeRestrictionField}
 */
proto.assets.BondFixedRate.prototype.getAgerestriction = function() {
  return /** @type{?proto.assets.AgeRestrictionField} */ (
    jspb.Message.getWrapperField(this, proto.assets.AgeRestrictionField, 13));
};


/**
 * @param {?proto.assets.AgeRestrictionField|undefined} value
 * @return {!proto.assets.BondFixedRate} returns this
*/
proto.assets.BondFixedRate.prototype.setAgerestriction = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.clearAgerestriction = function() {
  return this.setAgerestriction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.BondFixedRate.prototype.hasAgerestriction = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool TransfersPermitted = 14;
 * @return {boolean}
 */
proto.assets.BondFixedRate.prototype.getTransferspermitted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.assets.BondFixedRate} returns this
 */
proto.assets.BondFixedRate.prototype.setTransferspermitted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.Coupon.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.Coupon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.Coupon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Coupon.toObject = function(includeInstance, msg) {
  var f, obj = {
    redeemingentity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    issuedate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    expirydate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    transferspermitted: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    value: (f = msg.getValue()) && proto.assets.CurrencyValueField.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.Coupon}
 */
proto.assets.Coupon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.Coupon;
  return proto.assets.Coupon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.Coupon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.Coupon}
 */
proto.assets.Coupon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedeemingentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIssuedate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpirydate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferspermitted(value);
      break;
    case 9:
      var value = new proto.assets.CurrencyValueField;
      reader.readMessage(value,proto.assets.CurrencyValueField.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.Coupon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.Coupon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.Coupon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.Coupon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRedeemingentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIssuedate();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getExpirydate();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTransferspermitted();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.assets.CurrencyValueField.serializeBinaryToWriter
    );
  }
};


/**
 * optional string RedeemingEntity = 1;
 * @return {string}
 */
proto.assets.Coupon.prototype.getRedeemingentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Coupon} returns this
 */
proto.assets.Coupon.prototype.setRedeemingentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 IssueDate = 2;
 * @return {number}
 */
proto.assets.Coupon.prototype.getIssuedate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Coupon} returns this
 */
proto.assets.Coupon.prototype.setIssuedate = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 ExpiryDate = 3;
 * @return {number}
 */
proto.assets.Coupon.prototype.getExpirydate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.Coupon} returns this
 */
proto.assets.Coupon.prototype.setExpirydate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string Description = 6;
 * @return {string}
 */
proto.assets.Coupon.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.Coupon} returns this
 */
proto.assets.Coupon.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool TransfersPermitted = 8;
 * @return {boolean}
 */
proto.assets.Coupon.prototype.getTransferspermitted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.assets.Coupon} returns this
 */
proto.assets.Coupon.prototype.setTransferspermitted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional CurrencyValueField Value = 9;
 * @return {?proto.assets.CurrencyValueField}
 */
proto.assets.Coupon.prototype.getValue = function() {
  return /** @type{?proto.assets.CurrencyValueField} */ (
    jspb.Message.getWrapperField(this, proto.assets.CurrencyValueField, 9));
};


/**
 * @param {?proto.assets.CurrencyValueField|undefined} value
 * @return {!proto.assets.Coupon} returns this
*/
proto.assets.Coupon.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.Coupon} returns this
 */
proto.assets.Coupon.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.Coupon.prototype.hasValue = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.LoyaltyPoints.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.LoyaltyPoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.LoyaltyPoints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.LoyaltyPoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    agerestriction: (f = msg.getAgerestriction()) && proto.assets.AgeRestrictionField.toObject(includeInstance, f),
    offername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    expirationtimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    transferspermitted: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.LoyaltyPoints}
 */
proto.assets.LoyaltyPoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.LoyaltyPoints;
  return proto.assets.LoyaltyPoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.LoyaltyPoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.LoyaltyPoints}
 */
proto.assets.LoyaltyPoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.assets.AgeRestrictionField;
      reader.readMessage(value,proto.assets.AgeRestrictionField.deserializeBinaryFromReader);
      msg.setAgerestriction(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOffername(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpirationtimestamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferspermitted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.LoyaltyPoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.LoyaltyPoints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.LoyaltyPoints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.LoyaltyPoints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAgerestriction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.assets.AgeRestrictionField.serializeBinaryToWriter
    );
  }
  f = message.getOffername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExpirationtimestamp();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTransferspermitted();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional AgeRestrictionField AgeRestriction = 1;
 * @return {?proto.assets.AgeRestrictionField}
 */
proto.assets.LoyaltyPoints.prototype.getAgerestriction = function() {
  return /** @type{?proto.assets.AgeRestrictionField} */ (
    jspb.Message.getWrapperField(this, proto.assets.AgeRestrictionField, 1));
};


/**
 * @param {?proto.assets.AgeRestrictionField|undefined} value
 * @return {!proto.assets.LoyaltyPoints} returns this
*/
proto.assets.LoyaltyPoints.prototype.setAgerestriction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.LoyaltyPoints} returns this
 */
proto.assets.LoyaltyPoints.prototype.clearAgerestriction = function() {
  return this.setAgerestriction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.LoyaltyPoints.prototype.hasAgerestriction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string OfferName = 2;
 * @return {string}
 */
proto.assets.LoyaltyPoints.prototype.getOffername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.LoyaltyPoints} returns this
 */
proto.assets.LoyaltyPoints.prototype.setOffername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 ExpirationTimestamp = 4;
 * @return {number}
 */
proto.assets.LoyaltyPoints.prototype.getExpirationtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.LoyaltyPoints} returns this
 */
proto.assets.LoyaltyPoints.prototype.setExpirationtimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string Description = 5;
 * @return {string}
 */
proto.assets.LoyaltyPoints.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.LoyaltyPoints} returns this
 */
proto.assets.LoyaltyPoints.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool TransfersPermitted = 6;
 * @return {boolean}
 */
proto.assets.LoyaltyPoints.prototype.getTransferspermitted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.assets.LoyaltyPoints} returns this
 */
proto.assets.LoyaltyPoints.prototype.setTransferspermitted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.TicketAdmission.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.TicketAdmission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.TicketAdmission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.TicketAdmission.toObject = function(includeInstance, msg) {
  var f, obj = {
    agerestriction: (f = msg.getAgerestriction()) && proto.assets.AgeRestrictionField.toObject(includeInstance, f),
    admissiontype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    venue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pb_class: jspb.Message.getFieldWithDefault(msg, 4, ""),
    area: jspb.Message.getFieldWithDefault(msg, 5, ""),
    seat: jspb.Message.getFieldWithDefault(msg, 6, ""),
    starttimedate: jspb.Message.getFieldWithDefault(msg, 7, 0),
    expirationtimestamp: jspb.Message.getFieldWithDefault(msg, 9, 0),
    description: jspb.Message.getFieldWithDefault(msg, 10, ""),
    transferspermitted: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.TicketAdmission}
 */
proto.assets.TicketAdmission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.TicketAdmission;
  return proto.assets.TicketAdmission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.TicketAdmission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.TicketAdmission}
 */
proto.assets.TicketAdmission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.assets.AgeRestrictionField;
      reader.readMessage(value,proto.assets.AgeRestrictionField.deserializeBinaryFromReader);
      msg.setAgerestriction(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmissiontype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVenue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClass(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setArea(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeat(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStarttimedate(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpirationtimestamp(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferspermitted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.TicketAdmission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.TicketAdmission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.TicketAdmission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.TicketAdmission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAgerestriction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.assets.AgeRestrictionField.serializeBinaryToWriter
    );
  }
  f = message.getAdmissiontype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVenue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClass();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getArea();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSeat();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStarttimedate();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getExpirationtimestamp();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTransferspermitted();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional AgeRestrictionField AgeRestriction = 1;
 * @return {?proto.assets.AgeRestrictionField}
 */
proto.assets.TicketAdmission.prototype.getAgerestriction = function() {
  return /** @type{?proto.assets.AgeRestrictionField} */ (
    jspb.Message.getWrapperField(this, proto.assets.AgeRestrictionField, 1));
};


/**
 * @param {?proto.assets.AgeRestrictionField|undefined} value
 * @return {!proto.assets.TicketAdmission} returns this
*/
proto.assets.TicketAdmission.prototype.setAgerestriction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.TicketAdmission} returns this
 */
proto.assets.TicketAdmission.prototype.clearAgerestriction = function() {
  return this.setAgerestriction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.TicketAdmission.prototype.hasAgerestriction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string AdmissionType = 2;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getAdmissiontype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.TicketAdmission} returns this
 */
proto.assets.TicketAdmission.prototype.setAdmissiontype = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Venue = 3;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getVenue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.TicketAdmission} returns this
 */
proto.assets.TicketAdmission.prototype.setVenue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Class = 4;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.TicketAdmission} returns this
 */
proto.assets.TicketAdmission.prototype.setClass = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Area = 5;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getArea = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.TicketAdmission} returns this
 */
proto.assets.TicketAdmission.prototype.setArea = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Seat = 6;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getSeat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.TicketAdmission} returns this
 */
proto.assets.TicketAdmission.prototype.setSeat = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 StartTimeDate = 7;
 * @return {number}
 */
proto.assets.TicketAdmission.prototype.getStarttimedate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.TicketAdmission} returns this
 */
proto.assets.TicketAdmission.prototype.setStarttimedate = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 ExpirationTimestamp = 9;
 * @return {number}
 */
proto.assets.TicketAdmission.prototype.getExpirationtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.TicketAdmission} returns this
 */
proto.assets.TicketAdmission.prototype.setExpirationtimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string Description = 10;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.TicketAdmission} returns this
 */
proto.assets.TicketAdmission.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool TransfersPermitted = 11;
 * @return {boolean}
 */
proto.assets.TicketAdmission.prototype.getTransferspermitted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.assets.TicketAdmission} returns this
 */
proto.assets.TicketAdmission.prototype.setTransferspermitted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.CasinoChip.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.CasinoChip.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.CasinoChip} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.CasinoChip.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usetype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    agerestriction: (f = msg.getAgerestriction()) && proto.assets.AgeRestrictionField.toObject(includeInstance, f),
    expirationtimestamp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    precision: jspb.Message.getFieldWithDefault(msg, 6, 0),
    transferspermitted: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.CasinoChip}
 */
proto.assets.CasinoChip.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.CasinoChip;
  return proto.assets.CasinoChip.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.CasinoChip} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.CasinoChip}
 */
proto.assets.CasinoChip.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsetype(value);
      break;
    case 3:
      var value = new proto.assets.AgeRestrictionField;
      reader.readMessage(value,proto.assets.AgeRestrictionField.deserializeBinaryFromReader);
      msg.setAgerestriction(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpirationtimestamp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPrecision(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferspermitted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.CasinoChip.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.CasinoChip.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.CasinoChip} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.CasinoChip.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsetype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAgerestriction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.assets.AgeRestrictionField.serializeBinaryToWriter
    );
  }
  f = message.getExpirationtimestamp();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getPrecision();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getTransferspermitted();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string CurrencyCode = 1;
 * @return {string}
 */
proto.assets.CasinoChip.prototype.getCurrencycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.CasinoChip} returns this
 */
proto.assets.CasinoChip.prototype.setCurrencycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string UseType = 2;
 * @return {string}
 */
proto.assets.CasinoChip.prototype.getUsetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.CasinoChip} returns this
 */
proto.assets.CasinoChip.prototype.setUsetype = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional AgeRestrictionField AgeRestriction = 3;
 * @return {?proto.assets.AgeRestrictionField}
 */
proto.assets.CasinoChip.prototype.getAgerestriction = function() {
  return /** @type{?proto.assets.AgeRestrictionField} */ (
    jspb.Message.getWrapperField(this, proto.assets.AgeRestrictionField, 3));
};


/**
 * @param {?proto.assets.AgeRestrictionField|undefined} value
 * @return {!proto.assets.CasinoChip} returns this
*/
proto.assets.CasinoChip.prototype.setAgerestriction = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.assets.CasinoChip} returns this
 */
proto.assets.CasinoChip.prototype.clearAgerestriction = function() {
  return this.setAgerestriction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.assets.CasinoChip.prototype.hasAgerestriction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 ExpirationTimestamp = 5;
 * @return {number}
 */
proto.assets.CasinoChip.prototype.getExpirationtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.CasinoChip} returns this
 */
proto.assets.CasinoChip.prototype.setExpirationtimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 Precision = 6;
 * @return {number}
 */
proto.assets.CasinoChip.prototype.getPrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.CasinoChip} returns this
 */
proto.assets.CasinoChip.prototype.setPrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool TransfersPermitted = 7;
 * @return {boolean}
 */
proto.assets.CasinoChip.prototype.getTransferspermitted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.assets.CasinoChip} returns this
 */
proto.assets.CasinoChip.prototype.setTransferspermitted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.AgeRestrictionField.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.AgeRestrictionField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.AgeRestrictionField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.AgeRestrictionField.toObject = function(includeInstance, msg) {
  var f, obj = {
    lower: jspb.Message.getFieldWithDefault(msg, 1, 0),
    upper: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.AgeRestrictionField}
 */
proto.assets.AgeRestrictionField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.AgeRestrictionField;
  return proto.assets.AgeRestrictionField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.AgeRestrictionField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.AgeRestrictionField}
 */
proto.assets.AgeRestrictionField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLower(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUpper(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.AgeRestrictionField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.AgeRestrictionField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.AgeRestrictionField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.AgeRestrictionField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLower();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getUpper();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 Lower = 1;
 * @return {number}
 */
proto.assets.AgeRestrictionField.prototype.getLower = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.AgeRestrictionField} returns this
 */
proto.assets.AgeRestrictionField.prototype.setLower = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Upper = 2;
 * @return {number}
 */
proto.assets.AgeRestrictionField.prototype.getUpper = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.AgeRestrictionField} returns this
 */
proto.assets.AgeRestrictionField.prototype.setUpper = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.CurrencyValueField.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.CurrencyValueField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.CurrencyValueField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.CurrencyValueField.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    currencycode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    precision: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.CurrencyValueField}
 */
proto.assets.CurrencyValueField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.CurrencyValueField;
  return proto.assets.CurrencyValueField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.CurrencyValueField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.CurrencyValueField}
 */
proto.assets.CurrencyValueField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencycode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrecision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.CurrencyValueField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.CurrencyValueField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.CurrencyValueField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.CurrencyValueField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCurrencycode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrecision();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint64 Value = 1;
 * @return {number}
 */
proto.assets.CurrencyValueField.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.CurrencyValueField} returns this
 */
proto.assets.CurrencyValueField.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string CurrencyCode = 2;
 * @return {string}
 */
proto.assets.CurrencyValueField.prototype.getCurrencycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.assets.CurrencyValueField} returns this
 */
proto.assets.CurrencyValueField.prototype.setCurrencycode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 Precision = 3;
 * @return {number}
 */
proto.assets.CurrencyValueField.prototype.getPrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.CurrencyValueField} returns this
 */
proto.assets.CurrencyValueField.prototype.setPrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.RateField.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.RateField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.RateField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.RateField.toObject = function(includeInstance, msg) {
  var f, obj = {
    precision: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.RateField}
 */
proto.assets.RateField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.RateField;
  return proto.assets.RateField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.RateField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.RateField}
 */
proto.assets.RateField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrecision(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.RateField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.assets.RateField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.assets.RateField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.assets.RateField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrecision();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint32 Precision = 1;
 * @return {number}
 */
proto.assets.RateField.prototype.getPrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.RateField} returns this
 */
proto.assets.RateField.prototype.setPrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 Value = 2;
 * @return {number}
 */
proto.assets.RateField.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.assets.RateField} returns this
 */
proto.assets.RateField.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


