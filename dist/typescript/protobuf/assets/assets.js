/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.assets.AgeRestrictionField');
goog.provide('proto.assets.Coupon');
goog.provide('proto.assets.Currency');
goog.provide('proto.assets.LoyaltyPoints');
goog.provide('proto.assets.Membership');
goog.provide('proto.assets.ShareCommon');
goog.provide('proto.assets.TicketAdmission');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.Membership = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.Membership, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.assets.Membership.displayName = 'proto.assets.Membership';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.Membership.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.Membership.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.Membership} msg The msg instance to transform.
 * @return {!Object}
 */
proto.assets.Membership.toObject = function(includeInstance, msg) {
  var f, obj = {
    agerestriction: (f = msg.getAgerestriction()) && proto.assets.AgeRestrictionField.toObject(includeInstance, f),
    validfrom: msg.getValidfrom(),
    expirationtimestamp: msg.getExpirationtimestamp(),
    id: msg.getId(),
    membershipclass: msg.getMembershipclass(),
    roletype: msg.getRoletype(),
    membershiptype: msg.getMembershiptype(),
    description: msg.getDescription()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.Membership}
 */
proto.assets.Membership.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.Membership;
  return proto.assets.Membership.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.Membership} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.Membership}
 */
proto.assets.Membership.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.assets.AgeRestrictionField;
      reader.readMessage(value,proto.assets.AgeRestrictionField.deserializeBinaryFromReader);
      msg.setAgerestriction(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValidfrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpirationtimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMembershipclass(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoletype(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMembershiptype(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.assets.Membership} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.Membership.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.Membership.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.Membership.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAgerestriction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.assets.AgeRestrictionField.serializeBinaryToWriter
    );
  }
  f = this.getValidfrom();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = this.getExpirationtimestamp();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getMembershipclass();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getRoletype();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getMembershiptype();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.assets.Membership} The clone.
 */
proto.assets.Membership.prototype.cloneMessage = function() {
  return /** @type {!proto.assets.Membership} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional AgeRestrictionField AgeRestriction = 1;
 * @return {proto.assets.AgeRestrictionField}
 */
proto.assets.Membership.prototype.getAgerestriction = function() {
  return /** @type{proto.assets.AgeRestrictionField} */ (
    jspb.Message.getWrapperField(this, proto.assets.AgeRestrictionField, 1));
};


/** @param {proto.assets.AgeRestrictionField|undefined} value  */
proto.assets.Membership.prototype.setAgerestriction = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.assets.Membership.prototype.clearAgerestriction = function() {
  this.setAgerestriction(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.assets.Membership.prototype.hasAgerestriction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 ValidFrom = 2;
 * @return {number}
 */
proto.assets.Membership.prototype.getValidfrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.assets.Membership.prototype.setValidfrom = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint64 ExpirationTimestamp = 3;
 * @return {number}
 */
proto.assets.Membership.prototype.getExpirationtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.assets.Membership.prototype.setExpirationtimestamp = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string ID = 4;
 * @return {string}
 */
proto.assets.Membership.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.assets.Membership.prototype.setId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string MembershipClass = 5;
 * @return {string}
 */
proto.assets.Membership.prototype.getMembershipclass = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.assets.Membership.prototype.setMembershipclass = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string RoleType = 6;
 * @return {string}
 */
proto.assets.Membership.prototype.getRoletype = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.assets.Membership.prototype.setRoletype = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string MembershipType = 7;
 * @return {string}
 */
proto.assets.Membership.prototype.getMembershiptype = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.assets.Membership.prototype.setMembershiptype = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string Description = 8;
 * @return {string}
 */
proto.assets.Membership.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.assets.Membership.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.Currency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.Currency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.assets.Currency.displayName = 'proto.assets.Currency';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.Currency.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.Currency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.Currency} msg The msg instance to transform.
 * @return {!Object}
 */
proto.assets.Currency.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencycode: msg.getCurrencycode(),
    monetaryauthority: msg.getMonetaryauthority(),
    description: msg.getDescription()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.Currency}
 */
proto.assets.Currency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.Currency;
  return proto.assets.Currency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.Currency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.Currency}
 */
proto.assets.Currency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMonetaryauthority(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.assets.Currency} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.Currency.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.Currency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.Currency.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCurrencycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getMonetaryauthority();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.assets.Currency} The clone.
 */
proto.assets.Currency.prototype.cloneMessage = function() {
  return /** @type {!proto.assets.Currency} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string CurrencyCode = 1;
 * @return {string}
 */
proto.assets.Currency.prototype.getCurrencycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.assets.Currency.prototype.setCurrencycode = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string MonetaryAuthority = 2;
 * @return {string}
 */
proto.assets.Currency.prototype.getMonetaryauthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.assets.Currency.prototype.setMonetaryauthority = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string Description = 3;
 * @return {string}
 */
proto.assets.Currency.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.assets.Currency.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.ShareCommon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.ShareCommon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.assets.ShareCommon.displayName = 'proto.assets.ShareCommon';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.ShareCommon.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.ShareCommon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.ShareCommon} msg The msg instance to transform.
 * @return {!Object}
 */
proto.assets.ShareCommon.toObject = function(includeInstance, msg) {
  var f, obj = {
    transferlockout: msg.getTransferlockout(),
    ticker: msg.getTicker(),
    isin: msg.getIsin(),
    description: msg.getDescription()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.ShareCommon}
 */
proto.assets.ShareCommon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.ShareCommon;
  return proto.assets.ShareCommon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.ShareCommon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.ShareCommon}
 */
proto.assets.ShareCommon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTransferlockout(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsin(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.assets.ShareCommon} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.ShareCommon.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.ShareCommon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.ShareCommon.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getTransferlockout();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = this.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getIsin();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.assets.ShareCommon} The clone.
 */
proto.assets.ShareCommon.prototype.cloneMessage = function() {
  return /** @type {!proto.assets.ShareCommon} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint64 TransferLockout = 1;
 * @return {number}
 */
proto.assets.ShareCommon.prototype.getTransferlockout = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.assets.ShareCommon.prototype.setTransferlockout = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string Ticker = 2;
 * @return {string}
 */
proto.assets.ShareCommon.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.assets.ShareCommon.prototype.setTicker = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string ISIN = 3;
 * @return {string}
 */
proto.assets.ShareCommon.prototype.getIsin = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.assets.ShareCommon.prototype.setIsin = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string Description = 4;
 * @return {string}
 */
proto.assets.ShareCommon.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.assets.ShareCommon.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.Coupon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.Coupon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.assets.Coupon.displayName = 'proto.assets.Coupon';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.Coupon.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.Coupon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.Coupon} msg The msg instance to transform.
 * @return {!Object}
 */
proto.assets.Coupon.toObject = function(includeInstance, msg) {
  var f, obj = {
    redeemingentity: msg.getRedeemingentity(),
    issuedate: msg.getIssuedate(),
    expirydate: msg.getExpirydate(),
    value: msg.getValue(),
    currency: msg.getCurrency(),
    description: msg.getDescription()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.Coupon}
 */
proto.assets.Coupon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.Coupon;
  return proto.assets.Coupon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.Coupon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.Coupon}
 */
proto.assets.Coupon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedeemingentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIssuedate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpirydate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.assets.Coupon} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.Coupon.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.Coupon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.Coupon.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRedeemingentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getIssuedate();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = this.getExpirydate();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = this.getValue();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = this.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.assets.Coupon} The clone.
 */
proto.assets.Coupon.prototype.cloneMessage = function() {
  return /** @type {!proto.assets.Coupon} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string RedeemingEntity = 1;
 * @return {string}
 */
proto.assets.Coupon.prototype.getRedeemingentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.assets.Coupon.prototype.setRedeemingentity = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint64 IssueDate = 2;
 * @return {number}
 */
proto.assets.Coupon.prototype.getIssuedate = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.assets.Coupon.prototype.setIssuedate = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint64 ExpiryDate = 3;
 * @return {number}
 */
proto.assets.Coupon.prototype.getExpirydate = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.assets.Coupon.prototype.setExpirydate = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint64 Value = 4;
 * @return {number}
 */
proto.assets.Coupon.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.assets.Coupon.prototype.setValue = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string Currency = 5;
 * @return {string}
 */
proto.assets.Coupon.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.assets.Coupon.prototype.setCurrency = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string Description = 6;
 * @return {string}
 */
proto.assets.Coupon.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.assets.Coupon.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.LoyaltyPoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.LoyaltyPoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.assets.LoyaltyPoints.displayName = 'proto.assets.LoyaltyPoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.LoyaltyPoints.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.LoyaltyPoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.LoyaltyPoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.assets.LoyaltyPoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    agerestriction: (f = msg.getAgerestriction()) && proto.assets.AgeRestrictionField.toObject(includeInstance, f),
    offername: msg.getOffername(),
    validfrom: msg.getValidfrom(),
    expirationtimestamp: msg.getExpirationtimestamp(),
    description: msg.getDescription()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.LoyaltyPoints}
 */
proto.assets.LoyaltyPoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.LoyaltyPoints;
  return proto.assets.LoyaltyPoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.LoyaltyPoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.LoyaltyPoints}
 */
proto.assets.LoyaltyPoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.assets.AgeRestrictionField;
      reader.readMessage(value,proto.assets.AgeRestrictionField.deserializeBinaryFromReader);
      msg.setAgerestriction(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOffername(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValidfrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpirationtimestamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.assets.LoyaltyPoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.LoyaltyPoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.LoyaltyPoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.LoyaltyPoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAgerestriction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.assets.AgeRestrictionField.serializeBinaryToWriter
    );
  }
  f = this.getOffername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getValidfrom();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = this.getExpirationtimestamp();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.assets.LoyaltyPoints} The clone.
 */
proto.assets.LoyaltyPoints.prototype.cloneMessage = function() {
  return /** @type {!proto.assets.LoyaltyPoints} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional AgeRestrictionField AgeRestriction = 1;
 * @return {proto.assets.AgeRestrictionField}
 */
proto.assets.LoyaltyPoints.prototype.getAgerestriction = function() {
  return /** @type{proto.assets.AgeRestrictionField} */ (
    jspb.Message.getWrapperField(this, proto.assets.AgeRestrictionField, 1));
};


/** @param {proto.assets.AgeRestrictionField|undefined} value  */
proto.assets.LoyaltyPoints.prototype.setAgerestriction = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.assets.LoyaltyPoints.prototype.clearAgerestriction = function() {
  this.setAgerestriction(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.assets.LoyaltyPoints.prototype.hasAgerestriction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string OfferName = 2;
 * @return {string}
 */
proto.assets.LoyaltyPoints.prototype.getOffername = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.assets.LoyaltyPoints.prototype.setOffername = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint64 ValidFrom = 3;
 * @return {number}
 */
proto.assets.LoyaltyPoints.prototype.getValidfrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.assets.LoyaltyPoints.prototype.setValidfrom = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint64 ExpirationTimestamp = 4;
 * @return {number}
 */
proto.assets.LoyaltyPoints.prototype.getExpirationtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.assets.LoyaltyPoints.prototype.setExpirationtimestamp = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string Description = 5;
 * @return {string}
 */
proto.assets.LoyaltyPoints.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.assets.LoyaltyPoints.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.TicketAdmission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.TicketAdmission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.assets.TicketAdmission.displayName = 'proto.assets.TicketAdmission';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.TicketAdmission.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.TicketAdmission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.TicketAdmission} msg The msg instance to transform.
 * @return {!Object}
 */
proto.assets.TicketAdmission.toObject = function(includeInstance, msg) {
  var f, obj = {
    agerestriction: (f = msg.getAgerestriction()) && proto.assets.AgeRestrictionField.toObject(includeInstance, f),
    admissiontype: msg.getAdmissiontype(),
    venue: msg.getVenue(),
    pb_class: msg.getClass(),
    area: msg.getArea(),
    seat: msg.getSeat(),
    starttimedate: msg.getStarttimedate(),
    validfrom: msg.getValidfrom(),
    expirationtimestamp: msg.getExpirationtimestamp(),
    description: msg.getDescription()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.TicketAdmission}
 */
proto.assets.TicketAdmission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.TicketAdmission;
  return proto.assets.TicketAdmission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.TicketAdmission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.TicketAdmission}
 */
proto.assets.TicketAdmission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.assets.AgeRestrictionField;
      reader.readMessage(value,proto.assets.AgeRestrictionField.deserializeBinaryFromReader);
      msg.setAgerestriction(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmissiontype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVenue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClass(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setArea(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeat(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStarttimedate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValidfrom(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpirationtimestamp(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.assets.TicketAdmission} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.TicketAdmission.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.TicketAdmission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.TicketAdmission.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAgerestriction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.assets.AgeRestrictionField.serializeBinaryToWriter
    );
  }
  f = this.getAdmissiontype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getVenue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getClass();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getArea();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getSeat();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getStarttimedate();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = this.getValidfrom();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = this.getExpirationtimestamp();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.assets.TicketAdmission} The clone.
 */
proto.assets.TicketAdmission.prototype.cloneMessage = function() {
  return /** @type {!proto.assets.TicketAdmission} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional AgeRestrictionField AgeRestriction = 1;
 * @return {proto.assets.AgeRestrictionField}
 */
proto.assets.TicketAdmission.prototype.getAgerestriction = function() {
  return /** @type{proto.assets.AgeRestrictionField} */ (
    jspb.Message.getWrapperField(this, proto.assets.AgeRestrictionField, 1));
};


/** @param {proto.assets.AgeRestrictionField|undefined} value  */
proto.assets.TicketAdmission.prototype.setAgerestriction = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.assets.TicketAdmission.prototype.clearAgerestriction = function() {
  this.setAgerestriction(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.assets.TicketAdmission.prototype.hasAgerestriction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string AdmissionType = 2;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getAdmissiontype = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.assets.TicketAdmission.prototype.setAdmissiontype = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string Venue = 3;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getVenue = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.assets.TicketAdmission.prototype.setVenue = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string Class = 4;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.assets.TicketAdmission.prototype.setClass = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string Area = 5;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getArea = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.assets.TicketAdmission.prototype.setArea = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string Seat = 6;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getSeat = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.assets.TicketAdmission.prototype.setSeat = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional uint64 StartTimeDate = 7;
 * @return {number}
 */
proto.assets.TicketAdmission.prototype.getStarttimedate = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.assets.TicketAdmission.prototype.setStarttimedate = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional uint64 ValidFrom = 8;
 * @return {number}
 */
proto.assets.TicketAdmission.prototype.getValidfrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.assets.TicketAdmission.prototype.setValidfrom = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional uint64 ExpirationTimestamp = 9;
 * @return {number}
 */
proto.assets.TicketAdmission.prototype.getExpirationtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.assets.TicketAdmission.prototype.setExpirationtimestamp = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional string Description = 10;
 * @return {string}
 */
proto.assets.TicketAdmission.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, ""));
};


/** @param {string} value  */
proto.assets.TicketAdmission.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.assets.AgeRestrictionField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.assets.AgeRestrictionField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.assets.AgeRestrictionField.displayName = 'proto.assets.AgeRestrictionField';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.assets.AgeRestrictionField.prototype.toObject = function(opt_includeInstance) {
  return proto.assets.AgeRestrictionField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.assets.AgeRestrictionField} msg The msg instance to transform.
 * @return {!Object}
 */
proto.assets.AgeRestrictionField.toObject = function(includeInstance, msg) {
  var f, obj = {
    lower: msg.getLower(),
    upper: msg.getUpper()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.assets.AgeRestrictionField}
 */
proto.assets.AgeRestrictionField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.assets.AgeRestrictionField;
  return proto.assets.AgeRestrictionField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.assets.AgeRestrictionField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.assets.AgeRestrictionField}
 */
proto.assets.AgeRestrictionField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLower(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUpper(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.assets.AgeRestrictionField} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.AgeRestrictionField.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.assets.AgeRestrictionField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.assets.AgeRestrictionField.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getLower();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = this.getUpper();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.assets.AgeRestrictionField} The clone.
 */
proto.assets.AgeRestrictionField.prototype.cloneMessage = function() {
  return /** @type {!proto.assets.AgeRestrictionField} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 Lower = 1;
 * @return {number}
 */
proto.assets.AgeRestrictionField.prototype.getLower = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.assets.AgeRestrictionField.prototype.setLower = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 Upper = 2;
 * @return {number}
 */
proto.assets.AgeRestrictionField.prototype.getUpper = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.assets.AgeRestrictionField.prototype.setUpper = function(value) {
  jspb.Message.setField(this, 2, value);
};


